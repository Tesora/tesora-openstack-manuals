..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _neutron-common:

.. list-table:: Description of common configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``agent_down_time`` = ``75``
     - (IntOpt) Seconds to regard the agent is down; should be at least twice report_interval, to be sure the agent is down for good.
   * - ``api_workers`` = ``None``
     - (IntOpt) Number of separate API worker processes for service. If not specified, the default is equal to the number of CPUs available for best performance.
   * - ``auth_ca_cert`` = ``None``
     - (StrOpt) Certificate Authority public key (CA cert) file for ssl
   * - ``auth_strategy`` = ``keystone``
     - (StrOpt) The type of authentication to use
   * - ``base_mac`` = ``fa:16:3e:00:00:00``
     - (StrOpt) The base MAC address Neutron will use for VIFs. The first 3 octets will remain unchanged. If the 4th octet is not 00, it will also be used. The others will be randomly generated.
   * - ``bind_host`` = ``0.0.0.0``
     - (StrOpt) The host IP to bind to
   * - ``bind_port`` = ``9696``
     - (PortOpt) The port to bind to
   * - ``core_plugin`` = ``None``
     - (StrOpt) The core plugin Neutron will use
   * - ``default_availability_zones`` =
     - (ListOpt) Default value of availability zone hints. The availability zone aware schedulers use this when the resources availability_zone_hints is empty. Multiple availability zones can be specified by a comma separated string. This value can be empty. In this case, even if availability_zone_hints for a resource is empty, availability zone is considered for high availability while scheduling the resource.
   * - ``default_ipv4_subnet_pool`` = ``None``
     - (StrOpt) Default IPv4 subnet pool to be used for automatic subnet CIDR allocation. Specifies by UUID the pool to be used in case where creation of a subnet is being called without a subnet pool ID. If not set then no pool will be used unless passed explicitly to the subnet create. If no pool is used, then a CIDR must be passed to create a subnet and that subnet will not be allocated from any pool; it will be considered part of the tenant's private address space. This option is deprecated for removal in the N release.
   * - ``default_ipv6_subnet_pool`` = ``None``
     - (StrOpt) Default IPv6 subnet pool to be used for automatic subnet CIDR allocation. Specifies by UUID the pool to be used in case where creation of a subnet is being called without a subnet pool ID. See the description for default_ipv4_subnet_pool for more information. This option is deprecated for removal in the N release.
   * - ``dhcp_agent_notification`` = ``True``
     - (BoolOpt) Allow sending resource operation notification to DHCP agent
   * - ``dhcp_agents_per_network`` = ``1``
     - (IntOpt) Number of DHCP agents scheduled to host a tenant network. If this number is greater than 1, the scheduler automatically assigns multiple DHCP agents for a given tenant network, providing high availability for DHCP service.
   * - ``dhcp_broadcast_reply`` = ``False``
     - (BoolOpt) Use broadcast in DHCP replies
   * - ``dhcp_confs`` = ``$state_path/dhcp``
     - (StrOpt) Location to store DHCP server config files
   * - ``dhcp_domain`` = ``openstacklocal``
     - (StrOpt) Domain to use for building the hostnames.This option is deprecated. It has been moved to neutron.conf as dns_domain. It will removed from here in a future release
   * - ``dhcp_lease_duration`` = ``86400``
     - (IntOpt) DHCP lease duration (in seconds). Use -1 to tell dnsmasq to use infinite lease times.
   * - ``dhcp_load_type`` = ``networks``
     - (StrOpt) Representing the resource type whose load is being reported by the agent. This can be "networks", "subnets" or "ports". When specified (Default is networks), the server will extract particular load sent as part of its agent configuration object from the agent report state, which is the number of resources being consumed, at every report_interval.dhcp_load_type can be used in combination with network_scheduler_driver = neutron.scheduler.dhcp_agent_scheduler.WeightScheduler When the network_scheduler_driver is WeightScheduler, dhcp_load_type can be configured to represent the choice for the resource being balanced. Example: dhcp_load_type=networks
   * - ``dns_domain`` = ``openstacklocal``
     - (StrOpt) Domain to use for building the hostnames
   * - ``enable_new_agents`` = ``True``
     - (BoolOpt) Agent starts with admin_state_up=False when enable_new_agents=False. In the case, user's resources will not be scheduled automatically to the agent until admin changes admin_state_up to True.
   * - ``enable_services_on_agents_with_admin_state_down`` = ``False``
     - (BoolOpt) Enable services on an agent with admin_state_up False. If this option is False, when admin_state_up of an agent is turned False, services on it will be disabled. Agents with admin_state_up False are not selected for automatic scheduling regardless of this option. But manual scheduling to such agents is available if this option is True.
   * - ``executor_thread_pool_size`` = ``64``
     - (IntOpt) Size of executor thread pool.
   * - ``force_gateway_on_subnet`` = ``True``
     - (BoolOpt) Ensure that configured gateway is on subnet. For IPv6, validate only if gateway is not a link local address.
   * - ``ip_lib_force_root`` = ``False``
     - (BoolOpt) Force ip_lib calls to use the root helper
   * - ``ipam_driver`` = ``None``
     - (StrOpt) Neutron IPAM (IP address management) driver to use. If ipam_driver is not set (default behavior), no IPAM driver is used. In order to use the reference implementation of Neutron IPAM driver, use 'internal'.
   * - ``mac_generation_retries`` = ``16``
     - (IntOpt) How many times Neutron will retry MAC generation
   * - ``max_allowed_address_pair`` = ``10``
     - (IntOpt) Maximum number of allowed address pairs
   * - ``max_dns_nameservers`` = ``5``
     - (IntOpt) Maximum number of DNS nameservers per subnet
   * - ``max_fixed_ips_per_port`` = ``5``
     - (IntOpt) Maximum number of fixed ips per port. This option is deprecated and will be removed in the N release.
   * - ``max_subnet_host_routes`` = ``20``
     - (IntOpt) Maximum number of host routes per subnet
   * - ``memcached_servers`` = ``None``
     - (ListOpt) Memcached servers or None for in process cache.
   * - ``password`` =
     - (StrOpt) Password for Redis server (optional).
   * - ``periodic_fuzzy_delay`` = ``5``
     - (IntOpt) Range of seconds to randomly delay when starting the periodic task scheduler to reduce stampeding. (Disable by setting to 0)
   * - ``periodic_interval`` = ``40``
     - (IntOpt) Seconds between running periodic tasks
   * - ``report_interval`` = ``300``
     - (IntOpt) Interval between two metering reports
   * - ``state_path`` = ``/var/lib/neutron``
     - (StrOpt) Where to store Neutron state files. This directory must be writable by the agent.
   * - ``vlan_transparent`` = ``False``
     - (BoolOpt) If True, then allow plugins that support it to create VLAN transparent networks.
   * - **[AGENT]**
     -
   * - ``check_child_processes_action`` = ``respawn``
     - (StrOpt) Action to be executed when a child process dies
   * - ``check_child_processes_interval`` = ``60``
     - (IntOpt) Interval between checks of child process liveness (seconds), use 0 to disable
   * - ``log_agent_heartbeats`` = ``False``
     - (BoolOpt) Log agent heartbeats
   * - ``root_helper`` = ``sudo``
     - (StrOpt) Root helper application. Use 'sudo neutron-rootwrap /etc/neutron/rootwrap.conf' to use the real root filter facility. Change to 'sudo' to skip the filtering and just run the command directly.
   * - ``root_helper_daemon`` = ``None``
     - (StrOpt) Root helper daemon application to use when possible.
   * - **[keystone_authtoken]**
     -
   * - ``memcached_servers`` = ``None``
     - (ListOpt) Optionally specify a list of memcached server(s) to use for caching. If left undefined, tokens will instead be cached in-process.
   * - **[qos]**
     -
   * - ``notification_drivers`` = ``message_queue``
     - (ListOpt) Drivers list to use to send the update notification
   * - **[service_providers]**
     -
   * - ``service_provider`` = ``[]``
     - (MultiStrOpt) Defines providers for advanced services using the format: <service_type>:<name>:<driver>[:default]
