<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="neutron_misc_commands">

  <!-- This file is manually generated, unlike many of the other chapters. -->

    <?dbhtml stop-chunking?>

    <title>miscellaneous networking command-line client</title>

    <section xml:id="neutron-debug_commands">

    <title>neutron-debug command-line client</title>
    <para>The <command>neutron-debug</command> client is an extension
    to the <command>neutron</command> command-line interface (CLI) for the OpenStack
    neutron-debug tool. This chapter documents
      <command>neutron-debug</command> version 2.3.0.</para>
    <para>For help on a specific <command>neutron-debug</command>
    command, enter:</para>
    <screen><prompt>$</prompt> <userinput><command>neutron-debug</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>
    <section xml:id="neutron-debug_command_usage">
       <title>neutron-debug usage</title>
        <screen><computeroutput>              [--os-password &lt;auth-password&gt;]
              [--os-tenant-name &lt;auth-tenant-name&gt;]
              [--os-tenant-id &lt;auth-tenant-id&gt;] [--os-auth-url &lt;auth-url&gt;]
              [--os-region-name &lt;region-name&gt;] [--service-type &lt;service-type&gt;]
              [--service-name &lt;service-name&gt;]
              [--volume-service-name &lt;volume-service-name&gt;]
              [--endpoint-type &lt;endpoint-type&gt;]
              [--os-volume-api-version &lt;volume-api-ver&gt;]
              [--os-cacert &lt;ca-certificate&gt;] [--retries &lt;retries&gt;]
              &lt;subcommand&gt; ...
</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>probe-create</command></term>
    <listitem>
      <para>
        Create probe port - create port and interface within a network namespace.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>probe-list</command></term>
    <listitem>
      <para>
      List all probes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>probe-clear</command></term>
    <listitem>
      <para>
        Clear all probes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>probe-delete</command></term>
    <listitem>
      <para>
        Delete probe - delete port then delete the namespace.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>probe-exec</command></term>
    <listitem>
      <para>
        Execute commands in the namespace of the probe.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>ping-all</command></term>
    <listitem>
      <para>
        ping-all is an all-in-one command to ping all fixed IPs in a specified network.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
  <section xml:id="neutron-debug_command_optional">
        <title>neutron-debug optional arguments</title>
  <variablelist wordsize="10">
      <varlistentry>
        <term><command>--version</command></term>
        <listitem>
          <para>Show version number and exit.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>-v, --verbose, --debug</command></term>
        <listitem>
          <para>Increase verbosity of output and show tracebacks on
            errors. Can be repeated.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>-q, --quiet</command></term>
        <listitem>
          <para>Suppress output except warnings and errors</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>-h, --help</command></term>
        <listitem>
          <para>Show this help message and exit</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-auth-strategy
            &lt;auth-strategy&gt;</command></term>
        <listitem>
          <para>Authentication strategy (Env: OS_AUTH_STRATEGY,
            default keystone). For now, any other value will disable
            the authentication</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-auth-url &lt;auth-url&gt;</command></term>
        <listitem>
          <para>Authentication URL (Env: OS_AUTH_URL)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-tenant-name
            &lt;auth-tenant-name&gt;</command></term>
        <listitem>
          <para>Authentication tenant name (Env: OS_TENANT_NAME)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-tenant-id
          &lt;auth-tenant-id&gt;</command></term>
        <listitem>
          <para>Authentication tenant name (Env: OS_TENANT_ID)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-username
          &lt;auth-username&gt;</command></term>
        <listitem>
          <para>Authentication username (Env: OS_USERNAME)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-password
          &lt;auth-password&gt;</command></term>
        <listitem>
          <para>Authentication password (Env: OS_PASSWORD)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-region-name
            &lt;auth-region-name&gt;</command></term>
        <listitem>
          <para>Authentication region name (Env: OS_REGION_NAME)
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-token &lt;token&gt;</command></term>
        <listitem>
          <para>Defaults to <code>env[OS_TOKEN]</code>
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--endpoint-type
          &lt;endpoint-type&gt;</command></term>
        <listitem>
          <para>Defaults to <code>env[OS_ENDPOINT_TYPE]</code> or
            public URL.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-url &lt;url&gt;</command></term>
        <listitem>
          <para>Defaults to <code>env[OS_URL]</code>
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--os-cacert
          &lt;ca-certificate&gt;</command></term>
        <listitem>
          <para>Specify a CA bundle file to use in verifying a TLS
            (HTTPS) server certificate. Defaults to
              <code>env[OS_CACERT]</code>
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--insecure</command></term>
        <listitem>
          <para>Explicitly allow neutron-debug to perform "insecure"
            SSL (HTTPS) requests. The server's certificate will not be
            verified against any certificate authorities. This option
            should be used with caution.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--config-file CONFIG_FILE</command></term>
        <listitem>
          <para>Config file for interface driver (You may also use
            l3_agent.ini)</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </section>
  <section xml:id="neutron-debug_subcommand_probe-create">
        <title>neutron-debug probe-create command</title>
        <screen><computeroutput>usage: neutron-debug probe-create NET</computeroutput></screen>
        <para>Create probe port - create port and interface, then
          place it into the created network namespace.</para>     <variablelist wordsize="10">
            <title>Positional arguments</title>
            <varlistentry>
              <term><command>NET ID</command></term>
              <listitem>
                <para>ID of the network in which the probe will be
            created.</para>
              </listitem>
            </varlistentry>
          </variablelist>
    </section>
  <section xml:id="neutron-debug_subcommand_probe-list">
        <title>neutron-debug probe-list command</title>
        <screen><computeroutput>usage: neutron-debug probe-list</computeroutput></screen>
        <para>List probes.</para>
  </section>
  <section xml:id="neutron-debug_subcommand_probe-clear">
        <title>neutron-debug probe-clear command</title>
        <screen><computeroutput>usage: neutron-debug probe-clear</computeroutput></screen>
        <para>Clear all probes.</para>
    </section>
  <section xml:id="neutron-debug_subcommand_probe-delete">
        <title>neutron-debug probe-delete command</title>
        <screen><computeroutput>usage: neutron-debug probe-delete &lt;port-id&gt;</computeroutput></screen>
        <para>
Remove a probe.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;port-id&gt;</command></term>
    <listitem>
      <para>ID of the probe to delete.</para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
  <section xml:id="neutron-debug_subcommand_probe-exec">
        <title>neutron-debug probe-exec command</title>
        <screen><computeroutput>usage: neutron-debug probe-exec &lt;port-id> &lt;command></computeroutput></screen>
        <para>Execute commands in the namespace of the probe</para>
  </section>
  <section xml:id="neutron-debug_subcommand_ping-all">
        <title>neutron-debug ping-all command</title>
        <screen><computeroutput>usage: neutron-debug ping-all &lt;port-id> --timeout &lt;number</computeroutput></screen>
        <para>All-in-one command to ping all fixed IPs
      in a specified network. A probe creation is not needed
      for this command. A new probe is created automatically. It will,
      however, need to be deleted manually when it is no longer needed.
      When there are multiple networks, the newly created probe will be
      attached to a random network and thus the ping will take
      place from within that random network.</para>
  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;port-id&gt;</command></term>
    <listitem>
      <para>ID of the port to use.</para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--timeout &lt;timeout in
          seconds&gt;</command></term>
    <listitem>
      <para>Optional ping timeout.</para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
  <section xml:id="neutron-debug_subcommand_backup-show">
        <title>neutron-debug example</title>
        <screen><computeroutput>usage: neutron-debug create-probe &lt; NET_ID&gt;</computeroutput></screen>
        <para>Create a probe namespace within the network identified
      by NET_ID. The namespace will have the name of qprobe-&lt;UUID
      of the probe port></para>
      <note><para>For the following examples to function, the security group rules
        may need to be modified to allow the SSH (TCP port 22) or ping
        (ICMP) traffic into network.</para></note>
      <screen><computeroutput>usage: neutron-debug probe-exec &lt;probe ID> "ssh &lt;IP of instance&gt;"</computeroutput></screen>
      <para>SSH to an instance within the network.</para>
      <screen><computeroutput>usage: neutron-debug ping-all &lt;network ID&gt;"</computeroutput></screen>
      <para>Ping all instances on this network to verify they are
      responding.</para>
      <screen><computeroutput>usage: neutron-debug probe-exec &lt;probe_ID> dhcping &lt;VM_MAC address&gt; -s &lt;IP of DHCP server&gt;"</computeroutput></screen>
      <para>Ping the DHCP server for this network using dhcping to
      verify it is working.</para>
    </section>
    </section>
    <section xml:id="neutron-sanity-check_commands">
    <title>neutron-sanity-check command-line client</title>
    <para>The <command>neutron-sanity-check</command> client is a tool
    that checks various sanity about the Networking service. This chapter
    documents <command>neutron-sanity-check</command> version 7.0.2.</para>
    <section xml:id="neutron-sanity-check_command_usage">
    <title>neutron-sanity-check usage</title>
    <screen><computeroutput>usage: neutron-sanity-check [-h] [--arp_header_match] [--arp_responder]
                            [--config-dir DIR] [--config-file PATH] [--debug]
                            [--dibbler_version] [--dnsmasq_version]
                            [--ebtables_installed] [--icmpv6_header_match]
                            [--iproute2_vxlan] [--keepalived_ipv6_support]
                            [--log-config-append PATH]
                            [--log-date-format DATE_FORMAT]
                            [--log-dir LOG_DIR] [--log-file PATH]
                            [--log-format FORMAT] [--noarp_header_match]
                            [--noarp_responder] [--nodebug]
                            [--nodibbler_version] [--nodnsmasq_version]
                            [--noebtables_installed] [--noicmpv6_header_match]
                            [--noiproute2_vxlan] [--nokeepalived_ipv6_support]
                            [--nonova_notify] [--noovs_geneve] [--noovs_patch]
                            [--noovs_vxlan] [--noovsdb_native]
                            [--noread_netns] [--nouse-syslog]
                            [--nouse-syslog-rfc-format] [--nova_notify]
                            [--noverbose] [--novf_management] [--ovs_geneve]
                            [--ovs_patch] [--ovs_vxlan] [--ovsdb_native]
                            [--read_netns] [--state_path STATE_PATH]
                            [--syslog-log-facility SYSLOG_LOG_FACILITY]
                            [--use-syslog] [--use-syslog-rfc-format]
                            [--verbose] [--version] [--vf_management]</computeroutput></screen>
    </section>
    <section xml:id="neutron-sanity-check_command_optional">
    <title>neutron-sanity-check optional arguments</title>
    <variablelist wordsize="10">
      <varlistentry>
        <term><command>-h, --help</command></term>
        <listitem>
          <para>show this help message and exit</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--arp_header_match</command></term>
        <listitem>
          <para>Check for ARP header match support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--arp_responder</command></term>
        <listitem>
          <para>Check for ARP responder support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--config-dir DIR</command></term>
        <listitem>
          <para>Path to a config directory to pull *.conf files from.
                This file set is sorted, so as to provide a
                predictable parse order if individual options are
                over-ridden. The set is parsed after the file(s)
                specified via previous --config-file, arguments hence
                over-ridden options in the directory take precedence.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--config-file PATH</command></term>
        <listitem>
          <para>Path to a config file to use. Multiple config files
                can be specified, with values in later files taking
                precedence. The default files used are: None.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--debug, -d</command></term>
        <listitem>
          <para>Print debugging output (set logging level to DEBUG
                instead of default INFO level).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--dibbler_version</command></term>
        <listitem>
          <para>Check minimal dibbler version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--dnsmasq_version</command></term>
        <listitem>
          <para>Check minimal dnsmasq version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--ebtables_installed</command></term>
        <listitem>
          <para>Check ebtables installation</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--icmpv6_header_match</command></term>
        <listitem>
          <para>Check for ICMPv6 header match support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--iproute2_vxlan</command></term>
        <listitem>
          <para>Check for iproute2 vxlan support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--keepalived_ipv6_support</command></term>
        <listitem>
          <para>Check keepalived IPv6 support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--log-config-append PATH, --log_config PATH</command></term>
        <listitem>
          <para>The name of a logging configuration file. This file is
                appended to any existing logging configuration files.
                For details about logging configuration files, see the
                Python logging module documentation.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--log-date-format DATE_FORMAT</command></term>
        <listitem>
          <para>Format string for %(asctime)s in log records. Default: None.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--log-dir LOG_DIR, --logdir LOG_DIR</command></term>
        <listitem>
          <para>(Optional) The base directory used for relative
                --log-file paths.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--log-file PATH, --logfile PATH</command></term>
        <listitem>
          <para>(Optional) Name of log file to output to. If no
                default is set, logging will go to stdout.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--log-format FORMAT</command></term>
        <listitem>
          <para>DEPRECATED. A logging.Formatter log message format
                string which may use any of the available
                logging.LogRecord attributes. This option is
                deprecated. Please use logging_context_format_string
                and logging_default_format_string instead.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noarp_header_match</command></term>
        <listitem>
          <para>The inverse of --arp_header_match</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noarp_responder</command></term>
        <listitem>
          <para>The inverse of --arp_responder</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nodebug</command></term>
        <listitem>
          <para>The inverse of --debug</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nodibbler_version</command></term>
        <listitem>
          <para>The inverse of --dibbler_version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nodnsmasq_version</command></term>
        <listitem>
          <para>The inverse of --dnsmasq_version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noebtables_installed</command></term>
        <listitem>
          <para>The inverse of --ebtables_installed</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noicmpv6_header_match</command></term>
        <listitem>
          <para>The inverse of --icmpv6_header_match</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noiproute2_vxlan</command></term>
        <listitem>
          <para>The inverse of --iproute2_vxlan</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nokeepalived_ipv6_support</command></term>
        <listitem>
          <para>The inverse of --keepalived_ipv6_support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nonova_notify</command></term>
        <listitem>
          <para>The inverse of --nova_notify</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noovs_geneve</command></term>
        <listitem>
          <para>The inverse of --ovs_geneve</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noovs_patch</command></term>
        <listitem>
          <para>The inverse of --ovs_patch</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noovs_vxlan</command></term>
        <listitem>
          <para>The inverse of --ovs_vxlan</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noovsdb_native</command></term>
        <listitem>
          <para>The inverse of --ovsdb_native</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noread_netns</command></term>
        <listitem>
          <para>The inverse of --read_netns</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nouse-syslog</command></term>
        <listitem>
          <para>The inverse of --use-syslog</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nouse-syslog-rfc-format</command></term>
        <listitem>
          <para>The inverse of --use-syslog-rfc-format</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--nova_notify</command></term>
        <listitem>
          <para>Check for nova notification support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--noverbose</command></term>
        <listitem>
          <para>The inverse of --verbose</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--novf_management</command></term>
        <listitem>
          <para>The inverse of --vf_management</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--ovs_geneve</command></term>
        <listitem>
          <para>Check for OVS Geneve support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--ovs_patch</command></term>
        <listitem>
          <para>Check for patch port support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--ovs_vxlan</command></term>
        <listitem>
          <para>Check for OVS vxlan support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--ovsdb_native</command></term>
        <listitem>
          <para>Check ovsdb native interface support</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--read_netns</command></term>
        <listitem>
          <para>Check netns permission settings</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--state_path STATE_PATH</command></term>
        <listitem>
          <para>Where to store Neutron state files. This directory
                must be writable by the agent.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--syslog-log-facility SYSLOG_LOG_FACILITY</command></term>
        <listitem>
          <para>Syslog facility to receive log lines.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--use-syslog</command></term>
        <listitem>
          <para>Use syslog for logging. Existing syslog format is
                DEPRECATED and will be changed later to honor RFC5424.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--use-syslog-rfc-format</command></term>
        <listitem>
          <para>(Optional) Enables or disables syslog rfc5424 format
                for logging. If enabled, prefixes the MSG part of the
                syslog message with APP-NAME (RFC5424). The format
                without the APP-NAME is deprecated in Kilo, and will
                be removed in Mitaka, along with this option.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--verbose, -v</command></term>
        <listitem>
          <para>If set to false, will disable INFO logging level,
                making WARNING the default.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--version</command></term>
        <listitem>
          <para>show program's version number and exit</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><command>--vf_management</command></term>
        <listitem>
          <para>Check for VF management support</para>
        </listitem>
      </varlistentry>
    </variablelist>
    </section>
  </section>
</chapter>
