<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="muranoclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Application Catalog service command-line client</title>

    <para>The <command>murano</command> client is the command-line
        interface (CLI) for the Application Catalog service API and its extensions.

       This chapter documents <command>murano</command> version
        <literal>0.8.0</literal>.
    </para>

    <para>For help on a specific <command>murano</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>murano</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="muranoclient_command_usage">
       <title>murano usage</title>
        <screen><computeroutput>usage: murano [--version] [-d] [-v] [--cert-file OS_CERT] [--key-file OS_KEY]
              [--ca-file OS_CACERT] [--api-timeout API_TIMEOUT]
              [--os-tenant-id OS_TENANT_ID] [--os-tenant-name OS_TENANT_NAME]
              [--os-region-name OS_REGION_NAME]
              [--os-auth-token OS_AUTH_TOKEN] [--os-no-client-auth]
              [--murano-url MURANO_URL] [--glance-url GLANCE_URL]
              [--murano-api-version MURANO_API_VERSION]
              [--os-service-type OS_SERVICE_TYPE]
              [--os-endpoint-type OS_ENDPOINT_TYPE] [--include-password]
              [--murano-repo-url MURANO_REPO_URL] [--insecure]
              [--os-cacert &lt;ca-certificate&gt;] [--os-cert &lt;certificate&gt;]
              [--os-key &lt;key&gt;] [--timeout &lt;seconds&gt;]
              [--os-auth-url OS_AUTH_URL] [--os-domain-id OS_DOMAIN_ID]
              [--os-domain-name OS_DOMAIN_NAME]
              [--os-project-id OS_PROJECT_ID]
              [--os-project-name OS_PROJECT_NAME]
              [--os-project-domain-id OS_PROJECT_DOMAIN_ID]
              [--os-project-domain-name OS_PROJECT_DOMAIN_NAME]
              [--os-trust-id OS_TRUST_ID] [--os-user-id OS_USER_ID]
              [--os-username OS_USERNAME]
              [--os-user-domain-id OS_USER_DOMAIN_ID]
              [--os-user-domain-name OS_USER_DOMAIN_NAME]
              [--os-password OS_PASSWORD]
              &lt;subcommand&gt; ...</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>app-show</command></term>
    <listitem>
      <para>
        List applications, added to specified environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bundle-import</command></term>
    <listitem>
      <para>
        Import a bundle.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bundle-save</command></term>
    <listitem>
      <para>
        Save a bundle.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>category-create</command></term>
    <listitem>
      <para>
        Create a category.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>category-delete</command></term>
    <listitem>
      <para>
        Delete a category.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>category-list</command></term>
    <listitem>
      <para>
        List all available categories.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>category-show</command></term>
    <listitem>
      <para>
        Display category details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>deployment-list</command></term>
    <listitem>
      <para>
        List deployments for an environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-add-app</command></term>
    <listitem>
      <para>
      Add application to the environment template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-create</command></term>
    <listitem>
      <para>
      Create an environment template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-create-env</command></term>
    <listitem>
      <para>
      Create a new environment from template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-del-app</command></term>
    <listitem>
      <para>
      Delete application from the environment template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-delete</command></term>
    <listitem>
      <para>
      Delete an environment template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-list</command></term>
    <listitem>
      <para>
        List the environments templates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-show</command></term>
    <listitem>
      <para>
        Display environment template details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>env-template-update</command></term>
    <listitem>
      <para>
      Update an environment template.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-action-call</command></term>
    <listitem>
      <para>
      Call action `ACTION` in environment `ID`.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-action-get-result</command></term>
    <listitem>
      <para>
      Get result of `TASK` in environment `ID`.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-apps-edit</command></term>
    <listitem>
      <para>
      Edit environment's object model.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-create</command></term>
    <listitem>
      <para>
        Create an environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-delete</command></term>
    <listitem>
      <para>
        Delete an environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-deploy</command></term>
    <listitem>
      <para>
        Start deployment of a murano environment session.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-list</command></term>
    <listitem>
      <para>
        List the environments.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-rename</command></term>
    <listitem>
      <para>
        Rename an environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-session-create</command></term>
    <listitem>
      <para>
      Creates a new configuration session for environment
      ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>environment-show</command></term>
    <listitem>
      <para>
        Display environment details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-create</command></term>
    <listitem>
      <para>
        Create an application package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-delete</command></term>
    <listitem>
      <para>
        Delete a package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-download</command></term>
    <listitem>
      <para>
        Download a package to a filename or stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-import</command></term>
    <listitem>
      <para>
        Import a package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-list</command></term>
    <listitem>
      <para>
        List available packages.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-save</command></term>
    <listitem>
      <para>
        Save a package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-show</command></term>
    <listitem>
      <para>
        Display details for a package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>package-update</command></term>
    <listitem>
      <para>
        Edit the package in question
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_command_optional">
        <title>murano optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        Show program's version number and exit.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d, --debug</command></term>
    <listitem>
      <para>
        Defaults to <code>env[MURANOCLIENT_DEBUG]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v, --verbose</command></term>
    <listitem>
      <para>
        Print more verbose output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cert-file OS_CERT</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use --os-cert.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-file OS_KEY</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use --os-key.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ca-file OS_CACERT</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED!</emphasis> Use --os-cacert.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--api-timeout API_TIMEOUT</command></term>
    <listitem>
      <para>
      Number of seconds to wait for an API response,
      defaults to system socket timeout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id OS_TENANT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name OS_TENANT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-region-name OS_REGION_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-token OS_AUTH_TOKEN</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_TOKEN]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-no-client-auth</command></term>
    <listitem>
      <para>
        Do not contact keystone for a token. Defaults to
      <code>env[OS_NO_CLIENT_AUTH]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--murano-url MURANO_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[MURANO_URL]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--glance-url GLANCE_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[GLANCE_URL]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--murano-api-version MURANO_API_VERSION</command></term>
    <listitem>
      <para>
      Defaults to <code>env[MURANO_API_VERSION]</code> or 1.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-service-type OS_SERVICE_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_SERVICE_TYPE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint-type OS_ENDPOINT_TYPE</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_ENDPOINT_TYPE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--include-password</command></term>
    <listitem>
      <para>
        Send os-username and os-password to murano.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--murano-repo-url MURANO_REPO_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[MURANO_REPO_URL]</code> or
      http://apps.openstack.org/api/v1/murano_repo/liberty/
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insecure</command></term>
    <listitem>
      <para>
        Explicitly allow client to perform "insecure" TLS
      (https) requests. The server's certificate will not be
      verified against any certificate authorities. This
      option should be used with caution.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cacert &lt;ca-certificate&gt;</command></term>
    <listitem>
      <para>
      Specify a CA bundle file to use in verifying a TLS
      (https) server certificate. Defaults to
      <code>env[OS_CACERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cert &lt;certificate&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_CERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-key &lt;key&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_KEY]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timeout &lt;seconds&gt;</command></term>
    <listitem>
      <para>
        Set request timeout (in seconds).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url OS_AUTH_URL</command></term>
    <listitem>
      <para>
      Authentication URL
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-id OS_DOMAIN_ID</command></term>
    <listitem>
      <para>
      Domain ID to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-name OS_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Domain name to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-id OS_PROJECT_ID</command></term>
    <listitem>
      <para>
      Project ID to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-name OS_PROJECT_NAME</command></term>
    <listitem>
      <para>
      Project name to scope to
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-id OS_PROJECT_DOMAIN_ID</command></term>
    <listitem>
      <para>
      Domain ID containing project
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-name OS_PROJECT_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Domain name containing project
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-trust-id OS_TRUST_ID</command></term>
    <listitem>
      <para>
      Trust ID
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-id OS_USER_ID</command></term>
    <listitem>
      <para>
      User ID
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-username OS_USERNAME, --os-user_name OS_USERNAME</command></term>
    <listitem>
      <para>
      Username
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-id OS_USER_DOMAIN_ID</command></term>
    <listitem>
      <para>
      User's domain id
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-name OS_USER_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      User's domain name
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password OS_PASSWORD</command></term>
    <listitem>
      <para>
      User's password
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_app-show">
        <title>murano app-show</title>
        <screen><computeroutput>usage: murano app-show [-p &lt;PATH&gt;] &lt;ID&gt;</computeroutput></screen>
        <para>
List applications, added to specified environment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Environment ID to show applications from.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PATH&gt;, --path &lt;PATH&gt;</command></term>
    <listitem>
      <para>
      Level of detalization to show. Leave empty to browse
      all applications in the environment.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_bundle-import">
        <title>murano bundle-import</title>
        <screen><computeroutput>usage: murano bundle-import [--is-public] [--exists-action {a,s,u}]
                            &lt;FILE&gt; [&lt;FILE&gt; ...]</computeroutput></screen>
        <para>
Import a bundle. `FILE` can be either a path to a zip file, URL, or name from
repo. If `FILE` is a local file, treat names of packages in a bundle as file
names, relative to location of the bundle file. Requirements are first
searched in the same directory.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;FILE&gt;</command></term>
    <listitem>
      <para>
        Bundle URL, bundle name, or path to the bundle file.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--is-public</command></term>
    <listitem>
      <para>
        Make packages available to users from other tenants.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--exists-action {a,s,u}</command></term>
    <listitem>
      <para>
      Default action when a package already exists.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_bundle-save">
        <title>murano bundle-save</title>
        <screen><computeroutput>usage: murano bundle-save [-p &lt;PATH&gt;] [--no-images] &lt;BUNDLE&gt;</computeroutput></screen>
        <para>
Save a bundle. This will download a bundle of packages with all dependencies
to specified path. If path doesn't exist it will be created.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;BUNDLE&gt;</command></term>
    <listitem>
      <para>
        Bundle URL, bundle name, or path to the bundle file.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PATH&gt;, --path &lt;PATH&gt;</command></term>
    <listitem>
      <para>
      Path to the directory to store packages. If not set
      will use current directory.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--no-images</command></term>
    <listitem>
      <para>
        If set will skip images downloading.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_category-create">
        <title>murano category-create</title>
        <screen><computeroutput>usage: murano category-create &lt;CATEGORY_NAME&gt;</computeroutput></screen>
        <para>
Create a category.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CATEGORY_NAME&gt;</command></term>
    <listitem>
      <para>
        Category name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_category-delete">
        <title>murano category-delete</title>
        <screen><computeroutput>usage: murano category-delete &lt;ID&gt; [&lt;ID&gt; ...]</computeroutput></screen>
        <para>
Delete a category.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of a category(ies) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_category-list">
        <title>murano category-list</title>
        <screen><computeroutput>usage: murano category-list</computeroutput></screen>
        <para>
List all available categories.
        </para>
    </section>
    <section xml:id="muranoclient_subcommand_category-show">
        <title>murano category-show</title>
        <screen><computeroutput>usage: murano category-show &lt;ID&gt;</computeroutput></screen>
        <para>
Display category details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of a category(s) to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_deployment-list">
        <title>murano deployment-list</title>
        <screen><computeroutput>usage: murano deployment-list &lt;ID&gt;</computeroutput></screen>
        <para>
List deployments for an environment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Environment ID for which to list deployments.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-add-app">
        <title>murano env-template-add-app</title>
        <screen><computeroutput>usage: murano env-template-add-app &lt;ENV_TEMPLATE_NAME&gt; &lt;FILE&gt;</computeroutput></screen>
        <para>
Add application to the environment template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_NAME&gt;</command></term>
    <listitem>
      <para>
        Environment template name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;FILE&gt;</command></term>
    <listitem>
      <para>
        Path to the template.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-create">
        <title>murano env-template-create</title>
        <screen><computeroutput>usage: murano env-template-create &lt;ENV_TEMPLATE_NAME&gt;</computeroutput></screen>
        <para>
Create an environment template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_NAME&gt;</command></term>
    <listitem>
      <para>
        Environment template name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-create-env">
        <title>murano env-template-create-env</title>
        <screen><computeroutput>usage: murano env-template-create-env &lt;ID&gt; &lt;ENV_TEMPLATE_NAME&gt;</computeroutput></screen>
        <para>
Create a new environment from template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Environment template ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_NAME&gt;</command></term>
    <listitem>
      <para>
        New environment name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-del-app">
        <title>murano env-template-del-app</title>
        <screen><computeroutput>usage: murano env-template-del-app &lt;ENV_TEMPLATE_ID&gt; &lt;ENV_TEMPLATE_APP_ID&gt;</computeroutput></screen>
        <para>
Delete application from the environment template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_ID&gt;</command></term>
    <listitem>
      <para>
        Environment template ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_APP_ID&gt;</command></term>
    <listitem>
      <para>
      Application ID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-delete">
        <title>murano env-template-delete</title>
        <screen><computeroutput>usage: murano env-template-delete &lt;ID&gt; [&lt;ID&gt; ...]</computeroutput></screen>
        <para>
Delete an environment template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of environment(s) template to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-list">
        <title>murano env-template-list</title>
        <screen><computeroutput>usage: murano env-template-list</computeroutput></screen>
        <para>
List the environments templates.
        </para>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-show">
        <title>murano env-template-show</title>
        <screen><computeroutput>usage: murano env-template-show &lt;ID&gt;</computeroutput></screen>
        <para>
Display environment template details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Environment template ID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_env-template-update">
        <title>murano env-template-update</title>
        <screen><computeroutput>usage: murano env-template-update &lt;ID&gt; &lt;ENV_TEMPLATE_NAME&gt;</computeroutput></screen>
        <para>
Update an environment template.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Environment template ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ENV_TEMPLATE_NAME&gt;</command></term>
    <listitem>
      <para>
        Environment template name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-action-call">
        <title>murano environment-action-call</title>
        <screen><computeroutput>usage: murano environment-action-call --action-id &lt;ACTION&gt;
                                      [--arguments [&lt;KEY=VALUE&gt; [&lt;KEY=VALUE&gt; ...]]]
                                      id</computeroutput></screen>
        <para>
Call action `ACTION` in environment `ID`. Returns id of an asynchronous task,
that executes the action. Actions can only be called on a `deployed`
environment. To view actions available in a given environment use
`environment-show` command.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>id</command></term>
    <listitem>
      <para>
        ID of Environment to call action against.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--action-id &lt;ACTION&gt;</command></term>
    <listitem>
      <para>
        ID of action to run.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--arguments [&lt;KEY=VALUE&gt; [&lt;KEY=VALUE&gt; ...]]</command></term>
    <listitem>
      <para>
      Action arguments.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-action-get-result">
        <title>murano environment-action-get-result</title>
        <screen><computeroutput>usage: murano environment-action-get-result --task-id &lt;TASK&gt; &lt;ID&gt;</computeroutput></screen>
        <para>
Get result of `TASK` in environment `ID`.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of Environment where task is being executed.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--task-id &lt;TASK&gt;</command></term>
    <listitem>
      <para>
        ID of action to run.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-apps-edit">
        <title>murano environment-apps-edit</title>
        <screen><computeroutput>usage: murano environment-apps-edit --session-id &lt;SESSION_ID&gt; &lt;ID&gt; [FILE]</computeroutput></screen>
        <para>
Edit environment's object model. `FILE` is path to a file, that contains
jsonpatch, that describes changes to be made to environment's object-model. [
{ "op": "add", "path": "/-", "value": { ... your-app object model here ... }
}, { "op": "replace", "path": "/0/?/name", "value": "new_name" }, ] NOTE:
Values '===id1===', '===id2===', etc. in the resulting object-model will be
substituted with uuids. For more info on jsonpatch see RFC 6902
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of Environment to edit.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>FILE</command></term>
    <listitem>
      <para>
        File to read jsonpatch from (defaults to stdin).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--session-id &lt;SESSION_ID&gt;</command></term>
    <listitem>
      <para>
      Id of a config session.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-create">
        <title>murano environment-create</title>
        <screen><computeroutput>usage: murano environment-create [--join-net-id &lt;NET_ID&gt;]
                                 [--join-subnet-id &lt;SUBNET_ID&gt;]
                                 &lt;ENVIRONMENT_NAME&gt;</computeroutput></screen>
        <para>
Create an environment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ENVIRONMENT_NAME&gt;</command></term>
    <listitem>
      <para>
        Environment name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--join-net-id &lt;NET_ID&gt;</command></term>
    <listitem>
      <para>
      Network id to join.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--join-subnet-id &lt;SUBNET_ID&gt;</command></term>
    <listitem>
      <para>
      Subnetwork id to join.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-delete">
        <title>murano environment-delete</title>
        <screen><computeroutput>usage: murano environment-delete [--abandon] &lt;NAME or ID&gt; [&lt;NAME or ID&gt; ...]</computeroutput></screen>
        <para>
Delete an environment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Id or name of environment(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--abandon</command></term>
    <listitem>
      <para>
        If set will abandon environment without deleting any of its
      resources.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-deploy">
        <title>murano environment-deploy</title>
        <screen><computeroutput>usage: murano environment-deploy --session-id &lt;SESSION&gt; &lt;ID&gt;</computeroutput></screen>
        <para>
Start deployment of a murano environment session.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of Environment to deploy.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--session-id &lt;SESSION&gt;</command></term>
    <listitem>
      <para>
      ID of configuration session to deploy.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-list">
        <title>murano environment-list</title>
        <screen><computeroutput>usage: murano environment-list [--all-tenants]</computeroutput></screen>
        <para>
List the environments.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants</command></term>
    <listitem>
      <para>
        Allows to list environments from all tenants (admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-rename">
        <title>murano environment-rename</title>
        <screen><computeroutput>usage: murano environment-rename &lt;NAME or ID&gt; &lt;ENVIRONMENT_NAME&gt;</computeroutput></screen>
        <para>
Rename an environment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Environment ID or name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ENVIRONMENT_NAME&gt;</command></term>
    <listitem>
      <para>
        A name to which the environment will be renamed.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-session-create">
        <title>murano environment-session-create</title>
        <screen><computeroutput>usage: murano environment-session-create &lt;ID&gt;</computeroutput></screen>
        <para>
Creates a new configuration session for environment ID.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        ID of Environment to add session to.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_environment-show">
        <title>murano environment-show</title>
        <screen><computeroutput>usage: murano environment-show [--session-id &lt;SESSION_ID&gt;] [--only-apps]
                               &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Display environment details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Environment ID or name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--session-id &lt;SESSION_ID&gt;</command></term>
    <listitem>
      <para>
      Id of a config session.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--only-apps</command></term>
    <listitem>
      <para>
        Only print apps of the environment (useful for
      automation).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-create">
        <title>murano package-create</title>
        <screen><computeroutput>usage: murano package-create [-t &lt;HEAT_TEMPLATE&gt;] [-c &lt;CLASSES_DIRECTORY&gt;]
                             [-r &lt;RESOURCES_DIRECTORY&gt;] [-n &lt;DISPLAY_NAME&gt;]
                             [-f &lt;full-name&gt;] [-a &lt;AUTHOR&gt;]
                             [--tags [&lt;TAG1 TAG2&gt; [&lt;TAG1 TAG2&gt; ...]]]
                             [-d &lt;DESCRIPTION&gt;] [-o &lt;PACKAGE_NAME&gt;]
                             [-u &lt;UI_DEFINITION&gt;] [--type TYPE] [-l &lt;LOGO&gt;]</computeroutput></screen>
        <para>
Create an application package.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-t &lt;HEAT_TEMPLATE&gt;, --template &lt;HEAT_TEMPLATE&gt;</command></term>
    <listitem>
      <para>
      Path to the Heat template to import as an Application
      Definition.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;CLASSES_DIRECTORY&gt;, --classes-dir &lt;CLASSES_DIRECTORY&gt;</command></term>
    <listitem>
      <para>
      Path to the directory containing application classes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;RESOURCES_DIRECTORY&gt;, --resources-dir &lt;RESOURCES_DIRECTORY&gt;</command></term>
    <listitem>
      <para>
      Path to the directory containing application
      resources.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n &lt;DISPLAY_NAME&gt;, --name &lt;DISPLAY_NAME&gt;</command></term>
    <listitem>
      <para>
      Display name of the Application in Catalog.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;full-name&gt;, --full-name &lt;full-name&gt;</command></term>
    <listitem>
      <para>
      Fully-qualified name of the Application in Catalog.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-a &lt;AUTHOR&gt;, --author &lt;AUTHOR&gt;</command></term>
    <listitem>
      <para>
      Name of the publisher.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tags [&lt;TAG1 TAG2&gt; [&lt;TAG1 TAG2&gt; ...]]</command></term>
    <listitem>
      <para>
      A list of keywords connected to the application.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d &lt;DESCRIPTION&gt;, --description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
      Detailed description for the Application in Catalog.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;PACKAGE_NAME&gt;, --output &lt;PACKAGE_NAME&gt;</command></term>
    <listitem>
      <para>
      The name of the output file archive to save locally.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-u &lt;UI_DEFINITION&gt;, --ui &lt;UI_DEFINITION&gt;</command></term>
    <listitem>
      <para>
      Dynamic UI form definition.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--type TYPE</command></term>
    <listitem>
      <para>
        Package type. Possible values: Application or Library.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LOGO&gt;, --logo &lt;LOGO&gt;</command></term>
    <listitem>
      <para>
      Path to the package logo.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-delete">
        <title>murano package-delete</title>
        <screen><computeroutput>usage: murano package-delete &lt;ID&gt; [&lt;ID&gt; ...]</computeroutput></screen>
        <para>
Delete a package.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Package ID to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-download">
        <title>murano package-download</title>
        <screen><computeroutput>usage: murano package-download &lt;ID&gt; [file]</computeroutput></screen>
        <para>
Download a package to a filename or stdout.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Package ID to download.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>file</command></term>
    <listitem>
      <para>
        Filename to save package to. If it is not specified and there is no
      stdout redirection the package won't be saved.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-import">
        <title>murano package-import</title>
        <screen><computeroutput>usage: murano package-import [-c [&lt;CATEGORY&gt; [&lt;CATEGORY&gt; ...]]] [--is-public]
                             [--version VERSION] [--exists-action {a,s,u}]
                             &lt;FILE&gt; [&lt;FILE&gt; ...]</computeroutput></screen>
        <para>
Import a package. `FILE` can be either a path to a zip file, url or a FQPN.
You can use `--` to separate `FILE`s from other arguments. Categories have to
be separated with a space and have to be already present in murano.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;FILE&gt;</command></term>
    <listitem>
      <para>
        URL of the murano zip package, FQPN, or path to zip
      package.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c [&lt;CATEGORY&gt; [&lt;CATEGORY&gt; ...]], --categories [&lt;CATEGORY&gt; [&lt;CATEGORY&gt; ...]]</command></term>
    <listitem>
      <para>
      Category list to attach.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--is-public</command></term>
    <listitem>
      <para>
        Make the package available for users from other
      tenants.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--version VERSION</command></term>
    <listitem>
      <para>
        Version of the package to use from repository (ignored
      when importing with multiple packages).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--exists-action {a,s,u}</command></term>
    <listitem>
      <para>
      Default action when a package already exists.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-list">
        <title>murano package-list</title>
        <screen><computeroutput>usage: murano package-list [--limit LIMIT] [--include-disabled]</computeroutput></screen>
        <para>
List available packages.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--limit LIMIT</command></term>
    <listitem>
      <para>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--include-disabled</command></term>
    <listitem>
      <para>
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-save">
        <title>murano package-save</title>
        <screen><computeroutput>usage: murano package-save [-p &lt;PATH&gt;] [--version VERSION] [--no-images]
                           &lt;PACKAGE&gt; [&lt;PACKAGE&gt; ...]</computeroutput></screen>
        <para>
Save a package. This will download package(s) with all dependencies to
specified path. If path doesn't exist it will be created.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PACKAGE&gt;</command></term>
    <listitem>
      <para>
        Package URL or name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PATH&gt;, --path &lt;PATH&gt;</command></term>
    <listitem>
      <para>
      Path to the directory to store package. If not set
      will use current directory.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--version VERSION</command></term>
    <listitem>
      <para>
        Version of the package to use from repository (ignored
      when saving with multiple packages).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--no-images</command></term>
    <listitem>
      <para>
        If set will skip images downloading.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-show">
        <title>murano package-show</title>
        <screen><computeroutput>usage: murano package-show &lt;ID&gt;</computeroutput></screen>
        <para>
Display details for a package.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Package ID to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="muranoclient_subcommand_package-update">
        <title>murano package-update</title>
        <screen><computeroutput>usage: murano package-update [--is-public {true|false}]
                             [--enabled {true|false}] [--name NAME]
                             [--description DESCRIPTION]
                             [--tags [&lt;TAG&gt; [&lt;TAG&gt; ...]]]
                             &lt;ID&gt;</computeroutput></screen>
        <para>
Edit the package in question
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ID&gt;</command></term>
    <listitem>
      <para>
        Package ID to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--is-public {true|false}</command></term>
    <listitem>
      <para>
      Make package available to users from other tenants.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {true|false}</command></term>
    <listitem>
      <para>
      Make package active and available for deployments.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name NAME</command></term>
    <listitem>
      <para>
        New name for the package.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description DESCRIPTION</command></term>
    <listitem>
      <para>
      New package description.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tags [&lt;TAG&gt; [&lt;TAG&gt; ...]]</command></term>
    <listitem>
      <para>
      A list of keywords connected to the application.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
