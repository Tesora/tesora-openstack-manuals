<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="novaclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Compute command-line client</title>

    <para>The <command>nova</command> client is the command-line
        interface (CLI) for the OpenStack Compute API and its extensions.

       This chapter documents <command>nova</command> version
        <literal>3.1.0</literal>.
    </para>

    <para>For help on a specific <command>nova</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>nova</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="novaclient_command_usage">
       <title>nova usage</title>
        <screen><computeroutput>usage: nova [--version] [--debug] [--os-cache] [--timings]
            [--os-region-name &lt;region-name&gt;] [--service-type &lt;service-type&gt;]
            [--service-name &lt;service-name&gt;]
            [--volume-service-name &lt;volume-service-name&gt;]
            [--os-endpoint-type &lt;endpoint-type&gt;]
            [--os-compute-api-version &lt;compute-api-ver&gt;]
            [--bypass-url &lt;bypass-url&gt;] [--insecure]
            [--os-cacert &lt;ca-certificate&gt;] [--os-cert &lt;certificate&gt;]
            [--os-key &lt;key&gt;] [--timeout &lt;seconds&gt;] [--os-auth-type &lt;name&gt;]
            [--os-auth-url OS_AUTH_URL] [--os-domain-id OS_DOMAIN_ID]
            [--os-domain-name OS_DOMAIN_NAME] [--os-project-id OS_PROJECT_ID]
            [--os-project-name OS_PROJECT_NAME]
            [--os-project-domain-id OS_PROJECT_DOMAIN_ID]
            [--os-project-domain-name OS_PROJECT_DOMAIN_NAME]
            [--os-trust-id OS_TRUST_ID]
            [--os-default-domain-id OS_DEFAULT_DOMAIN_ID]
            [--os-default-domain-name OS_DEFAULT_DOMAIN_NAME]
            [--os-user-id OS_USER_ID] [--os-user-name OS_USERNAME]
            [--os-user-domain-id OS_USER_DOMAIN_ID]
            [--os-user-domain-name OS_USER_DOMAIN_NAME]
            [--os-password OS_PASSWORD]
            &lt;subcommand&gt; ...</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>absolute-limits</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use limits instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>add-fixed-ip</command></term>
    <listitem>
      <para>
        Add new IP address on a network to server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>add-floating-ip</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use floating-ip-associate instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>add-secgroup</command></term>
    <listitem>
      <para>
        Add a Security Group to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>agent-create</command></term>
    <listitem>
      <para>
        Create new agent build.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>agent-delete</command></term>
    <listitem>
      <para>
        Delete existing agent build.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>agent-list</command></term>
    <listitem>
      <para>
        List all builds.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>agent-modify</command></term>
    <listitem>
      <para>
        Modify existing agent build.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-add-host</command></term>
    <listitem>
      <para>
        Add the host to the specified aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-create</command></term>
    <listitem>
      <para>
        Create a new aggregate with the specified
      details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-delete</command></term>
    <listitem>
      <para>
        Delete the aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-details</command></term>
    <listitem>
      <para>
        Show details of the specified aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-list</command></term>
    <listitem>
      <para>
        Print a list of all aggregates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-remove-host</command></term>
    <listitem>
      <para>
        Remove the specified host from the specified
      aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-set-metadata</command></term>
    <listitem>
      <para>
        Update the metadata associated with the
      aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>aggregate-update</command></term>
    <listitem>
      <para>
        Update the aggregate's name and optionally
      availability zone.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>availability-zone-list</command></term>
    <listitem>
      <para>
        List all the availability zones.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>backup</command></term>
    <listitem>
      <para>
        Backup a server by creating a 'backup' type
      snapshot.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>boot</command></term>
    <listitem>
      <para>
        Boot a new server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>clear-password</command></term>
    <listitem>
      <para>
        Clear the admin password for a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cloudpipe-configure</command></term>
    <listitem>
      <para>
        Update the VPN IP/port of a cloudpipe
      instance.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cloudpipe-create</command></term>
    <listitem>
      <para>
        Create a cloudpipe instance for the given
      project.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cloudpipe-list</command></term>
    <listitem>
      <para>
        Print a list of all cloudpipe instances.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>console-log</command></term>
    <listitem>
      <para>
        Get console log output of a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>credentials</command></term>
    <listitem>
      <para>
        Show user credentials returned from auth.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>delete</command></term>
    <listitem>
      <para>
        Immediately shut down and delete specified
      server(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>diagnostics</command></term>
    <listitem>
      <para>
        Retrieve server diagnostics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-create</command></term>
    <listitem>
      <para>
        Create a DNS entry for domain, name, and IP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-create-private-domain</command></term>
    <listitem>
      <para>
        Create the specified DNS domain.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-create-public-domain</command></term>
    <listitem>
      <para>
        Create the specified DNS domain.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-delete</command></term>
    <listitem>
      <para>
        Delete the specified DNS entry.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-delete-domain</command></term>
    <listitem>
      <para>
        Delete the specified DNS domain.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-domains</command></term>
    <listitem>
      <para>
        Print a list of available dns domains.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>dns-list</command></term>
    <listitem>
      <para>
        List current DNS entries for domain and IP or
      domain and name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>endpoints</command></term>
    <listitem>
      <para>
        Discover endpoints that get returned from the
      authenticate services.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>evacuate</command></term>
    <listitem>
      <para>
        Evacuate server from failed host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>fixed-ip-get</command></term>
    <listitem>
      <para>
        Retrieve info on a fixed IP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>fixed-ip-reserve</command></term>
    <listitem>
      <para>
        Reserve a fixed IP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>fixed-ip-unreserve</command></term>
    <listitem>
      <para>
        Unreserve a fixed IP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-access-add</command></term>
    <listitem>
      <para>
        Add flavor access for the given tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-access-list</command></term>
    <listitem>
      <para>
        Print access information about the given
      flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-access-remove</command></term>
    <listitem>
      <para>
        Remove flavor access for the given tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-create</command></term>
    <listitem>
      <para>
        Create a new flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-delete</command></term>
    <listitem>
      <para>
        Delete a specific flavor
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-key</command></term>
    <listitem>
      <para>
        Set or unset extra_spec for a flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-list</command></term>
    <listitem>
      <para>
        Print a list of available 'flavors' (sizes of
      servers).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>flavor-show</command></term>
    <listitem>
      <para>
        Show details about the given flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-associate</command></term>
    <listitem>
      <para>
        Associate a floating IP address to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-bulk-create</command></term>
    <listitem>
      <para>
        Bulk create floating IPs by range (nova-
      network only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-bulk-delete</command></term>
    <listitem>
      <para>
        Bulk delete floating IPs by range (nova-
      network only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-bulk-list</command></term>
    <listitem>
      <para>
        List all floating IPs (nova-network only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-create</command></term>
    <listitem>
      <para>
        Allocate a floating IP for the current tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-delete</command></term>
    <listitem>
      <para>
        De-allocate a floating IP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-disassociate</command></term>
    <listitem>
      <para>
        Disassociate a floating IP address from a
      server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-list</command></term>
    <listitem>
      <para>
        List floating IPs.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>floating-ip-pool-list</command></term>
    <listitem>
      <para>
        List all floating IP pools.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-mks-console</command></term>
    <listitem>
      <para>
        Get a serial console to a server. (Supported
      by API versions '2.8' - '2.latest') [hint: use
      '--os-compute-api-version' flag to show help
      message for proper version]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-password</command></term>
    <listitem>
      <para>
        Get the admin password for a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-rdp-console</command></term>
    <listitem>
      <para>
        Get a rdp console to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-serial-console</command></term>
    <listitem>
      <para>
        Get a serial console to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-spice-console</command></term>
    <listitem>
      <para>
        Get a spice console to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>get-vnc-console</command></term>
    <listitem>
      <para>
        Get a vnc console to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-action</command></term>
    <listitem>
      <para>
        Perform a power action on a host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-describe</command></term>
    <listitem>
      <para>
        Describe a specific host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-list</command></term>
    <listitem>
      <para>
        List all hosts by service.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-update</command></term>
    <listitem>
      <para>
        Update host settings.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>hypervisor-list</command></term>
    <listitem>
      <para>
        List hypervisors.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>hypervisor-servers</command></term>
    <listitem>
      <para>
        List servers belonging to specific
      hypervisors.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>hypervisor-show</command></term>
    <listitem>
      <para>
        Display the details of the specified
      hypervisor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>hypervisor-stats</command></term>
    <listitem>
      <para>
        Get hypervisor statistics over all compute
      nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>hypervisor-uptime</command></term>
    <listitem>
      <para>
        Display the uptime of the specified
      hypervisor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-create</command></term>
    <listitem>
      <para>
        Create a new image by taking a snapshot of a
      running server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-delete</command></term>
    <listitem>
      <para>
        Delete specified image(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-list</command></term>
    <listitem>
      <para>
        Print a list of available images to boot from.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-meta</command></term>
    <listitem>
      <para>
        Set or Delete metadata on an image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>image-show</command></term>
    <listitem>
      <para>
        Show details about the given image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>interface-attach</command></term>
    <listitem>
      <para>
        Attach a network interface to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>interface-detach</command></term>
    <listitem>
      <para>
        Detach a network interface from a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>interface-list</command></term>
    <listitem>
      <para>
        List interfaces attached to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>keypair-add</command></term>
    <listitem>
      <para>
        Create a new key pair for use with servers.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>keypair-delete</command></term>
    <listitem>
      <para>
        Delete keypair given by its name. (Supported
      by API versions '2.0' - '2.latest') [hint: use
      '--os-compute-api-version' flag to show help
      message for proper version]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>keypair-list</command></term>
    <listitem>
      <para>
        Print a list of keypairs for a user (Supported
      by API versions '2.0' - '2.latest') [hint: use
      '--os-compute-api-version' flag to show help
      message for proper version]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>keypair-show</command></term>
    <listitem>
      <para>
        Show details about the given keypair.
      (Supported by API versions '2.0' - '2.latest')
      [hint: use '--os-compute-api-version' flag to
      show help message for proper version]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>limits</command></term>
    <listitem>
      <para>
        Print rate and absolute limits.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>list</command></term>
    <listitem>
      <para>
        List active servers.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>list-secgroup</command></term>
    <listitem>
      <para>
        List Security Group(s) of a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>live-migration</command></term>
    <listitem>
      <para>
        Migrate running server to a new machine.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>lock</command></term>
    <listitem>
      <para>
        Lock a server. A normal (non-admin) user will
      not be able to execute actions on a locked
      server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>meta</command></term>
    <listitem>
      <para>
        Set or Delete metadata on a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>migrate</command></term>
    <listitem>
      <para>
        Migrate a server. The new host will be
      selected by the scheduler.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-associate-host</command></term>
    <listitem>
      <para>
        Associate host with network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-associate-project</command></term>
    <listitem>
      <para>
        Associate project with network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-create</command></term>
    <listitem>
      <para>
        Create a network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-delete</command></term>
    <listitem>
      <para>
        Delete network by label or id.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-disassociate</command></term>
    <listitem>
      <para>
        Disassociate host and/or project from the
      given network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-list</command></term>
    <listitem>
      <para>
        Print a list of available networks.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>network-show</command></term>
    <listitem>
      <para>
        Show details about the given network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>pause</command></term>
    <listitem>
      <para>
        Pause a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-class-show</command></term>
    <listitem>
      <para>
        List the quotas for a quota class.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-class-update</command></term>
    <listitem>
      <para>
        Update the quotas for a quota class.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-defaults</command></term>
    <listitem>
      <para>
        List the default quotas for a tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-delete</command></term>
    <listitem>
      <para>
        Delete quota for a tenant/user so their quota
      will Revert back to default.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-show</command></term>
    <listitem>
      <para>
        List the quotas for a tenant/user.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>quota-update</command></term>
    <listitem>
      <para>
        Update the quotas for a tenant/user.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>rate-limits</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use limits instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>reboot</command></term>
    <listitem>
      <para>
        Reboot a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>rebuild</command></term>
    <listitem>
      <para>
        Shutdown, re-image, and re-boot a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>refresh-network</command></term>
    <listitem>
      <para>
        Refresh server network information.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>remove-fixed-ip</command></term>
    <listitem>
      <para>
        Remove an IP address from a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>remove-floating-ip</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use floating-ip-disassociate
      instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>remove-secgroup</command></term>
    <listitem>
      <para>
        Remove a Security Group from a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>rename</command></term>
    <listitem>
      <para>
        Rename a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>rescue</command></term>
    <listitem>
      <para>
        Reboots a server into rescue mode, which
      starts the machine from either the initial
      image or a specified image, attaching the
      current boot disk as secondary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>reset-network</command></term>
    <listitem>
      <para>
        Reset network of a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>reset-state</command></term>
    <listitem>
      <para>
        Reset the state of a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resize</command></term>
    <listitem>
      <para>
        Resize a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resize-confirm</command></term>
    <listitem>
      <para>
        Confirm a previous resize.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resize-revert</command></term>
    <listitem>
      <para>
        Revert a previous resize (and return to the
      previous VM).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resume</command></term>
    <listitem>
      <para>
        Resume a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>root-password</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use set-password instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>scrub</command></term>
    <listitem>
      <para>
        Delete networks and security groups associated
      with a project.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-add-default-rule</command></term>
    <listitem>
      <para>
        Add a rule to the set of rules that will be
      added to the 'default' security group for new
      tenants (nova-network only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-add-group-rule</command></term>
    <listitem>
      <para>
        Add a source group rule to a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-add-rule</command></term>
    <listitem>
      <para>
        Add a rule to a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-create</command></term>
    <listitem>
      <para>
        Create a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-delete</command></term>
    <listitem>
      <para>
        Delete a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-delete-default-rule</command></term>
    <listitem>
      <para>
      Delete a rule from the set of rules that will
      be added to the 'default' security group for
      new tenants (nova-network only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-delete-group-rule</command></term>
    <listitem>
      <para>
        Delete a source group rule from a security
      group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-delete-rule</command></term>
    <listitem>
      <para>
        Delete a rule from a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-list</command></term>
    <listitem>
      <para>
        List security groups for the current tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-list-default-rules</command></term>
    <listitem>
      <para>
      List rules that will be added to the 'default'
      security group for new tenants.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-list-rules</command></term>
    <listitem>
      <para>
        List rules for a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>secgroup-update</command></term>
    <listitem>
      <para>
        Update a security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>server-group-create</command></term>
    <listitem>
      <para>
        Create a new server group with the specified
      details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>server-group-delete</command></term>
    <listitem>
      <para>
        Delete specific server group(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>server-group-get</command></term>
    <listitem>
      <para>
        Get a specific server group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>server-group-list</command></term>
    <listitem>
      <para>
        Print a list of all server groups.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>service-delete</command></term>
    <listitem>
      <para>
        Delete the service.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>service-disable</command></term>
    <listitem>
      <para>
        Disable the service.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>service-enable</command></term>
    <listitem>
      <para>
        Enable the service.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>service-force-down</command></term>
    <listitem>
      <para>
        Force service to down. (Supported by API
      versions '2.11' - '2.latest') [hint: use
      '--os-compute-api-version' flag to show help
      message for proper version]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>service-list</command></term>
    <listitem>
      <para>
        Show a list of all running services. Filter by
      host &amp; binary.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>set-password</command></term>
    <listitem>
      <para>
        Change the admin password for a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>shelve</command></term>
    <listitem>
      <para>
        Shelve a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>shelve-offload</command></term>
    <listitem>
      <para>
        Remove a shelved server from the compute node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>show</command></term>
    <listitem>
      <para>
        Show details about the given server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>ssh</command></term>
    <listitem>
      <para>
        SSH into a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>start</command></term>
    <listitem>
      <para>
        Start the server(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>stop</command></term>
    <listitem>
      <para>
        Stop the server(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>suspend</command></term>
    <listitem>
      <para>
        Suspend a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>unlock</command></term>
    <listitem>
      <para>
        Unlock a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>unpause</command></term>
    <listitem>
      <para>
        Unpause a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>unrescue</command></term>
    <listitem>
      <para>
        Restart the server from normal boot disk
      again.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>unshelve</command></term>
    <listitem>
      <para>
        Unshelve a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>usage</command></term>
    <listitem>
      <para>
        Show usage data for a single tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>usage-list</command></term>
    <listitem>
      <para>
        List usage data for all tenants.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>version-list</command></term>
    <listitem>
      <para>
        List all API versions.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>virtual-interface-list</command></term>
    <listitem>
      <para>
        Show virtual interface info about the given
      server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-attach</command></term>
    <listitem>
      <para>
        Attach a volume to a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-attachments</command></term>
    <listitem>
      <para>
        List all the volumes attached to a server
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-create</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Add a new volume.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-delete</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Remove volume(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-detach</command></term>
    <listitem>
      <para>
        Detach a volume from a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-list</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: List all the volumes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-show</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Show details about a volume.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-snapshot-create</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Add a new snapshot.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-snapshot-delete</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Remove a snapshot.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-snapshot-list</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: List all the snapshots.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-snapshot-show</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Show details about a snapshot.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-type-create</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Create a new volume type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-type-delete</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Delete a specific volume type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-type-list</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>: Print a list of available 'volume
      types'.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>volume-update</command></term>
    <listitem>
      <para>
        Update volume attachment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>x509-create-cert</command></term>
    <listitem>
      <para>
        Create x509 cert for a user in tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>x509-get-root-cert</command></term>
    <listitem>
      <para>
        Fetch the x509 root cert.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to
      stdout so that the nova.bash_completion script
      doesn't have to hard code them.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-evacuate-live</command></term>
    <listitem>
      <para>
        Live migrate all instances of the specified
      host to other available hosts.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cell-capacities</command></term>
    <listitem>
      <para>
        Get cell capacities for all cells or a given
      cell.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cell-show</command></term>
    <listitem>
      <para>
        Show details of a given cell.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>migration-list</command></term>
    <listitem>
      <para>
        Print a list of migrations.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>instance-action</command></term>
    <listitem>
      <para>
        Show an action.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>instance-action-list</command></term>
    <listitem>
      <para>
        List actions on a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>net</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, Use tenant-network-show instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>net-create</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use tenant-network-create instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>net-delete</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use tenant-network-delete instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>net-list</command></term>
    <listitem>
      <para>
        <emphasis>DEPRECATED</emphasis>, use tenant-network-list instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>tenant-network-create</command></term>
    <listitem>
      <para>
        Create a tenant network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>tenant-network-delete</command></term>
    <listitem>
      <para>
        Delete a tenant network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>tenant-network-list</command></term>
    <listitem>
      <para>
        List tenant networks.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>tenant-network-show</command></term>
    <listitem>
      <para>
        Show a tenant network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-servers-migrate</command></term>
    <listitem>
      <para>
        Migrate all instances of the specified host to
      other available hosts.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-evacuate</command></term>
    <listitem>
      <para>
        Evacuate all instances from failed host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>host-meta</command></term>
    <listitem>
      <para>
        Set or Delete metadata on all instances of a
      host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>list-extensions</command></term>
    <listitem>
      <para>
        List all the os-api extensions that are
      available.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>force-delete</command></term>
    <listitem>
      <para>
        Force delete a server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>restore</command></term>
    <listitem>
      <para>
        Restore a soft-deleted server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-interface-add</command></term>
    <listitem>
      <para>
        Add a network interface to a baremetal node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-interface-list</command></term>
    <listitem>
      <para>
        List network interfaces associated with a
      baremetal node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-interface-remove</command></term>
    <listitem>
      <para>
        Remove a network interface from a baremetal
      node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-node-create</command></term>
    <listitem>
      <para>
        Create a baremetal node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-node-delete</command></term>
    <listitem>
      <para>
        Remove a baremetal node and any associated
      interfaces.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-node-list</command></term>
    <listitem>
      <para>
        Print list of available baremetal nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>baremetal-node-show</command></term>
    <listitem>
      <para>
        Show information about a baremetal node.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_command_optional">
        <title>nova optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        show program's version number and exit
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--debug</command></term>
    <listitem>
      <para>
        Print debugging output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cache</command></term>
    <listitem>
      <para>
        Use the auth token cache. Defaults to False if
      <code>env[OS_CACHE]</code> is not set.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timings</command></term>
    <listitem>
      <para>
        Print call timing info.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-region-name &lt;region-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--service-type &lt;service-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to compute for most actions.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--service-name &lt;service-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[NOVA_SERVICE_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--volume-service-name &lt;volume-service-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[NOVA_VOLUME_SERVICE_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint-type &lt;endpoint-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[NOVA_ENDPOINT_TYPE]</code>,
      <code>env[OS_ENDPOINT_TYPE]</code> or publicURL.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-compute-api-version &lt;compute-api-ver&gt;</command></term>
    <listitem>
      <para>
      Accepts X, X.Y (where X is major and Y is
      minor part) or "X.latest", defaults to
      <code>env[OS_COMPUTE_API_VERSION]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--bypass-url &lt;bypass-url&gt;</command></term>
    <listitem>
      <para>
        Use this API endpoint instead of the Service
      Catalog. Defaults to
      <code>env[NOVACLIENT_BYPASS_URL]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-type &lt;name&gt;, --os-auth-plugin &lt;name&gt;</command></term>
    <listitem>
      <para>
      Authentication type to use
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_add-fixed-ip">
        <title>nova add-fixed-ip</title>
        <screen><computeroutput>usage: nova add-fixed-ip &lt;server&gt; &lt;network-id&gt;</computeroutput></screen>
        <para>
Add new IP address on a network to server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;network-id&gt;</command></term>
    <listitem>
      <para>
        Network ID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_add-secgroup">
        <title>nova add-secgroup</title>
        <screen><computeroutput>usage: nova add-secgroup &lt;server&gt; &lt;secgroup&gt;</computeroutput></screen>
        <para>
Add a Security Group to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        Name of Security Group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_agent-create">
        <title>nova agent-create</title>
        <screen><computeroutput>usage: nova agent-create &lt;os&gt; &lt;architecture&gt; &lt;version&gt; &lt;url&gt; &lt;md5hash&gt;
                         &lt;hypervisor&gt;</computeroutput></screen>
        <para>
Create new agent build.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;os&gt;</command></term>
    <listitem>
      <para>
        Type of OS.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;architecture&gt;</command></term>
    <listitem>
      <para>
        Type of architecture.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;version&gt;</command></term>
    <listitem>
      <para>
        Version.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;url&gt;</command></term>
    <listitem>
      <para>
        URL.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;md5hash&gt;</command></term>
    <listitem>
      <para>
        MD5 hash.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;hypervisor&gt;</command></term>
    <listitem>
      <para>
        Type of hypervisor.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_agent-delete">
        <title>nova agent-delete</title>
        <screen><computeroutput>usage: nova agent-delete &lt;id&gt;</computeroutput></screen>
        <para>
Delete existing agent build.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        ID of the agent-build.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_agent-list">
        <title>nova agent-list</title>
        <screen><computeroutput>usage: nova agent-list [--hypervisor &lt;hypervisor&gt;]</computeroutput></screen>
        <para>
List all builds.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--hypervisor &lt;hypervisor&gt;</command></term>
    <listitem>
      <para>
        Type of hypervisor.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_agent-modify">
        <title>nova agent-modify</title>
        <screen><computeroutput>usage: nova agent-modify &lt;id&gt; &lt;version&gt; &lt;url&gt; &lt;md5hash&gt;</computeroutput></screen>
        <para>
Modify existing agent build.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        ID of the agent-build.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;version&gt;</command></term>
    <listitem>
      <para>
        Version.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;url&gt;</command></term>
    <listitem>
      <para>
        URL
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;md5hash&gt;</command></term>
    <listitem>
      <para>
        MD5 hash.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-add-host">
        <title>nova aggregate-add-host</title>
        <screen><computeroutput>usage: nova aggregate-add-host &lt;aggregate&gt; &lt;host&gt;</computeroutput></screen>
        <para>
Add the host to the specified aggregate.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        The host to add to the aggregate.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-create">
        <title>nova aggregate-create</title>
        <screen><computeroutput>usage: nova aggregate-create &lt;name&gt; [&lt;availability-zone&gt;]</computeroutput></screen>
        <para>
Create a new aggregate with the specified details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;availability-zone&gt;</command></term>
    <listitem>
      <para>
        The availability zone of the aggregate (optional).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-delete">
        <title>nova aggregate-delete</title>
        <screen><computeroutput>usage: nova aggregate-delete &lt;aggregate&gt;</computeroutput></screen>
        <para>
Delete the aggregate.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-details">
        <title>nova aggregate-details</title>
        <screen><computeroutput>usage: nova aggregate-details &lt;aggregate&gt;</computeroutput></screen>
        <para>
Show details of the specified aggregate.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-list">
        <title>nova aggregate-list</title>
        <screen><computeroutput>usage: nova aggregate-list</computeroutput></screen>
        <para>
Print a list of all aggregates.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-remove-host">
        <title>nova aggregate-remove-host</title>
        <screen><computeroutput>usage: nova aggregate-remove-host &lt;aggregate&gt; &lt;host&gt;</computeroutput></screen>
        <para>
Remove the specified host from the specified aggregate.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        The host to remove from the aggregate.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-set-metadata">
        <title>nova aggregate-set-metadata</title>
        <screen><computeroutput>usage: nova aggregate-set-metadata &lt;aggregate&gt; &lt;key=value&gt; [&lt;key=value&gt; ...]</computeroutput></screen>
        <para>
Update the metadata associated with the aggregate.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Metadata to add/update to aggregate. Specify only the key to
      delete a metadata item.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_aggregate-update">
        <title>nova aggregate-update</title>
        <screen><computeroutput>usage: nova aggregate-update &lt;aggregate&gt; &lt;name&gt; [&lt;availability-zone&gt;]</computeroutput></screen>
        <para>
Update the aggregate's name and optionally availability zone.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;aggregate&gt;</command></term>
    <listitem>
      <para>
        Name or ID of aggregate to update.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of aggregate.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;availability-zone&gt;</command></term>
    <listitem>
      <para>
        The availability zone of the aggregate.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_availability-zone-list">
        <title>nova availability-zone-list</title>
        <screen><computeroutput>usage: nova availability-zone-list</computeroutput></screen>
        <para>
List all the availability zones.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_backup">
        <title>nova backup</title>
        <screen><computeroutput>usage: nova backup &lt;server&gt; &lt;name&gt; &lt;backup-type&gt; &lt;rotation&gt;</computeroutput></screen>
        <para>
Backup a server by creating a 'backup' type snapshot.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of the backup image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;backup-type&gt;</command></term>
    <listitem>
      <para>
        The backup type, like "daily" or "weekly".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;rotation&gt;</command></term>
    <listitem>
      <para>
        Int parameter representing how many backups to keep around.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-interface-add">
        <title>nova baremetal-interface-add</title>
        <screen><computeroutput>usage: nova baremetal-interface-add [--datapath_id &lt;datapath_id&gt;]
                                    [--port_no &lt;port_no&gt;]
                                    &lt;node&gt; &lt;address&gt;</computeroutput></screen>
        <para>
Add a network interface to a baremetal node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;node&gt;</command></term>
    <listitem>
      <para>
        ID of node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        MAC address of interface
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--datapath_id &lt;datapath_id&gt;</command></term>
    <listitem>
      <para>
        OpenFlow Datapath ID of interface
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--port_no &lt;port_no&gt;</command></term>
    <listitem>
      <para>
        OpenFlow port number of interface
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-interface-list">
        <title>nova baremetal-interface-list</title>
        <screen><computeroutput>usage: nova baremetal-interface-list &lt;node&gt;</computeroutput></screen>
        <para>
List network interfaces associated with a baremetal node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;node&gt;</command></term>
    <listitem>
      <para>
        ID of node
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-interface-remove">
        <title>nova baremetal-interface-remove</title>
        <screen><computeroutput>usage: nova baremetal-interface-remove &lt;node&gt; &lt;address&gt;</computeroutput></screen>
        <para>
Remove a network interface from a baremetal node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;node&gt;</command></term>
    <listitem>
      <para>
        ID of node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        MAC address of interface
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-node-create">
        <title>nova baremetal-node-create</title>
        <screen><computeroutput>usage: nova baremetal-node-create [--pm_address &lt;pm_address&gt;]
                                  [--pm_user &lt;pm_user&gt;]
                                  [--pm_password &lt;pm_password&gt;]
                                  [--terminal_port &lt;terminal_port&gt;]
                                  &lt;service_host&gt; &lt;cpus&gt; &lt;memory_mb&gt; &lt;local_gb&gt;
                                  &lt;prov_mac_address&gt;</computeroutput></screen>
        <para>
Create a baremetal node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;service_host&gt;</command></term>
    <listitem>
      <para>
        Name of nova compute host which will control
      this baremetal node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cpus&gt;</command></term>
    <listitem>
      <para>
        Number of CPUs in the node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;memory_mb&gt;</command></term>
    <listitem>
      <para>
        Megabytes of RAM in the node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;local_gb&gt;</command></term>
    <listitem>
      <para>
        Gigabytes of local storage in the node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;prov_mac_address&gt;</command></term>
    <listitem>
      <para>
        MAC address to provision the node
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--pm_address &lt;pm_address&gt;</command></term>
    <listitem>
      <para>
        Power management IP for the node
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--pm_user &lt;pm_user&gt;</command></term>
    <listitem>
      <para>
        Username for the node's power management
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--pm_password &lt;pm_password&gt;</command></term>
    <listitem>
      <para>
        Password for the node's power management
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--terminal_port &lt;terminal_port&gt;</command></term>
    <listitem>
      <para>
      ShellInABox port?
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-node-delete">
        <title>nova baremetal-node-delete</title>
        <screen><computeroutput>usage: nova baremetal-node-delete &lt;node&gt;</computeroutput></screen>
        <para>
Remove a baremetal node and any associated interfaces.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;node&gt;</command></term>
    <listitem>
      <para>
        ID of the node to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-node-list">
        <title>nova baremetal-node-list</title>
        <screen><computeroutput>usage: nova baremetal-node-list</computeroutput></screen>
        <para>
Print list of available baremetal nodes.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_baremetal-node-show">
        <title>nova baremetal-node-show</title>
        <screen><computeroutput>usage: nova baremetal-node-show &lt;node&gt;</computeroutput></screen>
        <para>
Show information about a baremetal node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;node&gt;</command></term>
    <listitem>
      <para>
        ID of node
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_boot">
        <title>nova boot</title>
        <screen><computeroutput>usage: nova boot [--flavor &lt;flavor&gt;] [--image &lt;image&gt;]
                 [--image-with &lt;key=value&gt;] [--boot-volume &lt;volume_id&gt;]
                 [--snapshot &lt;snapshot_id&gt;] [--min-count &lt;number&gt;]
                 [--max-count &lt;number&gt;] [--meta &lt;key=value&gt;]
                 [--file &lt;dst-path=src-path&gt;] [--key-name &lt;key-name&gt;]
                 [--user-data &lt;user-data&gt;]
                 [--availability-zone &lt;availability-zone&gt;]
                 [--security-groups &lt;security-groups&gt;]
                 [--block-device-mapping &lt;dev-name=mapping&gt;]
                 [--block-device key1=value1[,key2=value2...]]
                 [--swap &lt;swap_size&gt;]
                 [--ephemeral size=&lt;size&gt;[,format=&lt;format&gt;]]
                 [--hint &lt;key=value&gt;]
                 [--nic &lt;net-id=net-uuid,v4-fixed-ip=ip-addr,v6-fixed-ip=ip-addr,port-id=port-uuid&gt;]
                 [--config-drive &lt;value&gt;] [--poll] [--admin-pass &lt;value&gt;]
                 [--access-ip-v4 &lt;value&gt;] [--access-ip-v6 &lt;value&gt;]
                 &lt;name&gt;</computeroutput></screen>
        <para>
Boot a new server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name for the new server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--flavor &lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of flavor (see 'nova flavor-list').
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--image &lt;image&gt;</command></term>
    <listitem>
      <para>
        Name or ID of image (see 'nova image-list').
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--image-with &lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Image metadata property (see 'nova image-
      show').
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--boot-volume &lt;volume_id&gt;</command></term>
    <listitem>
      <para>
        Volume ID to boot from.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--snapshot &lt;snapshot_id&gt;</command></term>
    <listitem>
      <para>
        Snapshot ID to boot from (will create a
      volume).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--min-count &lt;number&gt;</command></term>
    <listitem>
      <para>
        Boot at least &lt;number&gt; servers (limited by
      quota).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--max-count &lt;number&gt;</command></term>
    <listitem>
      <para>
        Boot up to &lt;number&gt; servers (limited by
      quota).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meta &lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Record arbitrary key/value metadata to
      /meta_data.json on the metadata server. Can be
      specified multiple times.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--file &lt;dst-path=src-path&gt;</command></term>
    <listitem>
      <para>
        Store arbitrary files from &lt;src-path&gt; locally
      to &lt;dst-path&gt; on the new server. Limited by
      the injected_files quota value.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-name &lt;key-name&gt;</command></term>
    <listitem>
      <para>
        Key name of keypair that should be created
      earlier with the command keypair-add.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-data &lt;user-data&gt;</command></term>
    <listitem>
      <para>
        user data file to pass to be exposed by the
      metadata server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--availability-zone &lt;availability-zone&gt;</command></term>
    <listitem>
      <para>
      The availability zone for server placement.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--security-groups &lt;security-groups&gt;</command></term>
    <listitem>
      <para>
      Comma separated list of security group names.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--block-device-mapping &lt;dev-name=mapping&gt;</command></term>
    <listitem>
      <para>
      Block device mapping in the format &lt;dev-
      name&gt;=&lt;id&gt;:&lt;type&gt;:&lt;size(GB)&gt;:&lt;delete-on-
      terminate&gt;.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--block-device</command></term>
    <listitem>
      <para>
        key1=value1[,key2=value2...]
      Block device mapping with the keys: id=UUID
      (image_id, snapshot_id or volume_id only if
      using source image, snapshot or volume)
      source=source type (image, snapshot, volume or
      blank), dest=destination type of the block
      device (volume or local), bus=device's bus
      (e.g. uml, lxc, virtio, ...; if omitted,
      hypervisor driver chooses a suitable default,
      honoured only if device type is supplied)
      type=device type (e.g. disk, cdrom, ...;
      defaults to 'disk') device=name of the device
      (e.g. vda, xda, ...; if omitted, hypervisor
      driver chooses suitable device depending on
      selected bus; note the libvirt driver always
      uses default device names), size=size of the
      block device in MB(for swap) and in GB(for
      other formats) (if omitted, hypervisor driver
      calculates size), format=device will be
      formatted (e.g. swap, ntfs, ...; optional),
      bootindex=integer used for ordering the boot
      disks (for image backed instances it is equal
      to 0, for others need to be specified) and
      shutdown=shutdown behaviour (either preserve
      or remove, for local destination set to
      remove).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--swap &lt;swap_size&gt;</command></term>
    <listitem>
      <para>
        Create and attach a local swap block device of
      &lt;swap_size&gt; MB.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ephemeral</command></term>
    <listitem>
      <para>
        size=&lt;size&gt;[,format=&lt;format&gt;]
      Create and attach a local ephemeral block
      device of &lt;size&gt; GB and format it to &lt;format&gt;.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--hint &lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Send arbitrary key/value pairs to the
      scheduler for custom use.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--nic &lt;net-id=net-uuid,v4-fixed-ip=ip-addr,v6-fixed-ip=ip-addr,port-id=port-uuid&gt;</command></term>
    <listitem>
      <para>
      Create a NIC on the server. Specify option
      multiple times to create multiple NICs. net-
      id: attach NIC to network with this UUID
      (either port-id or net-id must be provided),
      v4-fixed-ip: IPv4 fixed address for NIC
      (optional), v6-fixed-ip: IPv6 fixed address
      for NIC (optional), port-id: attach NIC to
      port with this UUID (either port-id or net-id
      must be provided).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--config-drive &lt;value&gt;</command></term>
    <listitem>
      <para>
        Enable config drive.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Report the new server boot progress until it
      completes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--admin-pass &lt;value&gt;</command></term>
    <listitem>
      <para>
        Admin password for the instance.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--access-ip-v4 &lt;value&gt;</command></term>
    <listitem>
      <para>
        Alternative access ip v4 of the instance.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--access-ip-v6 &lt;value&gt;</command></term>
    <listitem>
      <para>
        Alternative access ip v6 of the instance.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_cell-capacities">
        <title>nova cell-capacities</title>
        <screen><computeroutput>usage: nova cell-capacities [--cell &lt;cell-name&gt;]</computeroutput></screen>
        <para>
Get cell capacities for all cells or a given cell.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--cell &lt;cell-name&gt;</command></term>
    <listitem>
      <para>
        Name of the cell to get the capacities.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_cell-show">
        <title>nova cell-show</title>
        <screen><computeroutput>usage: nova cell-show &lt;cell-name&gt;</computeroutput></screen>
        <para>
Show details of a given cell.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;cell-name&gt;</command></term>
    <listitem>
      <para>
        Name of the cell.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_clear-password">
        <title>nova clear-password</title>
        <screen><computeroutput>usage: nova clear-password &lt;server&gt;</computeroutput></screen>
        <para>
Clear the admin password for a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_cloudpipe-configure">
        <title>nova cloudpipe-configure</title>
        <screen><computeroutput>usage: nova cloudpipe-configure &lt;ip address&gt; &lt;port&gt;</computeroutput></screen>
        <para>
Update the VPN IP/port of a cloudpipe instance.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ip address&gt;</command></term>
    <listitem>
      <para>
        New IP Address.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;port&gt;</command></term>
    <listitem>
      <para>
        New Port.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_cloudpipe-create">
        <title>nova cloudpipe-create</title>
        <screen><computeroutput>usage: nova cloudpipe-create &lt;project_id&gt;</computeroutput></screen>
        <para>
Create a cloudpipe instance for the given project.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;project_id&gt;</command></term>
    <listitem>
      <para>
        UUID of the project to create the cloudpipe for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_cloudpipe-list">
        <title>nova cloudpipe-list</title>
        <screen><computeroutput>usage: nova cloudpipe-list</computeroutput></screen>
        <para>
Print a list of all cloudpipe instances.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_console-log">
        <title>nova console-log</title>
        <screen><computeroutput>usage: nova console-log [--length &lt;length&gt;] &lt;server&gt;</computeroutput></screen>
        <para>
Get console log output of a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--length &lt;length&gt;</command></term>
    <listitem>
      <para>
        Length in lines to tail.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_credentials">
        <title>nova credentials</title>
        <screen><computeroutput>usage: nova credentials [--wrap &lt;integer&gt;]</computeroutput></screen>
        <para>
Show user credentials returned from auth.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--wrap &lt;integer&gt;</command></term>
    <listitem>
      <para>
        Wrap PKI tokens to a specified length, or 0 to disable.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_delete">
        <title>nova delete</title>
        <screen><computeroutput>usage: nova delete [--all-tenants] &lt;server&gt; [&lt;server&gt; ...]</computeroutput></screen>
        <para>
Immediately shut down and delete specified server(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants</command></term>
    <listitem>
      <para>
        Delete server(s) in another tenant by name (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_diagnostics">
        <title>nova diagnostics</title>
        <screen><computeroutput>usage: nova diagnostics &lt;server&gt;</computeroutput></screen>
        <para>
Retrieve server diagnostics.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-create">
        <title>nova dns-create</title>
        <screen><computeroutput>usage: nova dns-create [--type &lt;type&gt;] &lt;ip&gt; &lt;name&gt; &lt;domain&gt;</computeroutput></screen>
        <para>
Create a DNS entry for domain, name, and IP.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ip&gt;</command></term>
    <listitem>
      <para>
        IP address.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        DNS name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--type &lt;type&gt;</command></term>
    <listitem>
      <para>
        DNS type (e.g. "A")
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-create-private-domain">
        <title>nova dns-create-private-domain</title>
        <screen><computeroutput>usage: nova dns-create-private-domain
                                      [--availability-zone &lt;availability-zone&gt;]
                                      &lt;domain&gt;</computeroutput></screen>
        <para>
Create the specified DNS domain.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--availability-zone &lt;availability-zone&gt;</command></term>
    <listitem>
      <para>
      Limit access to this domain to servers in the
      specified availability zone.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-create-public-domain">
        <title>nova dns-create-public-domain</title>
        <screen><computeroutput>usage: nova dns-create-public-domain [--project &lt;project&gt;] &lt;domain&gt;</computeroutput></screen>
        <para>
Create the specified DNS domain.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--project &lt;project&gt;</command></term>
    <listitem>
      <para>
        Limit access to this domain to users of the specified
      project.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-delete">
        <title>nova dns-delete</title>
        <screen><computeroutput>usage: nova dns-delete &lt;domain&gt; &lt;name&gt;</computeroutput></screen>
        <para>
Delete the specified DNS entry.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        DNS name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-delete-domain">
        <title>nova dns-delete-domain</title>
        <screen><computeroutput>usage: nova dns-delete-domain &lt;domain&gt;</computeroutput></screen>
        <para>
Delete the specified DNS domain.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_dns-domains">
        <title>nova dns-domains</title>
        <screen><computeroutput>usage: nova dns-domains</computeroutput></screen>
        <para>
Print a list of available dns domains.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_dns-list">
        <title>nova dns-list</title>
        <screen><computeroutput>usage: nova dns-list [--ip &lt;ip&gt;] [--name &lt;name&gt;] &lt;domain&gt;</computeroutput></screen>
        <para>
List current DNS entries for domain and IP or domain and name.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;domain&gt;</command></term>
    <listitem>
      <para>
        DNS domain.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--ip &lt;ip&gt;</command></term>
    <listitem>
      <para>
        IP address.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;name&gt;</command></term>
    <listitem>
      <para>
        DNS name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_endpoints">
        <title>nova endpoints</title>
        <screen><computeroutput>usage: nova endpoints</computeroutput></screen>
        <para>
Discover endpoints that get returned from the authenticate services.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_evacuate">
        <title>nova evacuate</title>
        <screen><computeroutput>usage: nova evacuate [--password &lt;password&gt;] [--on-shared-storage]
                     &lt;server&gt; [&lt;host&gt;]</computeroutput></screen>
        <para>
Evacuate server from failed host.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the target host. If no host is
      specified, the scheduler will choose one.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--password &lt;password&gt;</command></term>
    <listitem>
      <para>
        Set the provided admin password on the evacuated
      server. Not applicable with on-shared-storage flag.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--on-shared-storage</command></term>
    <listitem>
      <para>
        Specifies whether server files are located on shared
      storage.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_fixed-ip-get">
        <title>nova fixed-ip-get</title>
        <screen><computeroutput>usage: nova fixed-ip-get &lt;fixed_ip&gt;</computeroutput></screen>
        <para>
Retrieve info on a fixed IP.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;fixed_ip&gt;</command></term>
    <listitem>
      <para>
        Fixed IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_fixed-ip-reserve">
        <title>nova fixed-ip-reserve</title>
        <screen><computeroutput>usage: nova fixed-ip-reserve &lt;fixed_ip&gt;</computeroutput></screen>
        <para>
Reserve a fixed IP.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;fixed_ip&gt;</command></term>
    <listitem>
      <para>
        Fixed IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_fixed-ip-unreserve">
        <title>nova fixed-ip-unreserve</title>
        <screen><computeroutput>usage: nova fixed-ip-unreserve &lt;fixed_ip&gt;</computeroutput></screen>
        <para>
Unreserve a fixed IP.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;fixed_ip&gt;</command></term>
    <listitem>
      <para>
        Fixed IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-access-add">
        <title>nova flavor-access-add</title>
        <screen><computeroutput>usage: nova flavor-access-add &lt;flavor&gt; &lt;tenant_id&gt;</computeroutput></screen>
        <para>
Add flavor access for the given tenant.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Flavor name or ID to add access for the given tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;tenant_id&gt;</command></term>
    <listitem>
      <para>
        Tenant ID to add flavor access for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-access-list">
        <title>nova flavor-access-list</title>
        <screen><computeroutput>usage: nova flavor-access-list [--flavor &lt;flavor&gt;] [--tenant &lt;tenant_id&gt;]</computeroutput></screen>
        <para>
Print access information about the given flavor.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--flavor &lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Filter results by flavor name or ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tenant &lt;tenant_id&gt;</command></term>
    <listitem>
      <para>
        Filter results by tenant ID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-access-remove">
        <title>nova flavor-access-remove</title>
        <screen><computeroutput>usage: nova flavor-access-remove &lt;flavor&gt; &lt;tenant_id&gt;</computeroutput></screen>
        <para>
Remove flavor access for the given tenant.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Flavor name or ID to remove access for the given tenant.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;tenant_id&gt;</command></term>
    <listitem>
      <para>
        Tenant ID to remove flavor access for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-create">
        <title>nova flavor-create</title>
        <screen><computeroutput>usage: nova flavor-create [--ephemeral &lt;ephemeral&gt;] [--swap &lt;swap&gt;]
                          [--rxtx-factor &lt;factor&gt;] [--is-public &lt;is-public&gt;]
                          &lt;name&gt; &lt;id&gt; &lt;ram&gt; &lt;disk&gt; &lt;vcpus&gt;</computeroutput></screen>
        <para>
Create a new flavor.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Unique name of the new flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        Unique ID of the new flavor. Specifying 'auto' will
      generated a UUID for the ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ram&gt;</command></term>
    <listitem>
      <para>
        Memory size in MB.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;disk&gt;</command></term>
    <listitem>
      <para>
        Disk size in GB.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;vcpus&gt;</command></term>
    <listitem>
      <para>
        Number of vcpus
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--ephemeral &lt;ephemeral&gt;</command></term>
    <listitem>
      <para>
        Ephemeral space size in GB (default 0).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--swap &lt;swap&gt;</command></term>
    <listitem>
      <para>
        Swap space size in MB (default 0).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--rxtx-factor &lt;factor&gt;</command></term>
    <listitem>
      <para>
        RX/TX factor (default 1).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--is-public &lt;is-public&gt;</command></term>
    <listitem>
      <para>
        Make flavor accessible to the public (default
      true).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-delete">
        <title>nova flavor-delete</title>
        <screen><computeroutput>usage: nova flavor-delete &lt;flavor&gt;</computeroutput></screen>
        <para>
Delete a specific flavor
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the flavor to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-key">
        <title>nova flavor-key</title>
        <screen><computeroutput>usage: nova flavor-key &lt;flavor&gt; &lt;action&gt; &lt;key=value&gt; [&lt;key=value&gt; ...]</computeroutput></screen>
        <para>
Set or unset extra_spec for a flavor.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;action&gt;</command></term>
    <listitem>
      <para>
        Actions: 'set' or 'unset'.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Extra_specs to set/unset (only key is necessary on unset).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-list">
        <title>nova flavor-list</title>
        <screen><computeroutput>usage: nova flavor-list [--extra-specs] [--all] [--marker &lt;marker&gt;]
                        [--limit &lt;limit&gt;]</computeroutput></screen>
        <para>
Print a list of available 'flavors' (sizes of servers).
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--extra-specs</command></term>
    <listitem>
      <para>
        Get extra-specs of each flavor.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--all</command></term>
    <listitem>
      <para>
        Display all flavors (Admin only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--marker &lt;marker&gt;</command></term>
    <listitem>
      <para>
        The last flavor ID of the previous page; displays list of
      flavors after "marker".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--limit &lt;limit&gt;</command></term>
    <listitem>
      <para>
        Maximum number of flavors to display. If limit == -1, all
      flavors will be displayed. If limit is bigger than
      'osapi_max_limit' option of Nova API, limit
      'osapi_max_limit' will be used instead.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_flavor-show">
        <title>nova flavor-show</title>
        <screen><computeroutput>usage: nova flavor-show &lt;flavor&gt;</computeroutput></screen>
        <para>
Show details about the given flavor.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of flavor.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-associate">
        <title>nova floating-ip-associate</title>
        <screen><computeroutput>usage: nova floating-ip-associate [--fixed-address &lt;fixed_address&gt;]
                                  &lt;server&gt; &lt;address&gt;</computeroutput></screen>
        <para>
Associate a floating IP address to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--fixed-address &lt;fixed_address&gt;</command></term>
    <listitem>
      <para>
      Fixed IP Address to associate with.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-bulk-create">
        <title>nova floating-ip-bulk-create</title>
        <screen><computeroutput>usage: nova floating-ip-bulk-create [--pool &lt;pool&gt;] [--interface &lt;interface&gt;]
                                    &lt;range&gt;</computeroutput></screen>
        <para>
Bulk create floating IPs by range (nova-network only).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;range&gt;</command></term>
    <listitem>
      <para>
        Address range to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--pool &lt;pool&gt;</command></term>
    <listitem>
      <para>
        Pool for new Floating IPs.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--interface &lt;interface&gt;</command></term>
    <listitem>
      <para>
        Interface for new Floating IPs.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-bulk-delete">
        <title>nova floating-ip-bulk-delete</title>
        <screen><computeroutput>usage: nova floating-ip-bulk-delete &lt;range&gt;</computeroutput></screen>
        <para>
Bulk delete floating IPs by range (nova-network only).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;range&gt;</command></term>
    <listitem>
      <para>
        Address range to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-bulk-list">
        <title>nova floating-ip-bulk-list</title>
        <screen><computeroutput>usage: nova floating-ip-bulk-list [--host &lt;host&gt;]</computeroutput></screen>
        <para>
List all floating IPs (nova-network only).
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--host &lt;host&gt;</command></term>
    <listitem>
      <para>
        Filter by host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-create">
        <title>nova floating-ip-create</title>
        <screen><computeroutput>usage: nova floating-ip-create [&lt;floating-ip-pool&gt;]</computeroutput></screen>
        <para>
Allocate a floating IP for the current tenant.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;floating-ip-pool&gt;</command></term>
    <listitem>
      <para>
        Name of Floating IP Pool. (Optional)
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-delete">
        <title>nova floating-ip-delete</title>
        <screen><computeroutput>usage: nova floating-ip-delete &lt;address&gt;</computeroutput></screen>
        <para>
De-allocate a floating IP.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        IP of Floating IP.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-disassociate">
        <title>nova floating-ip-disassociate</title>
        <screen><computeroutput>usage: nova floating-ip-disassociate &lt;server&gt; &lt;address&gt;</computeroutput></screen>
        <para>
Disassociate a floating IP address from a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-list">
        <title>nova floating-ip-list</title>
        <screen><computeroutput>usage: nova floating-ip-list</computeroutput></screen>
        <para>
List floating IPs.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_floating-ip-pool-list">
        <title>nova floating-ip-pool-list</title>
        <screen><computeroutput>usage: nova floating-ip-pool-list</computeroutput></screen>
        <para>
List all floating IP pools.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_force-delete">
        <title>nova force-delete</title>
        <screen><computeroutput>usage: nova force-delete &lt;server&gt;</computeroutput></screen>
        <para>
Force delete a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-mks-console">
        <title>nova get-mks-console</title>
        <screen><computeroutput>usage: nova get-mks-console &lt;server&gt;</computeroutput></screen>
        <para>
Get a serial console to a server. (Supported by API versions '2.8' -
'2.latest') [hint: use '--os-compute-api-version' flag to show help message
for proper version]
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-password">
        <title>nova get-password</title>
        <screen><computeroutput>usage: nova get-password &lt;server&gt; [&lt;private-key&gt;]</computeroutput></screen>
        <para>
Get the admin password for a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;private-key&gt;</command></term>
    <listitem>
      <para>
        Private key (used locally to decrypt password) (Optional).
      When specified, the command displays the clear (decrypted) VM
      password. When not specified, the ciphered VM password is
      displayed.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-rdp-console">
        <title>nova get-rdp-console</title>
        <screen><computeroutput>usage: nova get-rdp-console &lt;server&gt; &lt;console-type&gt;</computeroutput></screen>
        <para>
Get a rdp console to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;console-type&gt;</command></term>
    <listitem>
      <para>
        Type of rdp console ("rdp-html5").
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-serial-console">
        <title>nova get-serial-console</title>
        <screen><computeroutput>usage: nova get-serial-console [--console_type CONSOLE_TYPE] &lt;server&gt;</computeroutput></screen>
        <para>
Get a serial console to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--console_type CONSOLE_TYPE</command></term>
    <listitem>
      <para>
        Type of serial console, default="serial".
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-spice-console">
        <title>nova get-spice-console</title>
        <screen><computeroutput>usage: nova get-spice-console &lt;server&gt; &lt;console-type&gt;</computeroutput></screen>
        <para>
Get a spice console to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;console-type&gt;</command></term>
    <listitem>
      <para>
        Type of spice console ("spice-html5").
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_get-vnc-console">
        <title>nova get-vnc-console</title>
        <screen><computeroutput>usage: nova get-vnc-console &lt;server&gt; &lt;console-type&gt;</computeroutput></screen>
        <para>
Get a vnc console to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;console-type&gt;</command></term>
    <listitem>
      <para>
        Type of vnc console ("novnc" or "xvpvnc").
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-action">
        <title>nova host-action</title>
        <screen><computeroutput>usage: nova host-action [--action &lt;action&gt;] &lt;hostname&gt;</computeroutput></screen>
        <para>
Perform a power action on a host.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--action &lt;action&gt;</command></term>
    <listitem>
      <para>
        A power action: startup, reboot, or shutdown.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-describe">
        <title>nova host-describe</title>
        <screen><computeroutput>usage: nova host-describe &lt;hostname&gt;</computeroutput></screen>
        <para>
Describe a specific host.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-evacuate">
        <title>nova host-evacuate</title>
        <screen><computeroutput>usage: nova host-evacuate [--target_host &lt;target_host&gt;] [--on-shared-storage]
                          &lt;host&gt;</computeroutput></screen>
        <para>
Evacuate all instances from failed host.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--target_host &lt;target_host&gt;</command></term>
    <listitem>
      <para>
        Name of target host. If no host is specified
      the scheduler will select a target.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--on-shared-storage</command></term>
    <listitem>
      <para>
        Specifies whether all instances files are on
      shared storage
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-evacuate-live">
        <title>nova host-evacuate-live</title>
        <screen><computeroutput>usage: nova host-evacuate-live [--target-host &lt;target_host&gt;] [--block-migrate]
                               [--disk-over-commit]
                               [--max-servers &lt;max_servers&gt;]
                               &lt;host&gt;</computeroutput></screen>
        <para>
Live migrate all instances of the specified host to other available hosts.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--target-host &lt;target_host&gt;</command></term>
    <listitem>
      <para>
        Name of target host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--block-migrate</command></term>
    <listitem>
      <para>
        Enable block migration.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--disk-over-commit</command></term>
    <listitem>
      <para>
        Enable disk overcommit.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--max-servers &lt;max_servers&gt;</command></term>
    <listitem>
      <para>
        Maximum number of servers to live migrate
      simultaneously
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-list">
        <title>nova host-list</title>
        <screen><computeroutput>usage: nova host-list [--zone &lt;zone&gt;]</computeroutput></screen>
        <para>
List all hosts by service.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--zone &lt;zone&gt;</command></term>
    <listitem>
      <para>
        Filters the list, returning only those hosts in the
      availability zone &lt;zone&gt;.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-meta">
        <title>nova host-meta</title>
        <screen><computeroutput>usage: nova host-meta &lt;host&gt; &lt;action&gt; &lt;key=value&gt; [&lt;key=value&gt; ...]</computeroutput></screen>
        <para>
Set or Delete metadata on all instances of a host.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;action&gt;</command></term>
    <listitem>
      <para>
        Actions: 'set' or 'delete'
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Metadata to set or delete (only key is necessary on delete)
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-servers-migrate">
        <title>nova host-servers-migrate</title>
        <screen><computeroutput>usage: nova host-servers-migrate &lt;host&gt;</computeroutput></screen>
        <para>
Migrate all instances of the specified host to other available hosts.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_host-update">
        <title>nova host-update</title>
        <screen><computeroutput>usage: nova host-update [--status &lt;enable|disable&gt;]
                        [--maintenance &lt;enable|disable&gt;]
                        &lt;hostname&gt;</computeroutput></screen>
        <para>
Update host settings.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--status &lt;enable|disable&gt;</command></term>
    <listitem>
      <para>
        Either enable or disable a host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--maintenance &lt;enable|disable&gt;</command></term>
    <listitem>
      <para>
      Either put or resume host to/from maintenance.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_hypervisor-list">
        <title>nova hypervisor-list</title>
        <screen><computeroutput>usage: nova hypervisor-list [--matching &lt;hostname&gt;]</computeroutput></screen>
        <para>
List hypervisors.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--matching &lt;hostname&gt;</command></term>
    <listitem>
      <para>
        List hypervisors matching the given &lt;hostname&gt;.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_hypervisor-servers">
        <title>nova hypervisor-servers</title>
        <screen><computeroutput>usage: nova hypervisor-servers &lt;hostname&gt;</computeroutput></screen>
        <para>
List servers belonging to specific hypervisors.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        The hypervisor hostname (or pattern) to search for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_hypervisor-show">
        <title>nova hypervisor-show</title>
        <screen><computeroutput>usage: nova hypervisor-show [--wrap &lt;integer&gt;] &lt;hypervisor&gt;</computeroutput></screen>
        <para>
Display the details of the specified hypervisor.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hypervisor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the hypervisor to show the details of.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--wrap &lt;integer&gt;</command></term>
    <listitem>
      <para>
        Wrap the output to a specified length. Default is 40 or 0
      to disable
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_hypervisor-stats">
        <title>nova hypervisor-stats</title>
        <screen><computeroutput>usage: nova hypervisor-stats</computeroutput></screen>
        <para>
Get hypervisor statistics over all compute nodes.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_hypervisor-uptime">
        <title>nova hypervisor-uptime</title>
        <screen><computeroutput>usage: nova hypervisor-uptime &lt;hypervisor&gt;</computeroutput></screen>
        <para>
Display the uptime of the specified hypervisor.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hypervisor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the hypervisor to show the uptime of.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_image-create">
        <title>nova image-create</title>
        <screen><computeroutput>usage: nova image-create [--metadata &lt;key=value&gt;] [--show] [--poll]
                         &lt;server&gt; &lt;name&gt;</computeroutput></screen>
        <para>
Create a new image by taking a snapshot of a running server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of snapshot.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--metadata &lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Record arbitrary key/value metadata to
      /meta_data.json on the metadata server. Can be
      specified multiple times.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--show</command></term>
    <listitem>
      <para>
        Print image info.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Report the snapshot progress and poll until image
      creation is complete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_image-delete">
        <title>nova image-delete</title>
        <screen><computeroutput>usage: nova image-delete &lt;image&gt; [&lt;image&gt; ...]</computeroutput></screen>
        <para>
Delete specified image(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;image&gt;</command></term>
    <listitem>
      <para>
        Name or ID of image(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_image-list">
        <title>nova image-list</title>
        <screen><computeroutput>usage: nova image-list [--limit &lt;limit&gt;]</computeroutput></screen>
        <para>
Print a list of available images to boot from.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--limit &lt;limit&gt;</command></term>
    <listitem>
      <para>
        Number of images to return per request.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_image-meta">
        <title>nova image-meta</title>
        <screen><computeroutput>usage: nova image-meta &lt;image&gt; &lt;action&gt; &lt;key=value&gt; [&lt;key=value&gt; ...]</computeroutput></screen>
        <para>
Set or Delete metadata on an image.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;image&gt;</command></term>
    <listitem>
      <para>
        Name or ID of image.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;action&gt;</command></term>
    <listitem>
      <para>
        Actions: 'set' or 'delete'.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Metadata to add/update or delete (only key is necessary on
      delete).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_image-show">
        <title>nova image-show</title>
        <screen><computeroutput>usage: nova image-show &lt;image&gt;</computeroutput></screen>
        <para>
Show details about the given image.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;image&gt;</command></term>
    <listitem>
      <para>
        Name or ID of image.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_instance-action">
        <title>nova instance-action</title>
        <screen><computeroutput>usage: nova instance-action &lt;server&gt; &lt;request_id&gt;</computeroutput></screen>
        <para>
Show an action.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or UUID of the server to show an action for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;request_id&gt;</command></term>
    <listitem>
      <para>
        Request ID of the action to get.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_instance-action-list">
        <title>nova instance-action-list</title>
        <screen><computeroutput>usage: nova instance-action-list &lt;server&gt;</computeroutput></screen>
        <para>
List actions on a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or UUID of the server to list actions for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_interface-attach">
        <title>nova interface-attach</title>
        <screen><computeroutput>usage: nova interface-attach [--port-id &lt;port_id&gt;] [--net-id &lt;net_id&gt;]
                             [--fixed-ip &lt;fixed_ip&gt;]
                             &lt;server&gt;</computeroutput></screen>
        <para>
Attach a network interface to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--port-id &lt;port_id&gt;</command></term>
    <listitem>
      <para>
        Port ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--net-id &lt;net_id&gt;</command></term>
    <listitem>
      <para>
        Network ID
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fixed-ip &lt;fixed_ip&gt;</command></term>
    <listitem>
      <para>
        Requested fixed IP.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_interface-detach">
        <title>nova interface-detach</title>
        <screen><computeroutput>usage: nova interface-detach &lt;server&gt; &lt;port_id&gt;</computeroutput></screen>
        <para>
Detach a network interface from a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;port_id&gt;</command></term>
    <listitem>
      <para>
        Port ID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_interface-list">
        <title>nova interface-list</title>
        <screen><computeroutput>usage: nova interface-list &lt;server&gt;</computeroutput></screen>
        <para>
List interfaces attached to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_keypair-add">
        <title>nova keypair-add</title>
        <screen><computeroutput>usage: nova keypair-add [--pub-key &lt;pub-key&gt;] [--key-type &lt;key-type&gt;]
                        [--user &lt;user-id&gt;]
                        &lt;name&gt;</computeroutput></screen>
        <para>
Create a new key pair for use with servers.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of key.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--pub-key &lt;pub-key&gt;</command></term>
    <listitem>
      <para>
        Path to a public ssh key.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-type &lt;key-type&gt;</command></term>
    <listitem>
      <para>
        Keypair type. Can be ssh or x509. (Supported by API
      versions '2.2' - '2.latest')
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        ID of user to whom to add key-pair (Admin only).
      (Supported by API versions '2.10' - '2.latest')
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_keypair-delete">
        <title>nova keypair-delete</title>
        <screen><computeroutput>usage: nova keypair-delete [--user &lt;user-id&gt;] &lt;name&gt;</computeroutput></screen>
        <para>
Delete keypair given by its name. (Supported by API versions '2.0' -
'2.latest') [hint: use '--os-compute-api-version' flag to show help message
for proper version]
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Keypair name to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        Id of key-pair owner (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_keypair-list">
        <title>nova keypair-list</title>
        <screen><computeroutput>usage: nova keypair-list [--user &lt;user-id&gt;]</computeroutput></screen>
        <para>
Print a list of keypairs for a user (Supported by API versions '2.0' -
'2.latest') [hint: use '--os-compute-api-version' flag to show help message
for proper version]
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        List key-pairs of specified user id (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_keypair-show">
        <title>nova keypair-show</title>
        <screen><computeroutput>usage: nova keypair-show [--user &lt;user-id&gt;] &lt;keypair&gt;</computeroutput></screen>
        <para>
Show details about the given keypair. (Supported by API versions '2.0' -
'2.latest') [hint: use '--os-compute-api-version' flag to show help message
for proper version]
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;keypair&gt;</command></term>
    <listitem>
      <para>
        Name of keypair.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        Id of key-pair owner (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_limits">
        <title>nova limits</title>
        <screen><computeroutput>usage: nova limits [--tenant [&lt;tenant&gt;]] [--reserved]</computeroutput></screen>
        <para>
Print rate and absolute limits.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--tenant [&lt;tenant&gt;]</command></term>
    <listitem>
      <para>
        Display information from single tenant (Admin only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--reserved</command></term>
    <listitem>
      <para>
        Include reservations count.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_list">
        <title>nova list</title>
        <screen><computeroutput>usage: nova list [--reservation-id &lt;reservation-id&gt;] [--ip &lt;ip-regexp&gt;]
                 [--ip6 &lt;ip6-regexp&gt;] [--name &lt;name-regexp&gt;]
                 [--instance-name &lt;name-regexp&gt;] [--status &lt;status&gt;]
                 [--flavor &lt;flavor&gt;] [--image &lt;image&gt;] [--host &lt;hostname&gt;]
                 [--all-tenants [&lt;0|1&gt;]] [--tenant [&lt;tenant&gt;]]
                 [--user [&lt;user&gt;]] [--deleted] [--fields &lt;fields&gt;] [--minimal]
                 [--sort &lt;key&gt;[:&lt;direction&gt;]] [--marker &lt;marker&gt;]
                 [--limit &lt;limit&gt;]</computeroutput></screen>
        <para>
List active servers.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--reservation-id &lt;reservation-id&gt;</command></term>
    <listitem>
      <para>
      Only return servers that match reservation-id.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ip &lt;ip-regexp&gt;</command></term>
    <listitem>
      <para>
        Search with regular expression match by IP
      address.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ip6 &lt;ip6-regexp&gt;</command></term>
    <listitem>
      <para>
        Search with regular expression match by IPv6
      address.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;name-regexp&gt;</command></term>
    <listitem>
      <para>
        Search with regular expression match by name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--instance-name &lt;name-regexp&gt;</command></term>
    <listitem>
      <para>
      Search with regular expression match by server
      name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--status &lt;status&gt;</command></term>
    <listitem>
      <para>
        Search by server status.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--flavor &lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Search by flavor name or ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--image &lt;image&gt;</command></term>
    <listitem>
      <para>
        Search by image name or ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--host &lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Search servers by hostname to which they are
      assigned (Admin only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--all-tenants [&lt;0|1&gt;]</command></term>
    <listitem>
      <para>
        Display information from all tenants (Admin
      only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tenant [&lt;tenant&gt;]</command></term>
    <listitem>
      <para>
        Display information from single tenant (Admin
      only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user [&lt;user&gt;]</command></term>
    <listitem>
      <para>
        Display information from single user (Admin
      only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--deleted</command></term>
    <listitem>
      <para>
        Only display deleted servers (Admin only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fields &lt;fields&gt;</command></term>
    <listitem>
      <para>
        Comma-separated list of fields to display. Use
      the show command to see which fields are
      available.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--minimal</command></term>
    <listitem>
      <para>
        Get only UUID and name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--sort &lt;key&gt;[:&lt;direction&gt;]</command></term>
    <listitem>
      <para>
        Comma-separated list of sort keys and
      directions in the form of &lt;key&gt;[:&lt;asc|desc&gt;].
      The direction defaults to descending if not
      specified.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--marker &lt;marker&gt;</command></term>
    <listitem>
      <para>
        The last server UUID of the previous page;
      displays list of servers after "marker".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--limit &lt;limit&gt;</command></term>
    <listitem>
      <para>
        Maximum number of servers to display. If limit
      == -1, all servers will be displayed. If limit
      is bigger than 'osapi_max_limit' option of
      Nova API, limit 'osapi_max_limit' will be used
      instead.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_list-extensions">
        <title>nova list-extensions</title>
        <screen><computeroutput>usage: nova list-extensions</computeroutput></screen>
        <para>
List all the os-api extensions that are available.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_list-secgroup">
        <title>nova list-secgroup</title>
        <screen><computeroutput>usage: nova list-secgroup &lt;server&gt;</computeroutput></screen>
        <para>
List Security Group(s) of a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_live-migration">
        <title>nova live-migration</title>
        <screen><computeroutput>usage: nova live-migration [--block-migrate] [--disk-over-commit]
                           &lt;server&gt; [&lt;host&gt;]</computeroutput></screen>
        <para>
Migrate running server to a new machine.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Destination host name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--block-migrate</command></term>
    <listitem>
      <para>
        True in case of block_migration.
      (Default=False:live_migration)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--disk-over-commit</command></term>
    <listitem>
      <para>
        Allow overcommit. (Default=False)
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_lock">
        <title>nova lock</title>
        <screen><computeroutput>usage: nova lock &lt;server&gt;</computeroutput></screen>
        <para>
Lock a server. A normal (non-admin) user will not be able to execute actions
on a locked server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_meta">
        <title>nova meta</title>
        <screen><computeroutput>usage: nova meta &lt;server&gt; &lt;action&gt; &lt;key=value&gt; [&lt;key=value&gt; ...]</computeroutput></screen>
        <para>
Set or Delete metadata on a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;action&gt;</command></term>
    <listitem>
      <para>
        Actions: 'set' or 'delete'.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Metadata to set or delete (only key is necessary on delete).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_migrate">
        <title>nova migrate</title>
        <screen><computeroutput>usage: nova migrate [--poll] &lt;server&gt;</computeroutput></screen>
        <para>
Migrate a server. The new host will be selected by the scheduler.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Report the server migration progress until it completes.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_migration-list">
        <title>nova migration-list</title>
        <screen><computeroutput>usage: nova migration-list [--host &lt;host&gt;] [--status &lt;status&gt;]
                           [--cell_name &lt;cell_name&gt;]</computeroutput></screen>
        <para>
Print a list of migrations.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--host &lt;host&gt;</command></term>
    <listitem>
      <para>
        Fetch migrations for the given host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--status &lt;status&gt;</command></term>
    <listitem>
      <para>
        Fetch migrations for the given status.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cell_name &lt;cell_name&gt;</command></term>
    <listitem>
      <para>
        Fetch migrations for the given cell_name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-associate-host">
        <title>nova network-associate-host</title>
        <screen><computeroutput>usage: nova network-associate-host &lt;network&gt; &lt;host&gt;</computeroutput></screen>
        <para>
Associate host with network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network&gt;</command></term>
    <listitem>
      <para>
        UUID of network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;host&gt;</command></term>
    <listitem>
      <para>
        Name of host
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-associate-project">
        <title>nova network-associate-project</title>
        <screen><computeroutput>usage: nova network-associate-project &lt;network&gt;</computeroutput></screen>
        <para>
Associate project with network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network&gt;</command></term>
    <listitem>
      <para>
        UUID of network.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-create">
        <title>nova network-create</title>
        <screen><computeroutput>usage: nova network-create [--fixed-range-v4 &lt;x.x.x.x/yy&gt;]
                           [--fixed-range-v6 CIDR_V6] [--vlan &lt;vlan id&gt;]
                           [--vlan-start &lt;vlan start&gt;] [--vpn &lt;vpn start&gt;]
                           [--gateway GATEWAY] [--gateway-v6 GATEWAY_V6]
                           [--bridge &lt;bridge&gt;]
                           [--bridge-interface &lt;bridge interface&gt;]
                           [--multi-host &lt;'T'|'F'&gt;] [--dns1 &lt;DNS Address&gt;]
                           [--dns2 &lt;DNS Address&gt;] [--uuid &lt;network uuid&gt;]
                           [--fixed-cidr &lt;x.x.x.x/yy&gt;]
                           [--project-id &lt;project id&gt;] [--priority &lt;number&gt;]
                           [--mtu MTU] [--enable-dhcp &lt;'T'|'F'&gt;]
                           [--dhcp-server DHCP_SERVER]
                           [--share-address &lt;'T'|'F'&gt;]
                           [--allowed-start ALLOWED_START]
                           [--allowed-end ALLOWED_END]
                           &lt;network_label&gt;</computeroutput></screen>
        <para>
Create a network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network_label&gt;</command></term>
    <listitem>
      <para>
        Label for network
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--fixed-range-v4 &lt;x.x.x.x/yy&gt;</command></term>
    <listitem>
      <para>
      IPv4 subnet (ex: 10.0.0.0/8)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fixed-range-v6</command></term>
    <listitem>
      <para>
        CIDR_V6      IPv6 subnet (ex: fe80::/64
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--vlan &lt;vlan id&gt;</command></term>
    <listitem>
      <para>
        The vlan ID to be assigned to the project.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--vlan-start &lt;vlan start&gt;</command></term>
    <listitem>
      <para>
        First vlan ID to be assigned to the project.
      Subsequent vlan IDs will be assigned
      incrementally.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--vpn &lt;vpn start&gt;</command></term>
    <listitem>
      <para>
        vpn start
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--gateway GATEWAY</command></term>
    <listitem>
      <para>
        gateway
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--gateway-v6</command></term>
    <listitem>
      <para>
        GATEWAY_V6       IPv6 gateway
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--bridge &lt;bridge&gt;</command></term>
    <listitem>
      <para>
        VIFs on this network are connected to this
      bridge.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--bridge-interface &lt;bridge interface&gt;</command></term>
    <listitem>
      <para>
      The bridge is connected to this interface.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--multi-host &lt;'T'|'F'&gt;</command></term>
    <listitem>
      <para>
        Multi host
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--dns1 &lt;DNS Address&gt;</command></term>
    <listitem>
      <para>
        First DNS.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--dns2 &lt;DNS Address&gt;</command></term>
    <listitem>
      <para>
        Second DNS.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--uuid &lt;network uuid&gt;</command></term>
    <listitem>
      <para>
        Network UUID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fixed-cidr &lt;x.x.x.x/yy&gt;</command></term>
    <listitem>
      <para>
        IPv4 subnet for fixed IPs (ex: 10.20.0.0/16).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;project id&gt;</command></term>
    <listitem>
      <para>
        Project ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--priority &lt;number&gt;</command></term>
    <listitem>
      <para>
        Network interface priority.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--mtu MTU</command></term>
    <listitem>
      <para>
        MTU for network.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enable-dhcp &lt;'T'|'F'&gt;</command></term>
    <listitem>
      <para>
        Enable DHCP.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--dhcp-server DHCP_SERVER</command></term>
    <listitem>
      <para>
        DHCP-server address (defaults to gateway
      address)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--share-address &lt;'T'|'F'&gt;</command></term>
    <listitem>
      <para>
        Share address
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--allowed-start ALLOWED_START</command></term>
    <listitem>
      <para>
      Start of allowed addresses for instances.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--allowed-end ALLOWED_END</command></term>
    <listitem>
      <para>
        End of allowed addresses for instances.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-delete">
        <title>nova network-delete</title>
        <screen><computeroutput>usage: nova network-delete &lt;network&gt;</computeroutput></screen>
        <para>
Delete network by label or id.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network&gt;</command></term>
    <listitem>
      <para>
        UUID or label of network.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-disassociate">
        <title>nova network-disassociate</title>
        <screen><computeroutput>usage: nova network-disassociate [--host-only [&lt;0|1&gt;]]
                                 [--project-only [&lt;0|1&gt;]]
                                 &lt;network&gt;</computeroutput></screen>
        <para>
Disassociate host and/or project from the given network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network&gt;</command></term>
    <listitem>
      <para>
        UUID of network.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--host-only [&lt;0|1&gt;]</command></term>
    <listitem>
      <para>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-only [&lt;0|1&gt;]</command></term>
    <listitem>
      <para>
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-list">
        <title>nova network-list</title>
        <screen><computeroutput>usage: nova network-list [--fields &lt;fields&gt;]</computeroutput></screen>
        <para>
Print a list of available networks.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--fields &lt;fields&gt;</command></term>
    <listitem>
      <para>
        Comma-separated list of fields to display. Use the show
      command to see which fields are available.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_network-show">
        <title>nova network-show</title>
        <screen><computeroutput>usage: nova network-show &lt;network&gt;</computeroutput></screen>
        <para>
Show details about the given network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network&gt;</command></term>
    <listitem>
      <para>
        UUID or label of network.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_pause">
        <title>nova pause</title>
        <screen><computeroutput>usage: nova pause &lt;server&gt;</computeroutput></screen>
        <para>
Pause a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-class-show">
        <title>nova quota-class-show</title>
        <screen><computeroutput>usage: nova quota-class-show &lt;class&gt;</computeroutput></screen>
        <para>
List the quotas for a quota class.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;class&gt;</command></term>
    <listitem>
      <para>
        Name of quota class to list the quotas for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-class-update">
        <title>nova quota-class-update</title>
        <screen><computeroutput>usage: nova quota-class-update [--instances &lt;instances&gt;] [--cores &lt;cores&gt;]
                               [--ram &lt;ram&gt;] [--floating-ips &lt;floating-ips&gt;]
                               [--fixed-ips &lt;fixed-ips&gt;]
                               [--metadata-items &lt;metadata-items&gt;]
                               [--injected-files &lt;injected-files&gt;]
                               [--injected-file-content-bytes &lt;injected-file-content-bytes&gt;]
                               [--injected-file-path-bytes &lt;injected-file-path-bytes&gt;]
                               [--key-pairs &lt;key-pairs&gt;]
                               [--security-groups &lt;security-groups&gt;]
                               [--security-group-rules &lt;security-group-rules&gt;]
                               [--server-groups &lt;server-groups&gt;]
                               [--server-group-members &lt;server-group-members&gt;]
                               &lt;class&gt;</computeroutput></screen>
        <para>
Update the quotas for a quota class.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;class&gt;</command></term>
    <listitem>
      <para>
        Name of quota class to set the quotas for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--instances &lt;instances&gt;</command></term>
    <listitem>
      <para>
        New value for the "instances" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cores &lt;cores&gt;</command></term>
    <listitem>
      <para>
        New value for the "cores" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ram &lt;ram&gt;</command></term>
    <listitem>
      <para>
        New value for the "ram" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--floating-ips &lt;floating-ips&gt;</command></term>
    <listitem>
      <para>
      New value for the "floating-ips" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fixed-ips &lt;fixed-ips&gt;</command></term>
    <listitem>
      <para>
        New value for the "fixed-ips" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--metadata-items &lt;metadata-items&gt;</command></term>
    <listitem>
      <para>
      New value for the "metadata-items" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-files &lt;injected-files&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-files" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-file-content-bytes &lt;injected-file-content-bytes&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-file-content-
      bytes" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-file-path-bytes &lt;injected-file-path-bytes&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-file-path-bytes"
      quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-pairs &lt;key-pairs&gt;</command></term>
    <listitem>
      <para>
        New value for the "key-pairs" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--security-groups &lt;security-groups&gt;</command></term>
    <listitem>
      <para>
      New value for the "security-groups" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--security-group-rules &lt;security-group-rules&gt;</command></term>
    <listitem>
      <para>
      New value for the "security-group-rules"
      quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--server-groups &lt;server-groups&gt;</command></term>
    <listitem>
      <para>
      New value for the "server-groups" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--server-group-members &lt;server-group-members&gt;</command></term>
    <listitem>
      <para>
      New value for the "server-group-members"
      quota.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-defaults">
        <title>nova quota-defaults</title>
        <screen><computeroutput>usage: nova quota-defaults [--tenant &lt;tenant-id&gt;]</computeroutput></screen>
        <para>
List the default quotas for a tenant.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--tenant &lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        ID of tenant to list the default quotas for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-delete">
        <title>nova quota-delete</title>
        <screen><computeroutput>usage: nova quota-delete --tenant &lt;tenant-id&gt; [--user &lt;user-id&gt;]</computeroutput></screen>
        <para>
Delete quota for a tenant/user so their quota will Revert back to default.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--tenant &lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        ID of tenant to delete quota for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        ID of user to delete quota for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-show">
        <title>nova quota-show</title>
        <screen><computeroutput>usage: nova quota-show [--tenant &lt;tenant-id&gt;] [--user &lt;user-id&gt;]</computeroutput></screen>
        <para>
List the quotas for a tenant/user.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--tenant &lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        ID of tenant to list the quotas for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        ID of user to list the quotas for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_quota-update">
        <title>nova quota-update</title>
        <screen><computeroutput>usage: nova quota-update [--user &lt;user-id&gt;] [--instances &lt;instances&gt;]
                         [--cores &lt;cores&gt;] [--ram &lt;ram&gt;]
                         [--floating-ips &lt;floating-ips&gt;]
                         [--fixed-ips &lt;fixed-ips&gt;]
                         [--metadata-items &lt;metadata-items&gt;]
                         [--injected-files &lt;injected-files&gt;]
                         [--injected-file-content-bytes &lt;injected-file-content-bytes&gt;]
                         [--injected-file-path-bytes &lt;injected-file-path-bytes&gt;]
                         [--key-pairs &lt;key-pairs&gt;]
                         [--security-groups &lt;security-groups&gt;]
                         [--security-group-rules &lt;security-group-rules&gt;]
                         [--server-groups &lt;server-groups&gt;]
                         [--server-group-members &lt;server-group-members&gt;]
                         [--force]
                         &lt;tenant-id&gt;</computeroutput></screen>
        <para>
Update the quotas for a tenant/user.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        ID of tenant to set the quotas for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--user &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        ID of user to set the quotas for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--instances &lt;instances&gt;</command></term>
    <listitem>
      <para>
        New value for the "instances" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--cores &lt;cores&gt;</command></term>
    <listitem>
      <para>
        New value for the "cores" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ram &lt;ram&gt;</command></term>
    <listitem>
      <para>
        New value for the "ram" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--floating-ips &lt;floating-ips&gt;</command></term>
    <listitem>
      <para>
      New value for the "floating-ips" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--fixed-ips &lt;fixed-ips&gt;</command></term>
    <listitem>
      <para>
        New value for the "fixed-ips" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--metadata-items &lt;metadata-items&gt;</command></term>
    <listitem>
      <para>
      New value for the "metadata-items" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-files &lt;injected-files&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-files" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-file-content-bytes &lt;injected-file-content-bytes&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-file-content-
      bytes" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--injected-file-path-bytes &lt;injected-file-path-bytes&gt;</command></term>
    <listitem>
      <para>
      New value for the "injected-file-path-bytes"
      quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--key-pairs &lt;key-pairs&gt;</command></term>
    <listitem>
      <para>
        New value for the "key-pairs" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--security-groups &lt;security-groups&gt;</command></term>
    <listitem>
      <para>
      New value for the "security-groups" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--security-group-rules &lt;security-group-rules&gt;</command></term>
    <listitem>
      <para>
      New value for the "security-group-rules"
      quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--server-groups &lt;server-groups&gt;</command></term>
    <listitem>
      <para>
      New value for the "server-groups" quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--server-group-members &lt;server-group-members&gt;</command></term>
    <listitem>
      <para>
      New value for the "server-group-members"
      quota.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--force</command></term>
    <listitem>
      <para>
        Whether force update the quota even if the
      already used and reserved exceeds the new
      quota.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_reboot">
        <title>nova reboot</title>
        <screen><computeroutput>usage: nova reboot [--hard] [--poll] &lt;server&gt; [&lt;server&gt; ...]</computeroutput></screen>
        <para>
Reboot a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--hard</command></term>
    <listitem>
      <para>
        Perform a hard reboot (instead of a soft one).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Poll until reboot is complete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_rebuild">
        <title>nova rebuild</title>
        <screen><computeroutput>usage: nova rebuild [--rebuild-password &lt;rebuild-password&gt;] [--poll]
                    [--minimal] [--preserve-ephemeral] [--name &lt;name&gt;]
                    [--meta &lt;key=value&gt;] [--file &lt;dst-path=src-path&gt;]
                    &lt;server&gt; &lt;image&gt;</computeroutput></screen>
        <para>
Shutdown, re-image, and re-boot a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;image&gt;</command></term>
    <listitem>
      <para>
        Name or ID of new image.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--rebuild-password &lt;rebuild-password&gt;</command></term>
    <listitem>
      <para>
      Set the provided admin password on the rebuilt
      server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Report the server rebuild progress until it
      completes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--minimal</command></term>
    <listitem>
      <para>
        Skips flavor/image lookups when showing
      servers.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--preserve-ephemeral</command></term>
    <listitem>
      <para>
        Preserve the default ephemeral storage
      partition on rebuild.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--name &lt;name&gt;</command></term>
    <listitem>
      <para>
        Name for the new server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meta &lt;key=value&gt;</command></term>
    <listitem>
      <para>
        Record arbitrary key/value metadata to
      /meta_data.json on the metadata server. Can be
      specified multiple times.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--file &lt;dst-path=src-path&gt;</command></term>
    <listitem>
      <para>
        Store arbitrary files from &lt;src-path&gt; locally
      to &lt;dst-path&gt; on the new server. You may store
      up to 5 files.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_refresh-network">
        <title>nova refresh-network</title>
        <screen><computeroutput>usage: nova refresh-network &lt;server&gt;</computeroutput></screen>
        <para>
Refresh server network information.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of a server for which the network cache should be
      refreshed from neutron (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_remove-fixed-ip">
        <title>nova remove-fixed-ip</title>
        <screen><computeroutput>usage: nova remove-fixed-ip &lt;server&gt; &lt;address&gt;</computeroutput></screen>
        <para>
Remove an IP address from a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;address&gt;</command></term>
    <listitem>
      <para>
        IP Address.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_remove-secgroup">
        <title>nova remove-secgroup</title>
        <screen><computeroutput>usage: nova remove-secgroup &lt;server&gt; &lt;secgroup&gt;</computeroutput></screen>
        <para>
Remove a Security Group from a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        Name of Security Group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_rename">
        <title>nova rename</title>
        <screen><computeroutput>usage: nova rename &lt;server&gt; &lt;name&gt;</computeroutput></screen>
        <para>
Rename a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name (old name) or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        New name for the server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_rescue">
        <title>nova rescue</title>
        <screen><computeroutput>usage: nova rescue [--password &lt;password&gt;] [--image &lt;image&gt;] &lt;server&gt;</computeroutput></screen>
        <para>
Reboots a server into rescue mode, which starts the machine from either the
initial image or a specified image, attaching the current boot disk as
secondary.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--password &lt;password&gt;</command></term>
    <listitem>
      <para>
        The admin password to be set in the rescue
      environment.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--image &lt;image&gt;</command></term>
    <listitem>
      <para>
        The image to rescue with.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_reset-network">
        <title>nova reset-network</title>
        <screen><computeroutput>usage: nova reset-network &lt;server&gt;</computeroutput></screen>
        <para>
Reset network of a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_reset-state">
        <title>nova reset-state</title>
        <screen><computeroutput>usage: nova reset-state [--all-tenants] [--active] &lt;server&gt; [&lt;server&gt; ...]</computeroutput></screen>
        <para>
Reset the state of a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants</command></term>
    <listitem>
      <para>
        Reset state server(s) in another tenant by name (Admin only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--active</command></term>
    <listitem>
      <para>
        Request the server be reset to "active" state instead of
      "error" state (the default).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_resize">
        <title>nova resize</title>
        <screen><computeroutput>usage: nova resize [--poll] &lt;server&gt; &lt;flavor&gt;</computeroutput></screen>
        <para>
Resize a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;flavor&gt;</command></term>
    <listitem>
      <para>
        Name or ID of new flavor.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--poll</command></term>
    <listitem>
      <para>
        Report the server resize progress until it completes.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_resize-confirm">
        <title>nova resize-confirm</title>
        <screen><computeroutput>usage: nova resize-confirm &lt;server&gt;</computeroutput></screen>
        <para>
Confirm a previous resize.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_resize-revert">
        <title>nova resize-revert</title>
        <screen><computeroutput>usage: nova resize-revert &lt;server&gt;</computeroutput></screen>
        <para>
Revert a previous resize (and return to the previous VM).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_restore">
        <title>nova restore</title>
        <screen><computeroutput>usage: nova restore &lt;server&gt;</computeroutput></screen>
        <para>
Restore a soft-deleted server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_resume">
        <title>nova resume</title>
        <screen><computeroutput>usage: nova resume &lt;server&gt;</computeroutput></screen>
        <para>
Resume a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_scrub">
        <title>nova scrub</title>
        <screen><computeroutput>usage: nova scrub &lt;project_id&gt;</computeroutput></screen>
        <para>
Delete networks and security groups associated with a project.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;project_id&gt;</command></term>
    <listitem>
      <para>
        The ID of the project.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-add-default-rule">
        <title>nova secgroup-add-default-rule</title>
        <screen><computeroutput>usage: nova secgroup-add-default-rule &lt;ip-proto&gt; &lt;from-port&gt; &lt;to-port&gt; &lt;cidr&gt;</computeroutput></screen>
        <para>
Add a rule to the set of rules that will be added to the 'default' security
group for new tenants (nova-network only).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cidr&gt;</command></term>
    <listitem>
      <para>
        CIDR for address range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-add-group-rule">
        <title>nova secgroup-add-group-rule</title>
        <screen><computeroutput>usage: nova secgroup-add-group-rule &lt;secgroup&gt; &lt;source-group&gt; &lt;ip-proto&gt;
                                    &lt;from-port&gt; &lt;to-port&gt;</computeroutput></screen>
        <para>
Add a source group rule to a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;source-group&gt;</command></term>
    <listitem>
      <para>
        ID or name of source group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-add-rule">
        <title>nova secgroup-add-rule</title>
        <screen><computeroutput>usage: nova secgroup-add-rule &lt;secgroup&gt; &lt;ip-proto&gt; &lt;from-port&gt; &lt;to-port&gt;
                              &lt;cidr&gt;</computeroutput></screen>
        <para>
Add a rule to a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cidr&gt;</command></term>
    <listitem>
      <para>
        CIDR for address range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-create">
        <title>nova secgroup-create</title>
        <screen><computeroutput>usage: nova secgroup-create &lt;name&gt; &lt;description&gt;</computeroutput></screen>
        <para>
Create a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;description&gt;</command></term>
    <listitem>
      <para>
        Description of security group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-delete">
        <title>nova secgroup-delete</title>
        <screen><computeroutput>usage: nova secgroup-delete &lt;secgroup&gt;</computeroutput></screen>
        <para>
Delete a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-delete-default-rule">
        <title>nova secgroup-delete-default-rule</title>
        <screen><computeroutput>usage: nova secgroup-delete-default-rule &lt;ip-proto&gt; &lt;from-port&gt; &lt;to-port&gt;
                                         &lt;cidr&gt;</computeroutput></screen>
        <para>
Delete a rule from the set of rules that will be added to the 'default'
security group for new tenants (nova-network only).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cidr&gt;</command></term>
    <listitem>
      <para>
        CIDR for address range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-delete-group-rule">
        <title>nova secgroup-delete-group-rule</title>
        <screen><computeroutput>usage: nova secgroup-delete-group-rule &lt;secgroup&gt; &lt;source-group&gt; &lt;ip-proto&gt;
                                       &lt;from-port&gt; &lt;to-port&gt;</computeroutput></screen>
        <para>
Delete a source group rule from a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;source-group&gt;</command></term>
    <listitem>
      <para>
        ID or name of source group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-delete-rule">
        <title>nova secgroup-delete-rule</title>
        <screen><computeroutput>usage: nova secgroup-delete-rule &lt;secgroup&gt; &lt;ip-proto&gt; &lt;from-port&gt; &lt;to-port&gt;
                                 &lt;cidr&gt;</computeroutput></screen>
        <para>
Delete a rule from a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;ip-proto&gt;</command></term>
    <listitem>
      <para>
        IP protocol (icmp, tcp, udp).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;from-port&gt;</command></term>
    <listitem>
      <para>
        Port at start of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;to-port&gt;</command></term>
    <listitem>
      <para>
        Port at end of range.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cidr&gt;</command></term>
    <listitem>
      <para>
        CIDR for address range.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-list">
        <title>nova secgroup-list</title>
        <screen><computeroutput>usage: nova secgroup-list [--all-tenants [&lt;0|1&gt;]]</computeroutput></screen>
        <para>
List security groups for the current tenant.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants [&lt;0|1&gt;]</command></term>
    <listitem>
      <para>
        Display information from all tenants (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-list-default-rules">
        <title>nova secgroup-list-default-rules</title>
        <screen><computeroutput>usage: nova secgroup-list-default-rules</computeroutput></screen>
        <para>
List rules that will be added to the 'default' security group for new tenants.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-list-rules">
        <title>nova secgroup-list-rules</title>
        <screen><computeroutput>usage: nova secgroup-list-rules &lt;secgroup&gt;</computeroutput></screen>
        <para>
List rules for a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_secgroup-update">
        <title>nova secgroup-update</title>
        <screen><computeroutput>usage: nova secgroup-update &lt;secgroup&gt; &lt;name&gt; &lt;description&gt;</computeroutput></screen>
        <para>
Update a security group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;secgroup&gt;</command></term>
    <listitem>
      <para>
        ID or name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Name of security group.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;description&gt;</command></term>
    <listitem>
      <para>
        Description of security group.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_server-group-create">
        <title>nova server-group-create</title>
        <screen><computeroutput>usage: nova server-group-create &lt;name&gt; [&lt;policy&gt; [&lt;policy&gt; ...]]</computeroutput></screen>
        <para>
Create a new server group with the specified details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;name&gt;</command></term>
    <listitem>
      <para>
        Server group name.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;policy&gt;</command></term>
    <listitem>
      <para>
        Policies for the server groups. ("affinity" or "anti-affinity")
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_server-group-delete">
        <title>nova server-group-delete</title>
        <screen><computeroutput>usage: nova server-group-delete &lt;id&gt; [&lt;id&gt; ...]</computeroutput></screen>
        <para>
Delete specific server group(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        Unique ID(s) of the server group to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_server-group-get">
        <title>nova server-group-get</title>
        <screen><computeroutput>usage: nova server-group-get &lt;id&gt;</computeroutput></screen>
        <para>
Get a specific server group.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        Unique ID of the server group to get.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_server-group-list">
        <title>nova server-group-list</title>
        <screen><computeroutput>usage: nova server-group-list [--all-projects]</computeroutput></screen>
        <para>
Print a list of all server groups.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-projects</command></term>
    <listitem>
      <para>
        Display server groups from all projects (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_service-delete">
        <title>nova service-delete</title>
        <screen><computeroutput>usage: nova service-delete &lt;id&gt;</computeroutput></screen>
        <para>
Delete the service.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;id&gt;</command></term>
    <listitem>
      <para>
        ID of service.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_service-disable">
        <title>nova service-disable</title>
        <screen><computeroutput>usage: nova service-disable [--reason &lt;reason&gt;] &lt;hostname&gt; &lt;binary&gt;</computeroutput></screen>
        <para>
Disable the service.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;binary&gt;</command></term>
    <listitem>
      <para>
        Service binary.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--reason &lt;reason&gt;</command></term>
    <listitem>
      <para>
        Reason for disabling service.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_service-enable">
        <title>nova service-enable</title>
        <screen><computeroutput>usage: nova service-enable &lt;hostname&gt; &lt;binary&gt;</computeroutput></screen>
        <para>
Enable the service.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;binary&gt;</command></term>
    <listitem>
      <para>
        Service binary.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_service-force-down">
        <title>nova service-force-down</title>
        <screen><computeroutput>usage: nova service-force-down [--unset] &lt;hostname&gt; &lt;binary&gt;</computeroutput></screen>
        <para>
Force service to down. (Supported by API versions '2.11' - '2.latest') [hint:
use '--os-compute-api-version' flag to show help message for proper version]
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;binary&gt;</command></term>
    <listitem>
      <para>
        Service binary.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--unset</command></term>
    <listitem>
      <para>
        Unset the force state down of service.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_service-list">
        <title>nova service-list</title>
        <screen><computeroutput>usage: nova service-list [--host &lt;hostname&gt;] [--binary &lt;binary&gt;]</computeroutput></screen>
        <para>
Show a list of all running services. Filter by host &amp; binary.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--host &lt;hostname&gt;</command></term>
    <listitem>
      <para>
        Name of host.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--binary &lt;binary&gt;</command></term>
    <listitem>
      <para>
        Service binary.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_set-password">
        <title>nova set-password</title>
        <screen><computeroutput>usage: nova set-password &lt;server&gt;</computeroutput></screen>
        <para>
Change the admin password for a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_shelve">
        <title>nova shelve</title>
        <screen><computeroutput>usage: nova shelve &lt;server&gt;</computeroutput></screen>
        <para>
Shelve a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_shelve-offload">
        <title>nova shelve-offload</title>
        <screen><computeroutput>usage: nova shelve-offload &lt;server&gt;</computeroutput></screen>
        <para>
Remove a shelved server from the compute node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_show">
        <title>nova show</title>
        <screen><computeroutput>usage: nova show [--minimal] &lt;server&gt;</computeroutput></screen>
        <para>
Show details about the given server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--minimal</command></term>
    <listitem>
      <para>
        Skips flavor/image lookups when showing servers.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_ssh">
        <title>nova ssh</title>
        <screen><computeroutput>usage: nova ssh [--port PORT] [--address-type ADDRESS_TYPE]
                [--network &lt;network&gt;] [--ipv6] [--login &lt;login&gt;] [-i IDENTITY]
                [--extra-opts EXTRA]
                &lt;server&gt;</computeroutput></screen>
        <para>
SSH into a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--port PORT</command></term>
    <listitem>
      <para>
        Optional flag to indicate which port to use
      for ssh. (Default=22)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--address-type ADDRESS_TYPE</command></term>
    <listitem>
      <para>
        Optional flag to indicate which IP type to
      use. Possible values includes fixed and
      floating (the Default).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--network &lt;network&gt;</command></term>
    <listitem>
      <para>
        Network to use for the ssh.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ipv6</command></term>
    <listitem>
      <para>
        Optional flag to indicate whether to use an
      IPv6 address attached to a server. (Defaults
      to IPv4 address)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--login &lt;login&gt;</command></term>
    <listitem>
      <para>
        Login to use.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-i IDENTITY, --identity IDENTITY</command></term>
    <listitem>
      <para>
      Private key file, same as the -i option to the
      ssh command.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--extra-opts EXTRA</command></term>
    <listitem>
      <para>
        Extra options to pass to ssh. see: man ssh.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_start">
        <title>nova start</title>
        <screen><computeroutput>usage: nova start [--all-tenants] &lt;server&gt; [&lt;server&gt; ...]</computeroutput></screen>
        <para>
Start the server(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants</command></term>
    <listitem>
      <para>
        Start server(s) in another tenant by name (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_stop">
        <title>nova stop</title>
        <screen><computeroutput>usage: nova stop [--all-tenants] &lt;server&gt; [&lt;server&gt; ...]</computeroutput></screen>
        <para>
Stop the server(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server(s).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--all-tenants</command></term>
    <listitem>
      <para>
        Stop server(s) in another tenant by name (Admin only).
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_suspend">
        <title>nova suspend</title>
        <screen><computeroutput>usage: nova suspend &lt;server&gt;</computeroutput></screen>
        <para>
Suspend a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_tenant-network-create">
        <title>nova tenant-network-create</title>
        <screen><computeroutput>usage: nova tenant-network-create &lt;network_label&gt; &lt;cidr&gt;</computeroutput></screen>
        <para>
Create a tenant network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network_label&gt;</command></term>
    <listitem>
      <para>
        Network label (ex. my_new_network)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;cidr&gt;</command></term>
    <listitem>
      <para>
        IP block to allocate from (ex. 172.16.0.0/24 or
      2001:DB8::/64)
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_tenant-network-delete">
        <title>nova tenant-network-delete</title>
        <screen><computeroutput>usage: nova tenant-network-delete &lt;network_id&gt;</computeroutput></screen>
        <para>
Delete a tenant network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network_id&gt;</command></term>
    <listitem>
      <para>
        ID of network
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_tenant-network-list">
        <title>nova tenant-network-list</title>
        <screen><computeroutput>usage: nova tenant-network-list</computeroutput></screen>
        <para>
List tenant networks.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_tenant-network-show">
        <title>nova tenant-network-show</title>
        <screen><computeroutput>usage: nova tenant-network-show &lt;network_id&gt;</computeroutput></screen>
        <para>
Show a tenant network.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;network_id&gt;</command></term>
    <listitem>
      <para>
        ID of network
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_unlock">
        <title>nova unlock</title>
        <screen><computeroutput>usage: nova unlock &lt;server&gt;</computeroutput></screen>
        <para>
Unlock a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_unpause">
        <title>nova unpause</title>
        <screen><computeroutput>usage: nova unpause &lt;server&gt;</computeroutput></screen>
        <para>
Unpause a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_unrescue">
        <title>nova unrescue</title>
        <screen><computeroutput>usage: nova unrescue &lt;server&gt;</computeroutput></screen>
        <para>
Restart the server from normal boot disk again.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_unshelve">
        <title>nova unshelve</title>
        <screen><computeroutput>usage: nova unshelve &lt;server&gt;</computeroutput></screen>
        <para>
Unshelve a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_usage">
        <title>nova usage</title>
        <screen><computeroutput>usage: nova usage [--start &lt;start&gt;] [--end &lt;end&gt;] [--tenant &lt;tenant-id&gt;]</computeroutput></screen>
        <para>
Show usage data for a single tenant.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--start &lt;start&gt;</command></term>
    <listitem>
      <para>
        Usage range start date ex 2012-01-20. (default: 4
      weeks ago)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--end &lt;end&gt;</command></term>
    <listitem>
      <para>
        Usage range end date, ex 2012-01-20. (default:
      tomorrow)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--tenant &lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        UUID of tenant to get usage for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_usage-list">
        <title>nova usage-list</title>
        <screen><computeroutput>usage: nova usage-list [--start &lt;start&gt;] [--end &lt;end&gt;]</computeroutput></screen>
        <para>
List usage data for all tenants.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--start &lt;start&gt;</command></term>
    <listitem>
      <para>
        Usage range start date ex 2012-01-20. (default: 4 weeks
      ago)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--end &lt;end&gt;</command></term>
    <listitem>
      <para>
        Usage range end date, ex 2012-01-20. (default: tomorrow)
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_version-list">
        <title>nova version-list</title>
        <screen><computeroutput>usage: nova version-list</computeroutput></screen>
        <para>
List all API versions.
        </para>
    </section>
    <section xml:id="novaclient_subcommand_virtual-interface-list">
        <title>nova virtual-interface-list</title>
        <screen><computeroutput>usage: nova virtual-interface-list &lt;server&gt;</computeroutput></screen>
        <para>
Show virtual interface info about the given server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_volume-attach">
        <title>nova volume-attach</title>
        <screen><computeroutput>usage: nova volume-attach &lt;server&gt; &lt;volume&gt; [&lt;device&gt;]</computeroutput></screen>
        <para>
Attach a volume to a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;volume&gt;</command></term>
    <listitem>
      <para>
        ID of the volume to attach.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;device&gt;</command></term>
    <listitem>
      <para>
        Name of the device e.g. /dev/vdb. Use "auto" for autoassign (if
      supported). Libvirt driver will use default device name.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_volume-attachments">
        <title>nova volume-attachments</title>
        <screen><computeroutput>usage: nova volume-attachments &lt;server&gt;</computeroutput></screen>
        <para>
List all the volumes attached to a server
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_volume-detach">
        <title>nova volume-detach</title>
        <screen><computeroutput>usage: nova volume-detach &lt;server&gt; &lt;volume&gt;</computeroutput></screen>
        <para>
Detach a volume from a server.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;volume&gt;</command></term>
    <listitem>
      <para>
        ID of the volume to detach.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_volume-update">
        <title>nova volume-update</title>
        <screen><computeroutput>usage: nova volume-update &lt;server&gt; &lt;attachment&gt; &lt;volume&gt;</computeroutput></screen>
        <para>
Update volume attachment.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;server&gt;</command></term>
    <listitem>
      <para>
        Name or ID of server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;attachment&gt;</command></term>
    <listitem>
      <para>
        Attachment ID of the volume.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;volume&gt;</command></term>
    <listitem>
      <para>
        ID of the volume to attach.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_x509-create-cert">
        <title>nova x509-create-cert</title>
        <screen><computeroutput>usage: nova x509-create-cert [&lt;private-key-filename&gt;] [&lt;x509-cert-filename&gt;]</computeroutput></screen>
        <para>
Create x509 cert for a user in tenant.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;private-key-filename&gt;</command></term>
    <listitem>
      <para>
        Filename for the private key. [Default: pk.pem]
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>&lt;x509-cert-filename&gt;</command></term>
    <listitem>
      <para>
        Filename for the X.509 certificate. [Default:
      cert.pem]
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="novaclient_subcommand_x509-get-root-cert">
        <title>nova x509-get-root-cert</title>
        <screen><computeroutput>usage: nova x509-get-root-cert [&lt;filename&gt;]</computeroutput></screen>
        <para>
Fetch the x509 root cert.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;filename&gt;</command></term>
    <listitem>
      <para>
        Filename to write the x509 root cert.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
