<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="senlinclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Clustering service command-line client</title>

    <para>The <command>senlin</command> client is the command-line
        interface (CLI) for the Clustering service API and its extensions.

       This chapter documents <command>senlin</command> version
        <literal>0.1.8</literal>.
    </para>

    <para>For help on a specific <command>senlin</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>senlin</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="senlinclient_command_usage">
       <title>senlin usage</title>
        <screen><computeroutput>usage: senlin [--version] [-d] [-v] [--api-timeout API_TIMEOUT]
              [--senlin-api-version SENLIN_API_VERSION]
              [--os-auth-plugin AUTH_PLUGIN] [--os-auth-url AUTH_URL]
              [--os-project-id PROJECT_ID] [--os-project-name PROJECT_NAME]
              [--os-tenant-id TENANT_ID] [--os-tenant-name TENANT_NAME]
              [--os-domain-id DOMAIN_ID] [--os-domain-name DOMAIN_NAME]
              [--os-project-domain-id PROJECT_DOMAIN_ID]
              [--os-project-domain-name PROJECT_DOMAIN_NAME]
              [--os-user-domain-id USER_DOMAIN_ID]
              [--os-user-domain-name USER_DOMAIN_NAME]
              [--os-username USERNAME] [--os-user-id USER_ID]
              [--os-password PASSWORD] [--os-trust-id TRUST_ID]
              [--os-cacert CA_BUNDLE_FILE | --verify | --insecure]
              [--os-token TOKEN] [--os-access-info ACCESS_INFO]
              [--os-api-name &lt;service&gt;=&lt;name&gt;]
              [--os-api-region &lt;service&gt;=&lt;region&gt;]
              [--os-api-version &lt;service&gt;=&lt;version&gt;]
              [--os-api-interface &lt;service&gt;=&lt;interface&gt;]
              &lt;subcommand&gt; ...</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>action-list</command></term>
    <listitem>
      <para>
        List actions.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>action-show</command></term>
    <listitem>
      <para>
        Show detailed info about the specified action.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>build-info</command></term>
    <listitem>
      <para>
        Retrieve build information.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-create</command></term>
    <listitem>
      <para>
        Create the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-delete</command></term>
    <listitem>
      <para>
        Delete the cluster(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-list</command></term>
    <listitem>
      <para>
        List the user's clusters.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-node-add</command></term>
    <listitem>
      <para>
        Add specified nodes to cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-node-del</command></term>
    <listitem>
      <para>
        Delete specified nodes from cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-node-list</command></term>
    <listitem>
      <para>
        List nodes from cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-attach</command></term>
    <listitem>
      <para>
      Attach policy to cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-detach</command></term>
    <listitem>
      <para>
      Detach policy from cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-disable</command></term>
    <listitem>
      <para>
      Disable a policy on a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-enable</command></term>
    <listitem>
      <para>
      Enable a policy on cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-list</command></term>
    <listitem>
      <para>
      List policies from cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-show</command></term>
    <listitem>
      <para>
      Show a specific policy that is bound to the specified
      cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-policy-update</command></term>
    <listitem>
      <para>
      Update a policy on cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-resize</command></term>
    <listitem>
      <para>
        Resize a cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-scale-in</command></term>
    <listitem>
      <para>
        Scale in a cluster by the specified number of nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-scale-out</command></term>
    <listitem>
      <para>
        Scale out a cluster by the specified number of nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-show</command></term>
    <listitem>
      <para>
        Show details of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>cluster-update</command></term>
    <listitem>
      <para>
        Update the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-list</command></term>
    <listitem>
      <para>
        List events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-show</command></term>
    <listitem>
      <para>
        Describe the event.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-create</command></term>
    <listitem>
      <para>
        Create the node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-delete</command></term>
    <listitem>
      <para>
        Delete the node(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-join</command></term>
    <listitem>
      <para>
        Make node join the specified cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-leave</command></term>
    <listitem>
      <para>
        Make node leave its current cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-list</command></term>
    <listitem>
      <para>
        Show list of nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-show</command></term>
    <listitem>
      <para>
        Show detailed info about the specified node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>node-update</command></term>
    <listitem>
      <para>
        Update the node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-create</command></term>
    <listitem>
      <para>
        Create a policy.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-delete</command></term>
    <listitem>
      <para>
        Delete policy(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-list</command></term>
    <listitem>
      <para>
        List policies that meet the criteria.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-show</command></term>
    <listitem>
      <para>
        Show the policy details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-type-list</command></term>
    <listitem>
      <para>
        List the available policy types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-type-schema</command></term>
    <listitem>
      <para>
        Get the spec of a policy type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-type-show</command></term>
    <listitem>
      <para>
        Show the policy type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>policy-update</command></term>
    <listitem>
      <para>
        Update a policy.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-create</command></term>
    <listitem>
      <para>
        Create a profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-delete</command></term>
    <listitem>
      <para>
        Delete profile(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-list</command></term>
    <listitem>
      <para>
        List profiles that meet the criteria.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-show</command></term>
    <listitem>
      <para>
        Show the profile details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-type-list</command></term>
    <listitem>
      <para>
        List the available profile types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-type-schema</command></term>
    <listitem>
      <para>
      Get the spec of a profile type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>profile-update</command></term>
    <listitem>
      <para>
        Update a profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trigger-create</command></term>
    <listitem>
      <para>
        Create a trigger.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trigger-delete</command></term>
    <listitem>
      <para>
        Delete trigger(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trigger-list</command></term>
    <listitem>
      <para>
        List triggers that meet the criteria.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trigger-show</command></term>
    <listitem>
      <para>
        Show the trigger details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>webhook-create</command></term>
    <listitem>
      <para>
        Create a webhook.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>webhook-delete</command></term>
    <listitem>
      <para>
        Delete webhook(s).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>webhook-list</command></term>
    <listitem>
      <para>
        List webhooks that meet the criteria.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>webhook-show</command></term>
    <listitem>
      <para>
        Show the webhook details.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_command_optional">
        <title>senlin optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        Shows the client version and exits.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d, --debug</command></term>
    <listitem>
      <para>
        Defaults to <code>env[SENLINCLIENT_DEBUG]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v, --verbose</command></term>
    <listitem>
      <para>
        Print more verbose output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--api-timeout API_TIMEOUT</command></term>
    <listitem>
      <para>
      Number of seconds to wait for an API response,
      defaults to system socket timeout
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--senlin-api-version SENLIN_API_VERSION</command></term>
    <listitem>
      <para>
      Version number for Senlin API to use, Default to "1".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-plugin AUTH_PLUGIN</command></term>
    <listitem>
      <para>
      Authentication plugin, default to <code>env[OS_AUTH_PLUGIN]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url AUTH_URL</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_URL]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-id PROJECT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PROJECT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-name PROJECT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PROJECT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id TENANT_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name TENANT_NAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-id DOMAIN_ID</command></term>
    <listitem>
      <para>
      Domain ID for scope of authorization, defaults to
      <code>env[OS_DOMAIN_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-domain-name DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Domain name for scope of authorization, defaults to
      <code>env[OS_DOMAIN_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-id PROJECT_DOMAIN_ID</command></term>
    <listitem>
      <para>
      Project domain ID for scope of authorization, defaults
      to <code>env[OS_PROJECT_DOMAIN_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-name PROJECT_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      Project domain name for scope of authorization,
      defaults to <code>env[OS_PROJECT_DOMAIN_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-id USER_DOMAIN_ID</command></term>
    <listitem>
      <para>
      User domain ID for scope of authorization, defaults to
      <code>env[OS_USER_DOMAIN_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-name USER_DOMAIN_NAME</command></term>
    <listitem>
      <para>
      User domain name for scope of authorization, defaults
      to <code>env[OS_USER_DOMAIN_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-username USERNAME</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_USERNAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-id USER_ID</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_USER_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password PASSWORD</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PASSWORD]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-trust-id TRUST_ID</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TRUST_ID]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cacert CA_BUNDLE_FILE</command></term>
    <listitem>
      <para>
      Path of CA TLS certificate(s) used to verify the
      remote server's certificate. Without this option
      senlin looks for the default system CA certificates.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--verify</command></term>
    <listitem>
      <para>
        Verify server certificate (default)
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insecure</command></term>
    <listitem>
      <para>
        Explicitly allow senlinclient to perform "insecure
      SSL" (HTTPS) requests. The server's certificate will
      not be verified against any certificate authorities.
      This option should be used with caution.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-token TOKEN</command></term>
    <listitem>
      <para>
        A string token to bootstrap the Keystone database,
      defaults to <code>env[OS_TOKEN]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-access-info ACCESS_INFO</command></term>
    <listitem>
      <para>
      Access info, defaults to <code>env[OS_ACCESS_INFO]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-api-name &lt;service&gt;=&lt;name&gt;</command></term>
    <listitem>
      <para>
      Desired API names, defaults to <code>env[OS_API_NAME]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-api-region &lt;service&gt;=&lt;region&gt;</command></term>
    <listitem>
      <para>
      Desired API region, defaults to <code>env[OS_API_REGION]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-api-version &lt;service&gt;=&lt;version&gt;</command></term>
    <listitem>
      <para>
      Desired API versions, defaults to <code>env[OS_API_VERSION]</code>
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-api-interface &lt;service&gt;=&lt;interface&gt;</command></term>
    <listitem>
      <para>
      Desired API interface, defaults to <code>env[OS_INTERFACE]</code>
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_action-list">
        <title>senlin action-list</title>
        <screen><computeroutput>usage: senlin action-list [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;] [-k &lt;KEYS&gt;]
                          [-s &lt;DIR&gt;] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-D] [-F]</computeroutput></screen>
        <para>
List actions.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned actions. This
      can be specified multiple times, or once with
      parameters separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of nodes returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return nodes that appear after the given node ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted nodes if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_action-show">
        <title>senlin action-show</title>
        <screen><computeroutput>usage: senlin action-show &lt;ACTION&gt;</computeroutput></screen>
        <para>
Show detailed info about the specified action.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ACTION&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the action to show the details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_build-info">
        <title>senlin build-info</title>
        <screen><computeroutput>usage: senlin build-info</computeroutput></screen>
        <para>
Retrieve build information. :param sc: Instance of senlinclient. :param args:
Additional command line arguments, if any.
        </para>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-create">
        <title>senlin cluster-create</title>
        <screen><computeroutput>usage: senlin cluster-create -p &lt;PROFILE&gt; [-n &lt;MIN-SIZE&gt;] [-m &lt;MAX-SIZE&gt;]
                             [-c &lt;DESIRED-CAPACITY&gt;] [-o &lt;PARENT_ID&gt;]
                             [-t &lt;TIMEOUT&gt;] [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                             &lt;CLUSTER_NAME&gt;</computeroutput></screen>
        <para>
Create the cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER_NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the cluster to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PROFILE&gt;, --profile &lt;PROFILE&gt;</command></term>
    <listitem>
      <para>
      Profile Id used for this cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n &lt;MIN-SIZE&gt;, --min-size &lt;MIN-SIZE&gt;</command></term>
    <listitem>
      <para>
      Min size of the cluster. Default to 0.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;MAX-SIZE&gt;, --max-size &lt;MAX-SIZE&gt;</command></term>
    <listitem>
      <para>
      Max size of the cluster. Default to -1, means
      unlimited.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;DESIRED-CAPACITY&gt;, --desired-capacity &lt;DESIRED-CAPACITY&gt;</command></term>
    <listitem>
      <para>
      Desired capacity of the cluster. Default to 0.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;PARENT_ID&gt;, --parent &lt;PARENT_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the parent cluster, if exists.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-t &lt;TIMEOUT&gt;, --timeout &lt;TIMEOUT&gt;</command></term>
    <listitem>
      <para>
      Cluster creation timeout in minutes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the cluster. This
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-delete">
        <title>senlin cluster-delete</title>
        <screen><computeroutput>usage: senlin cluster-delete &lt;CLUSTER&gt; [&lt;CLUSTER&gt; ...]</computeroutput></screen>
        <para>
Delete the cluster(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-list">
        <title>senlin cluster-list</title>
        <screen><computeroutput>usage: senlin cluster-list [-D] [-n] [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                           [-k &lt;KEYS&gt;] [-s &lt;DIR&gt;] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-g]
                           [-F]</computeroutput></screen>
        <para>
List the user's clusters.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted clusters if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n, --show-nested</command></term>
    <listitem>
      <para>
        Include nested clusters if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned triggers. This
      can be specified multiple times, or once with
      parameters separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of clusters returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return clusters that appear after the given
      cluster ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g, --global-project</command></term>
    <listitem>
      <para>
        Indicate that the cluster list should include clusters
      from all projects. This option is subject to access
      policy checking. Default is False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-node-add">
        <title>senlin cluster-node-add</title>
        <screen><computeroutput>usage: senlin cluster-node-add -n &lt;NODES&gt; &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Add specified nodes to cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-n &lt;NODES&gt;, --nodes &lt;NODES&gt;</command></term>
    <listitem>
      <para>
      ID of nodes to be added; multiple nodes can be
      separated with ","
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-node-del">
        <title>senlin cluster-node-del</title>
        <screen><computeroutput>usage: senlin cluster-node-del -n &lt;NODES&gt; &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Delete specified nodes from cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-n &lt;NODES&gt;, --nodes &lt;NODES&gt;</command></term>
    <listitem>
      <para>
      ID of nodes to be deleted; multiple nodes can be
      separatedwith ",".
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-node-list">
        <title>senlin cluster-node-list</title>
        <screen><computeroutput>usage: senlin cluster-node-list [-D] [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                                [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-F]
                                &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
List nodes from cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to nodes from.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted nodes if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned nodes. This can
      be specified multiple times, or once with parameters
      separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of nodes returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return nodes that appear after the given node ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-attach">
        <title>senlin cluster-policy-attach</title>
        <screen><computeroutput>usage: senlin cluster-policy-attach -p &lt;POLICY&gt; [-r &lt;PRIORITY&gt;] [-l &lt;LEVEL&gt;]
                                    [-c &lt;SECONDS&gt;] [-e]
                                    &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Attach policy to cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of policy to be attached.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;PRIORITY&gt;, --priority &lt;PRIORITY&gt;</command></term>
    <listitem>
      <para>
      An integer specifying the relative priority among all
      policies attached to a cluster. The lower the value,
      the higher the priority. Default is 50.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LEVEL&gt;, --enforcement-level &lt;LEVEL&gt;</command></term>
    <listitem>
      <para>
      An integer between 0 and 100 representing the
      enforcement level. Default to enforcement level of
      policy.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;SECONDS&gt;, --cooldown &lt;SECONDS&gt;</command></term>
    <listitem>
      <para>
      An integer indicating the cooldown seconds once the
      policy is effected. Default to cooldown of policy.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e, --enabled</command></term>
    <listitem>
      <para>
        Whether the policy should be enabled once attached.
      Default to enabled.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-detach">
        <title>senlin cluster-policy-detach</title>
        <screen><computeroutput>usage: senlin cluster-policy-detach -p &lt;POLICY&gt; &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Detach policy from cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of policy to be detached.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-disable">
        <title>senlin cluster-policy-disable</title>
        <screen><computeroutput>usage: senlin cluster-policy-disable -p &lt;POLICY&gt; &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Disable a policy on a cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of policy to be disabled.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-enable">
        <title>senlin cluster-policy-enable</title>
        <screen><computeroutput>usage: senlin cluster-policy-enable -p &lt;POLICY&gt; &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Enable a policy on cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of policy to be enabled.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-list">
        <title>senlin cluster-policy-list</title>
        <screen><computeroutput>usage: senlin cluster-policy-list [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                                  [-k &lt;KEYS&gt;] [-s &lt;DIR&gt;]
                                  &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
List policies from cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to query on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned results. This
      can be specified multiple times, or once with
      parameters separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-show">
        <title>senlin cluster-policy-show</title>
        <screen><computeroutput>usage: senlin cluster-policy-show -p &lt;POLICY&gt; &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Show a specific policy that is bound to the specified cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        ID or name of the cluster to query on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of the policy to query on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-policy-update">
        <title>senlin cluster-policy-update</title>
        <screen><computeroutput>usage: senlin cluster-policy-update -p &lt;POLICY&gt; [-r &lt;PRIORITY&gt;] [-l &lt;LEVEL&gt;]
                                    [-c &lt;COOLDOWN&gt;] [-e &lt;BOOLEAN&gt;]
                                    &lt;NAME or ID&gt;</computeroutput></screen>
        <para>
Update a policy on cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME or ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;POLICY&gt;, --policy &lt;POLICY&gt;</command></term>
    <listitem>
      <para>
      ID or name of policy to be updated.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;PRIORITY&gt;, --priority &lt;PRIORITY&gt;</command></term>
    <listitem>
      <para>
      An integer specifying the relative priority among all
      policies attached to a cluster. The lower the value,
      the higher the priority. Default is 50.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LEVEL&gt;, --enforcement-level &lt;LEVEL&gt;</command></term>
    <listitem>
      <para>
      New enforcement level.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;COOLDOWN&gt;, --cooldown &lt;COOLDOWN&gt;</command></term>
    <listitem>
      <para>
      Cooldown interval in seconds.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e &lt;BOOLEAN&gt;, --enabled &lt;BOOLEAN&gt;</command></term>
    <listitem>
      <para>
      Whether the policy should be enabled.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-resize">
        <title>senlin cluster-resize</title>
        <screen><computeroutput>usage: senlin cluster-resize [-c &lt;CAPACITY&gt;] [-a &lt;ADJUSTMENT&gt;]
                             [-p &lt;PERCENTAGE&gt;] [-t &lt;MIN_STEP&gt;] [-s] [-n MIN]
                             [-m MAX]
                             &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Resize a cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;CAPACITY&gt;, --capacity &lt;CAPACITY&gt;</command></term>
    <listitem>
      <para>
      The desired number of nodes of the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-a &lt;ADJUSTMENT&gt;, --adjustment &lt;ADJUSTMENT&gt;</command></term>
    <listitem>
      <para>
      A positive integer meaning the number of nodes to add,
      or a negative integer indicating the number of nodes
      to remove.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PERCENTAGE&gt;, --percentage &lt;PERCENTAGE&gt;</command></term>
    <listitem>
      <para>
      A value that is interpreted as the percentage of size
      adjustment. This value can be positive or negative.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-t &lt;MIN_STEP&gt;, --min-step &lt;MIN_STEP&gt;</command></term>
    <listitem>
      <para>
      An integer specifying the number of nodes for
      adjustment when &lt;PERCENTAGE&gt; is specified.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s, --strict A</command></term>
    <listitem>
      <para>
        boolean specifying whether the resize should be
      performed on a best-effort basis when the new capacity
      may go beyond size constraints.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n MIN, --min-size MIN</command></term>
    <listitem>
      <para>
      New lower bound of cluster size.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m MAX, --max-size MAX</command></term>
    <listitem>
      <para>
      New upper bound of cluster size. A value of -1
      indicates no upper limit on cluster size.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-scale-in">
        <title>senlin cluster-scale-in</title>
        <screen><computeroutput>usage: senlin cluster-scale-in [-c &lt;COUNT&gt;] &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Scale in a cluster by the specified number of nodes.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;COUNT&gt;, --count &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
      Number of nodes to be deleted from the specified
      cluster.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-scale-out">
        <title>senlin cluster-scale-out</title>
        <screen><computeroutput>usage: senlin cluster-scale-out [-c &lt;COUNT&gt;] &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Scale out a cluster by the specified number of nodes.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;COUNT&gt;, --count &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
      Number of nodes to be added to the specified cluster.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-show">
        <title>senlin cluster-show</title>
        <screen><computeroutput>usage: senlin cluster-show &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Show details of the cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_cluster-update">
        <title>senlin cluster-update</title>
        <screen><computeroutput>usage: senlin cluster-update [-p &lt;PROFILE&gt;] [-t &lt;TIMEOUT&gt;] [-r &lt;PARENT&gt;]
                             [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;] [-n &lt;NAME&gt;]
                             &lt;CLUSTER&gt;</computeroutput></screen>
        <para>
Update the cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of cluster to be updated.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PROFILE&gt;, --profile &lt;PROFILE&gt;</command></term>
    <listitem>
      <para>
      ID of new profile to use.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-t &lt;TIMEOUT&gt;, --timeout &lt;TIMEOUT&gt;</command></term>
    <listitem>
      <para>
      New timeout (in minutes) value for the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;PARENT&gt;, --parent &lt;PARENT&gt;</command></term>
    <listitem>
      <para>
      ID of parent cluster for the cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the cluster. This
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n &lt;NAME&gt;, --name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      New name for the cluster to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_event-list">
        <title>senlin event-list</title>
        <screen><computeroutput>usage: senlin event-list [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;] [-l &lt;LIMIT&gt;]
                         [-m &lt;ID&gt;] [-k &lt;KEYS&gt;] [-s &lt;DIR&gt;] [-g] [-D] [-F]</computeroutput></screen>
        <para>
List events.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned events. This
      can be specified multiple times, or once with
      parameters separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of events returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return events that appear after the given event
      ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g, --global-project</command></term>
    <listitem>
      <para>
        Whether events from all projects should be listed.
      Default to False. Setting this to True may demand for
      an admin privilege.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Whether deleted events should be listed as well.
      Default to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_event-show">
        <title>senlin event-show</title>
        <screen><computeroutput>usage: senlin event-show &lt;EVENT&gt;</computeroutput></screen>
        <para>
Describe the event.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;EVENT&gt;</command></term>
    <listitem>
      <para>
        ID of event to display details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-create">
        <title>senlin node-create</title>
        <screen><computeroutput>usage: senlin node-create -p &lt;PROFILE&gt; [-c &lt;CLUSTER&gt;] [-r &lt;ROLE&gt;]
                          [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                          &lt;NODE_NAME&gt;</computeroutput></screen>
        <para>
Create the node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE_NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the node to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-p &lt;PROFILE&gt;, --profile &lt;PROFILE&gt;</command></term>
    <listitem>
      <para>
      Profile Id used for this node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;CLUSTER&gt;, --cluster &lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
      Cluster Id for this node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;ROLE&gt;, --role &lt;ROLE&gt;</command></term>
    <listitem>
      <para>
      Role for this node in the specific cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the cluster. This
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-delete">
        <title>senlin node-delete</title>
        <screen><computeroutput>usage: senlin node-delete &lt;NODE&gt; [&lt;NODE&gt; ...]</computeroutput></screen>
        <para>
Delete the node(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of node(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-join">
        <title>senlin node-join</title>
        <screen><computeroutput>usage: senlin node-join -c CLUSTER &lt;NODE&gt;</computeroutput></screen>
        <para>
Make node join the specified cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of node to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c CLUSTER, --cluster CLUSTER</command></term>
    <listitem>
      <para>
      ID or name of cluster for node to join.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-leave">
        <title>senlin node-leave</title>
        <screen><computeroutput>usage: senlin node-leave &lt;NODE&gt;</computeroutput></screen>
        <para>
Make node leave its current cluster.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of node to operate on.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-list">
        <title>senlin node-list</title>
        <screen><computeroutput>usage: senlin node-list [-c &lt;CLUSTER&gt;] [-D] [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                        [-k &lt;KEYS&gt;] [-s &lt;DIR&gt;] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-g]
                        [-F]</computeroutput></screen>
        <para>
Show list of nodes.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;CLUSTER&gt;, --cluster &lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
      ID or name of cluster from which nodes are to be
      listed.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted nodes if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned nodes. This can
      be specified multiple times, or once with parameters
      separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned nodes.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of nodes returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return nodes that appear after the given node ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g, --global-project</command></term>
    <listitem>
      <para>
        Indicate that this node list should include nodes from
      all projects. This option is subject to access policy
      checking. Default is False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-show">
        <title>senlin node-show</title>
        <screen><computeroutput>usage: senlin node-show [-D] &lt;NODE&gt;</computeroutput></screen>
        <para>
Show detailed info about the specified node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the node to show the details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --details</command></term>
    <listitem>
      <para>
        Include physical object details.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_node-update">
        <title>senlin node-update</title>
        <screen><computeroutput>usage: senlin node-update [-n &lt;NAME&gt;] [-p &lt;PROFILE ID&gt;] [-r &lt;ROLE&gt;]
                          [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                          &lt;NODE&gt;</computeroutput></screen>
        <para>
Update the node.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NODE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of node to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-n &lt;NAME&gt;, --name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      New name for the node.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PROFILE ID&gt;, --profile &lt;PROFILE ID&gt;</command></term>
    <listitem>
      <para>
      ID of new profile to use.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;ROLE&gt;, --role &lt;ROLE&gt;</command></term>
    <listitem>
      <para>
      Role for this node in the specific cluster.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the node. Metadata
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-create">
        <title>senlin policy-create</title>
        <screen><computeroutput>usage: senlin policy-create -s &lt;SPEC_FILE&gt; [-c &lt;SECONDS&gt;] [-l &lt;LEVEL&gt;] &lt;NAME&gt;</computeroutput></screen>
        <para>
Create a policy.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the policy to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-s &lt;SPEC_FILE&gt;, --spec-file &lt;SPEC_FILE&gt;</command></term>
    <listitem>
      <para>
      The spec file used to create the policy.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-c &lt;SECONDS&gt;, --cooldown &lt;SECONDS&gt;</command></term>
    <listitem>
      <para>
      An integer indicating the cooldown seconds once the
      policy is effected. Default to 0.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LEVEL&gt;, --enforcement-level &lt;LEVEL&gt;</command></term>
    <listitem>
      <para>
      An integer between 0 and 100 representing the
      enforcement level. Default to 0.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-delete">
        <title>senlin policy-delete</title>
        <screen><computeroutput>usage: senlin policy-delete &lt;POLICY&gt; [&lt;POLICY&gt; ...]</computeroutput></screen>
        <para>
Delete policy(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;POLICY&gt;</command></term>
    <listitem>
      <para>
        Name or ID of policy(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-list">
        <title>senlin policy-list</title>
        <screen><computeroutput>usage: senlin policy-list [-D] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-F]</computeroutput></screen>
        <para>
List policies that meet the criteria.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted policies if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of policies returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return policies that appear after the given ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-show">
        <title>senlin policy-show</title>
        <screen><computeroutput>usage: senlin policy-show &lt;POLICY&gt;</computeroutput></screen>
        <para>
Show the policy details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;POLICY&gt;</command></term>
    <listitem>
      <para>
        Name of the policy to be updated.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-type-list">
        <title>senlin policy-type-list</title>
        <screen><computeroutput>usage: senlin policy-type-list</computeroutput></screen>
        <para>
List the available policy types.
        </para>
    </section>
    <section xml:id="senlinclient_subcommand_policy-type-schema">
        <title>senlin policy-type-schema</title>
        <screen><computeroutput>usage: senlin policy-type-schema [-F &lt;FORMAT&gt;] &lt;POLICY_TYPE&gt;</computeroutput></screen>
        <para>
Get the spec of a policy type.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;POLICY_TYPE&gt;</command></term>
    <listitem>
      <para>
        Policy type to generate a template for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-F &lt;FORMAT&gt;, --format &lt;FORMAT&gt;</command></term>
    <listitem>
      <para>
      The template output format, one of: yaml, json.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-type-show">
        <title>senlin policy-type-show</title>
        <screen><computeroutput>usage: senlin policy-type-show &lt;POLICY_TYPE&gt;</computeroutput></screen>
        <para>
Show the policy type.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;POLICY_TYPE&gt;</command></term>
    <listitem>
      <para>
        Policy type to get the details for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_policy-update">
        <title>senlin policy-update</title>
        <screen><computeroutput>usage: senlin policy-update [-c &lt;SECONDS&gt;] [-l &lt;LEVEL&gt;] [-n &lt;NAME&gt;] &lt;POLICY&gt;</computeroutput></screen>
        <para>
Update a policy.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;POLICY&gt;</command></term>
    <listitem>
      <para>
        Name of the policy to be updated.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;SECONDS&gt;, --cooldown &lt;SECONDS&gt;</command></term>
    <listitem>
      <para>
      An integer indicating the cooldown seconds once the
      policy is effected. Default to 0.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LEVEL&gt;, --enforcement-level &lt;LEVEL&gt;</command></term>
    <listitem>
      <para>
      An integer between 0 and 100 representing the
      enforcement level. Default to 0.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n &lt;NAME&gt;, --name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      New name of the policy to be updated.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-create">
        <title>senlin profile-create</title>
        <screen><computeroutput>usage: senlin profile-create -s &lt;SPEC FILE&gt; [-p &lt;PERMISSION&gt;]
                             [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                             &lt;PROFILE_NAME&gt;</computeroutput></screen>
        <para>
Create a profile.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PROFILE_NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the profile to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-s &lt;SPEC FILE&gt;, --spec-file &lt;SPEC FILE&gt;</command></term>
    <listitem>
      <para>
      The spec file used to create the profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PERMISSION&gt;, --permission &lt;PERMISSION&gt;</command></term>
    <listitem>
      <para>
      A string format permission for this profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the profile. This
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-delete">
        <title>senlin profile-delete</title>
        <screen><computeroutput>usage: senlin profile-delete &lt;PROFILE&gt; [&lt;PROFILE&gt; ...]</computeroutput></screen>
        <para>
Delete profile(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PROFILE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of profile(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-list">
        <title>senlin profile-list</title>
        <screen><computeroutput>usage: senlin profile-list [-D] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-F]</computeroutput></screen>
        <para>
List profiles that meet the criteria.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted profiles if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of profiles returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return profiles that appear after the given ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-show">
        <title>senlin profile-show</title>
        <screen><computeroutput>usage: senlin profile-show &lt;PROFILE&gt;</computeroutput></screen>
        <para>
Show the profile details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PROFILE&gt;</command></term>
    <listitem>
      <para>
        Name or ID of profile to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-type-list">
        <title>senlin profile-type-list</title>
        <screen><computeroutput>usage: senlin profile-type-list</computeroutput></screen>
        <para>
List the available profile types. :param sc: Instance of senlinclient. :param
args: Additional command line arguments, if any.
        </para>
    </section>
    <section xml:id="senlinclient_subcommand_profile-type-schema">
        <title>senlin profile-type-schema</title>
        <screen><computeroutput>usage: senlin profile-type-schema [-F &lt;FORMAT&gt;] &lt;PROFILE_TYPE&gt;</computeroutput></screen>
        <para>
Get the spec of a profile type.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PROFILE_TYPE&gt;</command></term>
    <listitem>
      <para>
        Profile type to generate a template for.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-F &lt;FORMAT&gt;, --format &lt;FORMAT&gt;</command></term>
    <listitem>
      <para>
      The template output format, one of: yaml, json.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_profile-update">
        <title>senlin profile-update</title>
        <screen><computeroutput>usage: senlin profile-update [-n &lt;NAME&gt;] [-p &lt;PERMISSION&gt;]
                             [-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                             &lt;PROFILE_ID&gt;</computeroutput></screen>
        <para>
Update a profile.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;PROFILE_ID&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the profile to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-n &lt;NAME&gt;, --name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
      The new name for the profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PERMISSION&gt;, --permission &lt;PERMISSION&gt;</command></term>
    <listitem>
      <para>
      A string format permission for this profile.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-M &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --metadata &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Metadata values to be attached to the profile. This
      can be specified multiple times, or once with key-
      value pairs separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_trigger-create">
        <title>senlin trigger-create</title>
        <screen><computeroutput>usage: senlin trigger-create -s &lt;SPEC FILE&gt; [--desc &lt;DESCRIPTION&gt;] [-e]
                             [-v SEVERITY] [--state STATE]
                             &lt;TRIGGER_NAME&gt;</computeroutput></screen>
        <para>
Create a trigger.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;TRIGGER_NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the trigger to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-s &lt;SPEC FILE&gt;, --spec-file &lt;SPEC FILE&gt;</command></term>
    <listitem>
      <para>
      The spec file used to create the trigger.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--desc &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        A string for describing of the trigger to be created.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-e, --enabled</command></term>
    <listitem>
      <para>
        Whether the trigger should be enabled when created.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v SEVERITY, --severity SEVERITY</command></term>
    <listitem>
      <para>
      Severity level of the target trigger to be created.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state STATE</command></term>
    <listitem>
      <para>
        Initial state of the target trigger.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_trigger-delete">
        <title>senlin trigger-delete</title>
        <screen><computeroutput>usage: senlin trigger-delete &lt;TRIGGER&gt; [&lt;TRIGGER&gt; ...]</computeroutput></screen>
        <para>
Delete trigger(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;TRIGGER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of trigger(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_trigger-list">
        <title>senlin trigger-list</title>
        <screen><computeroutput>usage: senlin trigger-list [-D] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-k &lt;KEYS&gt;] [-s &lt;DIR&gt;]
                           [-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;] [-g] [-F]</computeroutput></screen>
        <para>
List triggers that meet the criteria.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include soft-deleted triggers if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of triggers returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return triggers that appear after the given ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-k &lt;KEYS&gt;, --sort-keys &lt;KEYS&gt;</command></term>
    <listitem>
      <para>
      Name of keys used for sorting the returned triggers.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-s &lt;DIR&gt;, --sort-dir &lt;DIR&gt;</command></term>
    <listitem>
      <para>
      Direction for sorting, where DIR can be "asc" or
      "desc".
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-f &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --filters &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      Filter parameters to apply on returned clusters. This
      can be specified multiple times, or once with
      parameters separated by a semicolon.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g, --global-project</command></term>
    <listitem>
      <para>
        Indicate that the list should include triggers from
      all projects. This option is subject to access policy
      checking. Default is False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_trigger-show">
        <title>senlin trigger-show</title>
        <screen><computeroutput>usage: senlin trigger-show &lt;TRIGGER&gt;</computeroutput></screen>
        <para>
Show the trigger details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;TRIGGER&gt;</command></term>
    <listitem>
      <para>
        Name or ID of trigger to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_webhook-create">
        <title>senlin webhook-create</title>
        <screen><computeroutput>usage: senlin webhook-create [-c &lt;CLUSTER&gt;] [-n &lt;NODE&gt;] -a &lt;ACTION&gt;
                             [-C &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                             [-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;]
                             &lt;NAME&gt;</computeroutput></screen>
        <para>
Create a webhook.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the webhook to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-c &lt;CLUSTER&gt;, --cluster &lt;CLUSTER&gt;</command></term>
    <listitem>
      <para>
      Targeted cluster for this webhook.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-n &lt;NODE&gt;, --node &lt;NODE&gt;</command></term>
    <listitem>
      <para>
      Targeted node for this webhook.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-a &lt;ACTION&gt;, --action &lt;ACTION&gt;</command></term>
    <listitem>
      <para>
      Name of action to be triggered for this webhook.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-C &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --credential &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      The credential to be used when the webhook is
      triggered.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-P &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;, --params &lt;KEY1=VALUE1;KEY2=VALUE2...&gt;</command></term>
    <listitem>
      <para>
      A dictionary of parameters that will be passed to
      target action when the webhook is triggered.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_webhook-delete">
        <title>senlin webhook-delete</title>
        <screen><computeroutput>usage: senlin webhook-delete &lt;WEBHOOK&gt; [&lt;WEBHOOK&gt; ...]</computeroutput></screen>
        <para>
Delete webhook(s).
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;WEBHOOK&gt;</command></term>
    <listitem>
      <para>
        Name or ID of webhook(s) to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_webhook-list">
        <title>senlin webhook-list</title>
        <screen><computeroutput>usage: senlin webhook-list [-D] [-l &lt;LIMIT&gt;] [-m &lt;ID&gt;] [-F]</computeroutput></screen>
        <para>
List webhooks that meet the criteria.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-D, --show-deleted</command></term>
    <listitem>
      <para>
        Include deleted webhooks if any.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
      Limit the number of webhooks returned.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;ID&gt;, --marker &lt;ID&gt;</command></term>
    <listitem>
      <para>
      Only return webhooks that appear after the given ID.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-F, --full-id</command></term>
    <listitem>
      <para>
        Print full IDs in list.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="senlinclient_subcommand_webhook-show">
        <title>senlin webhook-show</title>
        <screen><computeroutput>usage: senlin webhook-show &lt;WEBHOOK&gt;</computeroutput></screen>
        <para>
Show the webhook details.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;WEBHOOK&gt;</command></term>
    <listitem>
      <para>
        Name or ID of the webhook to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
