<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="ceilometerclient_commands">

    <!-- This file is automatically generated, do not edit -->

    <?dbhtml stop-chunking?>

    <title>Telemetry service command-line client</title>

    <para>The <command>ceilometer</command> client is the command-line
        interface (CLI) for the Telemetry service API and its extensions.

       This chapter documents <command>ceilometer</command> version
        <literal>2.0.1</literal>.
    </para>

    <para>For help on a specific <command>ceilometer</command>
       command, enter:
    </para>
    <screen><prompt>$</prompt> <userinput><command>ceilometer</command> <option>help</option> <replaceable>COMMAND</replaceable></userinput></screen>

    <section xml:id="ceilometerclient_command_usage">
       <title>ceilometer usage</title>
        <screen><computeroutput>usage: ceilometer [--version] [-d] [-v] [--timeout TIMEOUT]
                  [--ceilometer-url &lt;CEILOMETER_URL&gt;]
                  [--ceilometer-api-version CEILOMETER_API_VERSION]
                  [--os-tenant-id &lt;tenant-id&gt;]
                  [--os-region-name &lt;region-name&gt;]
                  [--os-auth-token &lt;auth-token&gt;]
                  [--os-service-type &lt;service-type&gt;]
                  [--os-endpoint-type &lt;endpoint-type&gt;] [--os-cacert &lt;cacert&gt;]
                  [--os-insecure &lt;insecure&gt;] [--os-cert-file &lt;cert-file&gt;]
                  [--os-key-file &lt;key-file&gt;] [--os-cert &lt;cert&gt;]
                  [--os-key &lt;key&gt;] [--os-project-name &lt;project-name&gt;]
                  [--os-project-id &lt;project-id&gt;]
                  [--os-project-domain-id &lt;project-domain-id&gt;]
                  [--os-project-domain-name &lt;project-domain-name&gt;]
                  [--os-user-id &lt;user-id&gt;]
                  [--os-user-domain-id &lt;user-domain-id&gt;]
                  [--os-user-domain-name &lt;user-domain-name&gt;]
                  [--os-endpoint &lt;endpoint&gt;] [--os-auth-system &lt;auth-system&gt;]
                  [--os-username &lt;username&gt;] [--os-password &lt;password&gt;]
                  [--os-tenant-name &lt;tenant-name&gt;] [--os-token &lt;token&gt;]
                  [--os-auth-url &lt;auth-url&gt;]
                  &lt;subcommand&gt; ...</computeroutput></screen>
  <variablelist wordsize="10">
    <title>Subcommands</title>
  <varlistentry>
    <term><command>alarm-combination-create</command></term>
    <listitem>
      <para>
        Create a new alarm based on state of other
      alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-combination-update</command></term>
    <listitem>
      <para>
        Update an existing alarm based on state of
      other alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-create</command></term>
    <listitem>
      <para>
        Create a new alarm (Deprecated). Use alarm-
      threshold-create instead.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-delete</command></term>
    <listitem>
      <para>
        Delete an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-event-create</command></term>
    <listitem>
      <para>
        Create a new alarm based on events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-event-update</command></term>
    <listitem>
      <para>
        Update an existing alarm based on events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-aggregation-by-metrics-threshold-create</command></term>
    <listitem>
      <para>
      Create a new alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-aggregation-by-metrics-threshold-update</command></term>
    <listitem>
      <para>
      Update an existing alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-aggregation-by-resources-threshold-create</command></term>
    <listitem>
      <para>
      Create a new alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-aggregation-by-resources-threshold-update</command></term>
    <listitem>
      <para>
      Update an existing alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-resources-threshold-create</command></term>
    <listitem>
      <para>
      Create a new alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-gnocchi-resources-threshold-update</command></term>
    <listitem>
      <para>
      Update an existing alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-history</command></term>
    <listitem>
      <para>
        Display the change history of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-list</command></term>
    <listitem>
      <para>
        List the user's alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-show</command></term>
    <listitem>
      <para>
        Show an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-state-get</command></term>
    <listitem>
      <para>
        Get the state of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-state-set</command></term>
    <listitem>
      <para>
        Set the state of an alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-threshold-create</command></term>
    <listitem>
      <para>
        Create a new alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-threshold-update</command></term>
    <listitem>
      <para>
        Update an existing alarm based on computed
      statistics.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>alarm-update</command></term>
    <listitem>
      <para>
        Update an existing alarm (Deprecated).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>capabilities</command></term>
    <listitem>
      <para>
        Print Ceilometer capabilities.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-list</command></term>
    <listitem>
      <para>
        List events.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-show</command></term>
    <listitem>
      <para>
        Show a particular event.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>event-type-list</command></term>
    <listitem>
      <para>
        List event types.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>meter-list</command></term>
    <listitem>
      <para>
        List the user's meters.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>query-alarm-history</command></term>
    <listitem>
      <para>
        Query Alarm History.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>query-alarms</command></term>
    <listitem>
      <para>
        Query Alarms.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>query-samples</command></term>
    <listitem>
      <para>
        Query samples.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-list</command></term>
    <listitem>
      <para>
        List the resources.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>resource-show</command></term>
    <listitem>
      <para>
        Show the resource.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-create</command></term>
    <listitem>
      <para>
        Create a sample.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-create-list</command></term>
    <listitem>
      <para>
        Create a sample list.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-list</command></term>
    <listitem>
      <para>
        List the samples (return OldSample objects if
      -m/--meter is set).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>sample-show</command></term>
    <listitem>
      <para>
        Show a sample.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>statistics</command></term>
    <listitem>
      <para>
        List the statistics for a meter.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trait-description-list</command></term>
    <listitem>
      <para>
        List trait info for an event type.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>trait-list</command></term>
    <listitem>
      <para>
        List all traits with name &lt;trait_name&gt; for
      Event Type &lt;event_type&gt;.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>bash-completion</command></term>
    <listitem>
      <para>
        Prints all of the commands and options to
      stdout.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>help</command></term>
    <listitem>
      <para>
        Display help about this program or one of its
      subcommands.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_command_optional">
        <title>ceilometer optional arguments</title>
  <variablelist wordsize="10">
  <varlistentry>
    <term><command>--version</command></term>
    <listitem>
      <para>
        show program's version number and exit
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-d, --debug</command></term>
    <listitem>
      <para>
        Defaults to <code>env[CEILOMETERCLIENT_DEBUG]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-v, --verbose</command></term>
    <listitem>
      <para>
        Print more verbose output.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timeout TIMEOUT</command></term>
    <listitem>
      <para>
        Number of seconds to wait for a response.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ceilometer-url &lt;CEILOMETER_URL&gt;</command></term>
    <listitem>
      <para>
      <emphasis>DEPRECATED</emphasis>, use --os-endpoint instead.
      Defaults to <code>env[CEILOMETER_URL]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ceilometer-api-version CEILOMETER_API_VERSION</command></term>
    <listitem>
      <para>
      Defaults to <code>env[CEILOMETER_API_VERSION]</code> or 2.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-id &lt;tenant-id&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_TENANT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-region-name &lt;region-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_REGION_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-token &lt;auth-token&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_AUTH_TOKEN]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-service-type &lt;service-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_SERVICE_TYPE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint-type &lt;endpoint-type&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_ENDPOINT_TYPE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cacert &lt;cacert&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_CACERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-insecure &lt;insecure&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_INSECURE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cert-file &lt;cert-file&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_CERT_FILE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-key-file &lt;key-file&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_KEY_FILE]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-cert &lt;cert&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_CERT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-key &lt;key&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_KEY]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-name &lt;project-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PROJECT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-id &lt;project-id&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_PROJECT_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-id &lt;project-domain-id&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PROJECT_DOMAIN_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-project-domain-name &lt;project-domain-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_PROJECT_DOMAIN_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-id &lt;user-id&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_USER_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-id &lt;user-domain-id&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_USER_DOMAIN_ID]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-user-domain-name &lt;user-domain-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_USER_DOMAIN_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-endpoint &lt;endpoint&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_ENDPOINT]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-system &lt;auth-system&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_AUTH_SYSTEM]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-username &lt;username&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_USERNAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-password &lt;password&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_PASSWORD]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-tenant-name &lt;tenant-name&gt;</command></term>
    <listitem>
      <para>
      Defaults to <code>env[OS_TENANT_NAME]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-token &lt;token&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_TOKEN]</code>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--os-auth-url &lt;auth-url&gt;</command></term>
    <listitem>
      <para>
        Defaults to <code>env[OS_AUTH_URL]</code>.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-combination-create">
        <title>ceilometer alarm-combination-create</title>
        <screen><computeroutput>usage: ceilometer alarm-combination-create --name &lt;NAME&gt;
                                           [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                           [--user-id &lt;ALARM_USER_ID&gt;]
                                           [--description &lt;DESCRIPTION&gt;]
                                           [--state &lt;STATE&gt;]
                                           [--severity &lt;SEVERITY&gt;]
                                           [--enabled {True|False}]
                                           [--alarm-action &lt;Webhook URL&gt;]
                                           [--ok-action &lt;Webhook URL&gt;]
                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                           [--time-constraint &lt;Time Constraint&gt;]
                                           [--repeat-actions {True|False}]
                                           --alarm_ids &lt;ALARM IDS&gt;
                                           [--operator &lt;OPERATOR&gt;]</computeroutput></screen>
        <para>
Create a new alarm based on state of other alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm_ids &lt;ALARM IDS&gt;</command></term>
    <listitem>
      <para>
        List of alarm IDs. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
        Operator to compare with, one of: ['and',
      'or'].
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-combination-update">
        <title>ceilometer alarm-combination-update</title>
        <screen><computeroutput>usage: ceilometer alarm-combination-update [--name &lt;NAME&gt;]
                                           [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                           [--user-id &lt;ALARM_USER_ID&gt;]
                                           [--description &lt;DESCRIPTION&gt;]
                                           [--state &lt;STATE&gt;]
                                           [--severity &lt;SEVERITY&gt;]
                                           [--enabled {True|False}]
                                           [--alarm-action &lt;Webhook URL&gt;]
                                           [--ok-action &lt;Webhook URL&gt;]
                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                           [--time-constraint &lt;Time Constraint&gt;]
                                           [--repeat-actions {True|False}]
                                           [--remove-time-constraint &lt;Constraint names&gt;]
                                           [--alarm_ids &lt;ALARM IDS&gt;]
                                           [--operator &lt;OPERATOR&gt;]
                                           [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on state of other alarms.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--remove-time-constraint &lt;Constraint names&gt;</command></term>
    <listitem>
      <para>
      Name or list of names of the time constraints
      to remove.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm_ids &lt;ALARM IDS&gt;</command></term>
    <listitem>
      <para>
        List of alarm IDs.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
        Operator to compare with, one of: ['and',
      'or'].
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-delete">
        <title>ceilometer alarm-delete</title>
        <screen><computeroutput>usage: ceilometer alarm-delete [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Delete an alarm.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to delete.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-event-create">
        <title>ceilometer alarm-event-create</title>
        <screen><computeroutput>usage: ceilometer alarm-event-create --name &lt;NAME&gt;
                                     [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                     [--user-id &lt;ALARM_USER_ID&gt;]
                                     [--description &lt;DESCRIPTION&gt;]
                                     [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;]
                                     [--enabled {True|False}]
                                     [--alarm-action &lt;Webhook URL&gt;]
                                     [--ok-action &lt;Webhook URL&gt;]
                                     [--insufficient-data-action &lt;Webhook URL&gt;]
                                     [--time-constraint &lt;Time Constraint&gt;]
                                     [--repeat-actions {True|False}]
                                     [--event-type &lt;EVENT_TYPE&gt;] [-q &lt;QUERY&gt;]</computeroutput></screen>
        <para>
Create a new alarm based on events.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--event-type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
        Event type for event alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list for filtering
      events. data_type is optional, but if supplied
      must be string, integer, float or datetime.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-event-update">
        <title>ceilometer alarm-event-update</title>
        <screen><computeroutput>usage: ceilometer alarm-event-update [--name &lt;NAME&gt;]
                                     [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                     [--user-id &lt;ALARM_USER_ID&gt;]
                                     [--description &lt;DESCRIPTION&gt;]
                                     [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;]
                                     [--enabled {True|False}]
                                     [--alarm-action &lt;Webhook URL&gt;]
                                     [--ok-action &lt;Webhook URL&gt;]
                                     [--insufficient-data-action &lt;Webhook URL&gt;]
                                     [--time-constraint &lt;Time Constraint&gt;]
                                     [--repeat-actions {True|False}]
                                     [--event-type &lt;EVENT_TYPE&gt;] [-q &lt;QUERY&gt;]
                                     [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on events.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--event-type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
        Event type for event alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list for filtering
      events. data_type is optional, but if supplied
      must be string, integer, float or datetime.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-aggregation-by-metrics-threshold-create">
        <title>ceilometer alarm-gnocchi-aggregation-by-metrics-threshold-create</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-aggregation-by-metrics-threshold-create
       --name &lt;NAME&gt; [--project-id &lt;ALARM_PROJECT_ID&gt;]
       [--user-id &lt;ALARM_USER_ID&gt;] [--description &lt;DESCRIPTION&gt;]
       [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;] [--enabled {True|False}]
       [--alarm-action &lt;Webhook URL&gt;] [--ok-action &lt;Webhook URL&gt;]
       [--insufficient-data-action &lt;Webhook URL&gt;]
       [--time-constraint &lt;Time Constraint&gt;] [--repeat-actions {True|False}]
       [--granularity &lt;GRANULARITY&gt;] [--evaluation-periods &lt;COUNT&gt;]
       [--aggregation-method &lt;AGGREATION&gt;] [--comparison-operator &lt;OPERATOR&gt;]
       --threshold &lt;THRESHOLD&gt; -m &lt;METRICS&gt;</computeroutput></screen>
        <para>
Create a new alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRICS&gt;, --metrics &lt;METRICS&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-aggregation-by-metrics-threshold-update">
        <title>ceilometer alarm-gnocchi-aggregation-by-metrics-threshold-update</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-aggregation-by-metrics-threshold-update
       [--name &lt;NAME&gt;] [--project-id &lt;ALARM_PROJECT_ID&gt;]
       [--user-id &lt;ALARM_USER_ID&gt;] [--description &lt;DESCRIPTION&gt;]
       [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;] [--enabled {True|False}]
       [--alarm-action &lt;Webhook URL&gt;] [--ok-action &lt;Webhook URL&gt;]
       [--insufficient-data-action &lt;Webhook URL&gt;]
       [--time-constraint &lt;Time Constraint&gt;] [--repeat-actions {True|False}]
       [--granularity &lt;GRANULARITY&gt;] [--evaluation-periods &lt;COUNT&gt;]
       [--aggregation-method &lt;AGGREATION&gt;] [--comparison-operator &lt;OPERATOR&gt;]
       [--threshold &lt;THRESHOLD&gt;] [-m &lt;METRICS&gt;]
       [--remove-time-constraint &lt;Constraint names&gt;]
       [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRICS&gt;, --metrics &lt;METRICS&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--remove-time-constraint &lt;Constraint names&gt;</command></term>
    <listitem>
      <para>
      Name or list of names of the time constraints
      to remove.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-aggregation-by-resources-threshold-create">
        <title>ceilometer alarm-gnocchi-aggregation-by-resources-threshold-create</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-aggregation-by-resources-threshold-create
       --name &lt;NAME&gt; [--project-id &lt;ALARM_PROJECT_ID&gt;]
       [--user-id &lt;ALARM_USER_ID&gt;] [--description &lt;DESCRIPTION&gt;]
       [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;] [--enabled {True|False}]
       [--alarm-action &lt;Webhook URL&gt;] [--ok-action &lt;Webhook URL&gt;]
       [--insufficient-data-action &lt;Webhook URL&gt;]
       [--time-constraint &lt;Time Constraint&gt;] [--repeat-actions {True|False}]
       [--granularity &lt;GRANULARITY&gt;] [--evaluation-periods &lt;COUNT&gt;]
       [--aggregation-method &lt;AGGREATION&gt;] [--comparison-operator &lt;OPERATOR&gt;]
       --threshold &lt;THRESHOLD&gt; -m &lt;METRIC&gt; --resource-type &lt;RESOURCE_TYPE&gt;
       --query &lt;QUERY&gt;</computeroutput></screen>
        <para>
Create a new alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --metric &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-type &lt;RESOURCE_TYPE&gt;</command></term>
    <listitem>
      <para>
      Resource_type to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        Gnocchi resources search query filter
      Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-aggregation-by-resources-threshold-update">
        <title>ceilometer alarm-gnocchi-aggregation-by-resources-threshold-update</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-aggregation-by-resources-threshold-update
       [--name &lt;NAME&gt;] [--project-id &lt;ALARM_PROJECT_ID&gt;]
       [--user-id &lt;ALARM_USER_ID&gt;] [--description &lt;DESCRIPTION&gt;]
       [--state &lt;STATE&gt;] [--severity &lt;SEVERITY&gt;] [--enabled {True|False}]
       [--alarm-action &lt;Webhook URL&gt;] [--ok-action &lt;Webhook URL&gt;]
       [--insufficient-data-action &lt;Webhook URL&gt;]
       [--time-constraint &lt;Time Constraint&gt;] [--repeat-actions {True|False}]
       [--granularity &lt;GRANULARITY&gt;] [--evaluation-periods &lt;COUNT&gt;]
       [--aggregation-method &lt;AGGREATION&gt;] [--comparison-operator &lt;OPERATOR&gt;]
       [--threshold &lt;THRESHOLD&gt;] [-m &lt;METRIC&gt;]
       [--resource-type &lt;RESOURCE_TYPE&gt;] [--query &lt;QUERY&gt;]
       [--remove-time-constraint &lt;Constraint names&gt;]
       [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --metric &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-type &lt;RESOURCE_TYPE&gt;</command></term>
    <listitem>
      <para>
      Resource_type to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        Gnocchi resources search query filter
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--remove-time-constraint &lt;Constraint names&gt;</command></term>
    <listitem>
      <para>
      Name or list of names of the time constraints
      to remove.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-resources-threshold-create">
        <title>ceilometer alarm-gnocchi-resources-threshold-create</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-resources-threshold-create --name &lt;NAME&gt;
                                                           [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                                           [--user-id &lt;ALARM_USER_ID&gt;]
                                                           [--description &lt;DESCRIPTION&gt;]
                                                           [--state &lt;STATE&gt;]
                                                           [--severity &lt;SEVERITY&gt;]
                                                           [--enabled {True|False}]
                                                           [--alarm-action &lt;Webhook URL&gt;]
                                                           [--ok-action &lt;Webhook URL&gt;]
                                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                                           [--time-constraint &lt;Time Constraint&gt;]
                                                           [--repeat-actions {True|False}]
                                                           [--granularity &lt;GRANULARITY&gt;]
                                                           [--evaluation-periods &lt;COUNT&gt;]
                                                           [--aggregation-method &lt;AGGREATION&gt;]
                                                           [--comparison-operator &lt;OPERATOR&gt;]
                                                           --threshold
                                                           &lt;THRESHOLD&gt; -m
                                                           &lt;METRIC&gt;
                                                           --resource-type
                                                           &lt;RESOURCE_TYPE&gt;
                                                           --resource-id
                                                           &lt;RESOURCE_ID&gt;</computeroutput></screen>
        <para>
Create a new alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --metric &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-type &lt;RESOURCE_TYPE&gt;</command></term>
    <listitem>
      <para>
      Resource_type to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-id &lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
        Resource id to evaluate against Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-gnocchi-resources-threshold-update">
        <title>ceilometer alarm-gnocchi-resources-threshold-update</title>
        <screen><computeroutput>usage: ceilometer alarm-gnocchi-resources-threshold-update [--name &lt;NAME&gt;]
                                                           [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                                           [--user-id &lt;ALARM_USER_ID&gt;]
                                                           [--description &lt;DESCRIPTION&gt;]
                                                           [--state &lt;STATE&gt;]
                                                           [--severity &lt;SEVERITY&gt;]
                                                           [--enabled {True|False}]
                                                           [--alarm-action &lt;Webhook URL&gt;]
                                                           [--ok-action &lt;Webhook URL&gt;]
                                                           [--insufficient-data-action &lt;Webhook URL&gt;]
                                                           [--time-constraint &lt;Time Constraint&gt;]
                                                           [--repeat-actions {True|False}]
                                                           [--granularity &lt;GRANULARITY&gt;]
                                                           [--evaluation-periods &lt;COUNT&gt;]
                                                           [--aggregation-method &lt;AGGREATION&gt;]
                                                           [--comparison-operator &lt;OPERATOR&gt;]
                                                           [--threshold &lt;THRESHOLD&gt;]
                                                           [-m &lt;METRIC&gt;]
                                                           [--resource-type &lt;RESOURCE_TYPE&gt;]
                                                           [--resource-id &lt;RESOURCE_ID&gt;]
                                                           [--remove-time-constraint &lt;Constraint names&gt;]
                                                           [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--granularity &lt;GRANULARITY&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--aggregation-method &lt;AGGREATION&gt;</command></term>
    <listitem>
      <para>
      Aggregation method to use, one of: ['last',
      'min', 'median', 'sum', 'std', 'first',
      'mean', 'count', 'moving-average', 'max',
      '1pct', '2pct', '3pct', '4pct', '5pct',
      '6pct', '7pct', '8pct', '9pct', '10pct',
      '11pct', '12pct', '13pct', '14pct', '15pct',
      '16pct', '17pct', '18pct', '19pct', '20pct',
      '21pct', '22pct', '23pct', '24pct', '25pct',
      '26pct', '27pct', '28pct', '29pct', '30pct',
      '31pct', '32pct', '33pct', '34pct', '35pct',
      '36pct', '37pct', '38pct', '39pct', '40pct',
      '41pct', '42pct', '43pct', '44pct', '45pct',
      '46pct', '47pct', '48pct', '49pct', '50pct',
      '51pct', '52pct', '53pct', '54pct', '55pct',
      '56pct', '57pct', '58pct', '59pct', '60pct',
      '61pct', '62pct', '63pct', '64pct', '65pct',
      '66pct', '67pct', '68pct', '69pct', '70pct',
      '71pct', '72pct', '73pct', '74pct', '75pct',
      '76pct', '77pct', '78pct', '79pct', '80pct',
      '81pct', '82pct', '83pct', '84pct', '85pct',
      '86pct', '87pct', '88pct', '89pct', '90pct',
      '91pct', '92pct', '93pct', '94pct', '95pct',
      '96pct', '97pct', '98pct', '99pct'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --metric &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-type &lt;RESOURCE_TYPE&gt;</command></term>
    <listitem>
      <para>
      Resource_type to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-id &lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
        Resource id to evaluate against
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--remove-time-constraint &lt;Constraint names&gt;</command></term>
    <listitem>
      <para>
      Name or list of names of the time constraints
      to remove.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-history">
        <title>ceilometer alarm-history</title>
        <screen><computeroutput>usage: ceilometer alarm-history [-q &lt;QUERY&gt;] [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Display the change history of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm for which history is shown.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-list">
        <title>ceilometer alarm-list</title>
        <screen><computeroutput>usage: ceilometer alarm-list [-q &lt;QUERY&gt;]</computeroutput></screen>
        <para>
List the user's alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-show">
        <title>ceilometer alarm-show</title>
        <screen><computeroutput>usage: ceilometer alarm-show [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Show an alarm.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-state-get">
        <title>ceilometer alarm-state-get</title>
        <screen><computeroutput>usage: ceilometer alarm-state-get [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Get the state of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm state to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-state-set">
        <title>ceilometer alarm-state-set</title>
        <screen><computeroutput>usage: ceilometer alarm-state-set --state &lt;STATE&gt; [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Set the state of an alarm.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm state to set.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm', 'insufficient
      data']. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-threshold-create">
        <title>ceilometer alarm-threshold-create</title>
        <screen><computeroutput>usage: ceilometer alarm-threshold-create --name &lt;NAME&gt;
                                         [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                         [--user-id &lt;ALARM_USER_ID&gt;]
                                         [--description &lt;DESCRIPTION&gt;]
                                         [--state &lt;STATE&gt;]
                                         [--severity &lt;SEVERITY&gt;]
                                         [--enabled {True|False}]
                                         [--alarm-action &lt;Webhook URL&gt;]
                                         [--ok-action &lt;Webhook URL&gt;]
                                         [--insufficient-data-action &lt;Webhook URL&gt;]
                                         [--time-constraint &lt;Time Constraint&gt;]
                                         [--repeat-actions {True|False}] -m
                                         &lt;METRIC&gt; [--period &lt;PERIOD&gt;]
                                         [--evaluation-periods &lt;COUNT&gt;]
                                         [--statistic &lt;STATISTIC&gt;]
                                         [--comparison-operator &lt;OPERATOR&gt;]
                                         --threshold &lt;THRESHOLD&gt; [-q &lt;QUERY&gt;]</computeroutput></screen>
        <para>
Create a new alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --meter-name &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--statistic &lt;STATISTIC&gt;</command></term>
    <listitem>
      <para>
        Statistic to evaluate, one of: ['max', 'min',
      'avg', 'sum', 'count'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_alarm-threshold-update">
        <title>ceilometer alarm-threshold-update</title>
        <screen><computeroutput>usage: ceilometer alarm-threshold-update [--name &lt;NAME&gt;]
                                         [--project-id &lt;ALARM_PROJECT_ID&gt;]
                                         [--user-id &lt;ALARM_USER_ID&gt;]
                                         [--description &lt;DESCRIPTION&gt;]
                                         [--state &lt;STATE&gt;]
                                         [--severity &lt;SEVERITY&gt;]
                                         [--enabled {True|False}]
                                         [--alarm-action &lt;Webhook URL&gt;]
                                         [--ok-action &lt;Webhook URL&gt;]
                                         [--insufficient-data-action &lt;Webhook URL&gt;]
                                         [--time-constraint &lt;Time Constraint&gt;]
                                         [--repeat-actions {True|False}]
                                         [--remove-time-constraint &lt;Constraint names&gt;]
                                         [-m &lt;METRIC&gt;] [--period &lt;PERIOD&gt;]
                                         [--evaluation-periods &lt;COUNT&gt;]
                                         [--statistic &lt;STATISTIC&gt;]
                                         [--comparison-operator &lt;OPERATOR&gt;]
                                         [--threshold &lt;THRESHOLD&gt;]
                                         [-q &lt;QUERY&gt;]
                                         [&lt;ALARM_ID&gt;]</computeroutput></screen>
        <para>
Update an existing alarm based on computed statistics.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;ALARM_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the alarm to update.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--name &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of the alarm (must be unique per tenant).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--project-id &lt;ALARM_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with alarm (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;ALARM_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with alarm (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--description &lt;DESCRIPTION&gt;</command></term>
    <listitem>
      <para>
        Free text description of the alarm.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--state &lt;STATE&gt;</command></term>
    <listitem>
      <para>
        State of the alarm, one of: ['ok', 'alarm',
      'insufficient data']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--severity &lt;SEVERITY&gt;</command></term>
    <listitem>
      <para>
        Severity of the alarm, one of: ['low',
      'moderate', 'critical']
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--enabled {True|False}</command></term>
    <listitem>
      <para>
        True if alarm evaluation/actioning is enabled.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--alarm-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to alarm.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--ok-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
        URL to invoke when state transitions to OK.
      May be used multiple times. Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--insufficient-data-action &lt;Webhook URL&gt;</command></term>
    <listitem>
      <para>
      URL to invoke when state transitions to
      insufficient data. May be used multiple times.
      Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--time-constraint &lt;Time Constraint&gt;</command></term>
    <listitem>
      <para>
      Only evaluate the alarm if the time at
      evaluation is within this time constraint.
      Start point(s) of the constraint are specified
      with a cron expression, whereas its duration
      is given in seconds. Can be specified multiple
      times for multiple time constraints, format
      is: name=&lt;CONSTRAINT_NAME&gt;;start=&lt;CRON&gt;;durati
      on=&lt;SECONDS&gt;;[description=&lt;DESCRIPTION&gt;;[timez
      one=&lt;IANA Timezone&gt;]] Defaults to None.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--repeat-actions {True|False}</command></term>
    <listitem>
      <para>
      True if actions should be repeatedly notified
      while alarm remains in target state. Defaults
      to False.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--remove-time-constraint &lt;Constraint names&gt;</command></term>
    <listitem>
      <para>
      Name or list of names of the time constraints
      to remove.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METRIC&gt;, --meter-name &lt;METRIC&gt;</command></term>
    <listitem>
      <para>
      Metric to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
        Length of each period (seconds) to evaluate
      over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--evaluation-periods &lt;COUNT&gt;</command></term>
    <listitem>
      <para>
        Number of periods to evaluate over.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--statistic &lt;STATISTIC&gt;</command></term>
    <listitem>
      <para>
        Statistic to evaluate, one of: ['max', 'min',
      'avg', 'sum', 'count'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--comparison-operator &lt;OPERATOR&gt;</command></term>
    <listitem>
      <para>
      Operator to compare with, one of: ['lt', 'le',
      'eq', 'ne', 'ge', 'gt'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--threshold &lt;THRESHOLD&gt;</command></term>
    <listitem>
      <para>
        Threshold to evaluate against.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_capabilities">
        <title>ceilometer capabilities</title>
        <screen><computeroutput>usage: ceilometer capabilities</computeroutput></screen>
        <para>
Print Ceilometer capabilities.
        </para>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-list">
        <title>ceilometer event-list</title>
        <screen><computeroutput>usage: ceilometer event-list [-q &lt;QUERY&gt;] [--no-traits] [-l &lt;NUMBER&gt;]</computeroutput></screen>
        <para>
List events.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, floator datetime.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--no-traits</command></term>
    <listitem>
      <para>
        If specified, traits will not be printed.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;NUMBER&gt;, --limit &lt;NUMBER&gt;</command></term>
    <listitem>
      <para>
      Maximum number of events to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-show">
        <title>ceilometer event-show</title>
        <screen><computeroutput>usage: ceilometer event-show &lt;message_id&gt;</computeroutput></screen>
        <para>
Show a particular event.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;message_id&gt;</command></term>
    <listitem>
      <para>
        The ID of the event. Should be a UUID.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_event-type-list">
        <title>ceilometer event-type-list</title>
        <screen><computeroutput>usage: ceilometer event-type-list</computeroutput></screen>
        <para>
List event types.
        </para>
    </section>
    <section xml:id="ceilometerclient_subcommand_meter-list">
        <title>ceilometer meter-list</title>
        <screen><computeroutput>usage: ceilometer meter-list [-q &lt;QUERY&gt;] [-l &lt;NUMBER&gt;]</computeroutput></screen>
        <para>
List the user's meters.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;NUMBER&gt;, --limit &lt;NUMBER&gt;</command></term>
    <listitem>
      <para>
      Maximum number of meters to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_query-alarm-history">
        <title>ceilometer query-alarm-history</title>
        <screen><computeroutput>usage: ceilometer query-alarm-history [-f &lt;FILTER&gt;] [-o &lt;ORDERBY&gt;]
                                      [-l &lt;LIMIT&gt;]</computeroutput></screen>
        <para>
Query Alarm History.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;FILTER&gt;, --filter &lt;FILTER&gt;</command></term>
    <listitem>
      <para>
      {complex_op: [{simple_op: {field_name:
      value}}]} The complex_op is one of: ['and',
      'or'], simple_op is one of: ['=', '!=', '&lt;',
      '&lt;=', '&gt;', '&gt;='].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;ORDERBY&gt;, --orderby &lt;ORDERBY&gt;</command></term>
    <listitem>
      <para>
      [{field_name: direction}, {field_name:
      direction}] The direction is one of: ['asc',
      'desc'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
        Maximum number of alarm history items to
      return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_query-alarms">
        <title>ceilometer query-alarms</title>
        <screen><computeroutput>usage: ceilometer query-alarms [-f &lt;FILTER&gt;] [-o &lt;ORDERBY&gt;] [-l &lt;LIMIT&gt;]</computeroutput></screen>
        <para>
Query Alarms.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;FILTER&gt;, --filter &lt;FILTER&gt;</command></term>
    <listitem>
      <para>
      {complex_op: [{simple_op: {field_name:
      value}}]} The complex_op is one of: ['and',
      'or'], simple_op is one of: ['=', '!=', '&lt;',
      '&lt;=', '&gt;', '&gt;='].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;ORDERBY&gt;, --orderby &lt;ORDERBY&gt;</command></term>
    <listitem>
      <para>
      [{field_name: direction}, {field_name:
      direction}] The direction is one of: ['asc',
      'desc'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
        Maximum number of alarms to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_query-samples">
        <title>ceilometer query-samples</title>
        <screen><computeroutput>usage: ceilometer query-samples [-f &lt;FILTER&gt;] [-o &lt;ORDERBY&gt;] [-l &lt;LIMIT&gt;]</computeroutput></screen>
        <para>
Query samples.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-f &lt;FILTER&gt;, --filter &lt;FILTER&gt;</command></term>
    <listitem>
      <para>
      {complex_op: [{simple_op: {field_name:
      value}}]} The complex_op is one of: ['and',
      'or'], simple_op is one of: ['=', '!=', '&lt;',
      '&lt;=', '&gt;', '&gt;='].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-o &lt;ORDERBY&gt;, --orderby &lt;ORDERBY&gt;</command></term>
    <listitem>
      <para>
      [{field_name: direction}, {field_name:
      direction}] The direction is one of: ['asc',
      'desc'].
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;LIMIT&gt;, --limit &lt;LIMIT&gt;</command></term>
    <listitem>
      <para>
        Maximum number of samples to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_resource-list">
        <title>ceilometer resource-list</title>
        <screen><computeroutput>usage: ceilometer resource-list [-q &lt;QUERY&gt;] [--meter-links] [-l &lt;NUMBER&gt;]</computeroutput></screen>
        <para>
List the resources.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meter-links</command></term>
    <listitem>
      <para>
        If specified, meter links will be generated.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;NUMBER&gt;, --limit &lt;NUMBER&gt;</command></term>
    <listitem>
      <para>
      Maximum number of resources to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_resource-show">
        <title>ceilometer resource-show</title>
        <screen><computeroutput>usage: ceilometer resource-show &lt;RESOURCE_ID&gt;</computeroutput></screen>
        <para>
Show the resource.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
        ID of the resource to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-create">
        <title>ceilometer sample-create</title>
        <screen><computeroutput>usage: ceilometer sample-create [--project-id &lt;SAMPLE_PROJECT_ID&gt;]
                                [--user-id &lt;SAMPLE_USER_ID&gt;] -r &lt;RESOURCE_ID&gt;
                                -m &lt;METER_NAME&gt; --meter-type &lt;METER_TYPE&gt;
                                --meter-unit &lt;METER_UNIT&gt; --sample-volume
                                &lt;SAMPLE_VOLUME&gt;
                                [--resource-metadata &lt;RESOURCE_METADATA&gt;]
                                [--timestamp &lt;TIMESTAMP&gt;] [--direct &lt;DIRECT&gt;]</computeroutput></screen>
        <para>
Create a sample.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--project-id &lt;SAMPLE_PROJECT_ID&gt;</command></term>
    <listitem>
      <para>
      Tenant to associate with sample (configurable
      by admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--user-id &lt;SAMPLE_USER_ID&gt;</command></term>
    <listitem>
      <para>
        User to associate with sample (configurable by
      admin users only).
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-r &lt;RESOURCE_ID&gt;, --resource-id &lt;RESOURCE_ID&gt;</command></term>
    <listitem>
      <para>
      ID of the resource. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;METER_NAME&gt;, --meter-name &lt;METER_NAME&gt;</command></term>
    <listitem>
      <para>
      The meter name. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meter-type &lt;METER_TYPE&gt;</command></term>
    <listitem>
      <para>
        The meter type. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--meter-unit &lt;METER_UNIT&gt;</command></term>
    <listitem>
      <para>
        The meter unit. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--sample-volume &lt;SAMPLE_VOLUME&gt;</command></term>
    <listitem>
      <para>
      The sample volume. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--resource-metadata &lt;RESOURCE_METADATA&gt;</command></term>
    <listitem>
      <para>
      Resource metadata. Provided value should be a
      set of key-value pairs e.g. {"key":"value"}.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--timestamp &lt;TIMESTAMP&gt;</command></term>
    <listitem>
      <para>
        The sample timestamp.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>--direct &lt;DIRECT&gt;</command></term>
    <listitem>
      <para>
        Post sample to storage directly. Defaults to
      False.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-create-list">
        <title>ceilometer sample-create-list</title>
        <screen><computeroutput>usage: ceilometer sample-create-list [--direct &lt;DIRECT&gt;] &lt;SAMPLES_LIST&gt;</computeroutput></screen>
        <para>
Create a sample list.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;SAMPLES_LIST&gt;</command></term>
    <listitem>
      <para>
        Json array with samples to create.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>--direct &lt;DIRECT&gt;</command></term>
    <listitem>
      <para>
        Post samples to storage directly. Defaults to False.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-list">
        <title>ceilometer sample-list</title>
        <screen><computeroutput>usage: ceilometer sample-list [-q &lt;QUERY&gt;] [-m &lt;NAME&gt;] [-l &lt;NUMBER&gt;]</computeroutput></screen>
        <para>
List the samples (return OldSample objects if -m/--meter is set).
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;NAME&gt;, --meter &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of meter to show samples for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-l &lt;NUMBER&gt;, --limit &lt;NUMBER&gt;</command></term>
    <listitem>
      <para>
      Maximum number of samples to return.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_sample-show">
        <title>ceilometer sample-show</title>
        <screen><computeroutput>usage: ceilometer sample-show &lt;SAMPLE_ID&gt;</computeroutput></screen>
        <para>
Show a sample.
        </para>  <variablelist wordsize="10">
    <title>Positional arguments</title>
  <varlistentry>
    <term><command>&lt;SAMPLE_ID&gt;</command></term>
    <listitem>
      <para>
        ID (aka message ID) of the sample to show.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_statistics">
        <title>ceilometer statistics</title>
        <screen><computeroutput>usage: ceilometer statistics [-q &lt;QUERY&gt;] -m &lt;NAME&gt; [-p &lt;PERIOD&gt;] [-g &lt;FIELD&gt;]
                             [-a &lt;FUNC&gt;[&lt;-&lt;PARAM&gt;]]</computeroutput></screen>
        <para>
List the statistics for a meter.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-q &lt;QUERY&gt;, --query &lt;QUERY&gt;</command></term>
    <listitem>
      <para>
        key[op]data_type::value; list. data_type is
      optional, but if supplied must be string,
      integer, float, or boolean.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-m &lt;NAME&gt;, --meter &lt;NAME&gt;</command></term>
    <listitem>
      <para>
        Name of meter to list statistics for.
      Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-p &lt;PERIOD&gt;, --period &lt;PERIOD&gt;</command></term>
    <listitem>
      <para>
      Period in seconds over which to group samples.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-g &lt;FIELD&gt;, --groupby &lt;FIELD&gt;</command></term>
    <listitem>
      <para>
      Field for group by.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-a &lt;FUNC&gt;[&lt;-&lt;PARAM&gt;], --aggregate &lt;FUNC&gt;[&lt;-&lt;PARAM&gt;]</command></term>
    <listitem>
      <para>
      Function for data aggregation. Available
      aggregates are: count, cardinality, min, max,
      sum, stddev, avg. Defaults to [].
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_trait-description-list">
        <title>ceilometer trait-description-list</title>
        <screen><computeroutput>usage: ceilometer trait-description-list -e &lt;EVENT_TYPE&gt;</computeroutput></screen>
        <para>
List trait info for an event type.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-e &lt;EVENT_TYPE&gt;, --event_type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
      Type of the event for which traits will be
      shown. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
    <section xml:id="ceilometerclient_subcommand_trait-list">
        <title>ceilometer trait-list</title>
        <screen><computeroutput>usage: ceilometer trait-list -e &lt;EVENT_TYPE&gt; -t &lt;TRAIT_NAME&gt;</computeroutput></screen>
        <para>
List all traits with name &lt;trait_name&gt; for Event Type &lt;event_type&gt;.
        </para>  <variablelist wordsize="10">
    <title>Optional arguments</title>
  <varlistentry>
    <term><command>-e &lt;EVENT_TYPE&gt;, --event_type &lt;EVENT_TYPE&gt;</command></term>
    <listitem>
      <para>
      Type of the event for which traits will
      listed. Required.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term><command>-t &lt;TRAIT_NAME&gt;, --trait_name &lt;TRAIT_NAME&gt;</command></term>
    <listitem>
      <para>
      The name of the trait to list. Required.
      </para>
    </listitem>
  </varlistentry>
 </variablelist>
    </section>
</chapter>
