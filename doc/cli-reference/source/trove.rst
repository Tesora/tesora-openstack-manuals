.. ## WARNING ######################################
.. This file is automatically generated, do not edit
.. #################################################

====================================
Database service command-line client
====================================

The trove client is the command-line interface (CLI) for
the Database service API and its extensions.

This chapter documents :command:`trove` version ``1.0.3``.

For help on a specific :command:`trove` command, enter:

.. code-block:: console

   $ trove help COMMAND

.. _trove_command_usage:

trove usage
~~~~~~~~~~~

.. code-block:: console

   usage: trove [--version] [--debug] [--os-username <auth-user-name>]
                [--os-password <auth-password>]
                [--os-tenant-name <auth-tenant-name>]
                [--os-tenant-id <auth-tenant-id>] [--os-auth-url <auth-url>]
                [--os-region-name <region-name>] [--service-type <service-type>]
                [--service-name <service-name>] [--bypass-url <bypass-url>]
                [--database-service-name <database-service-name>]
                [--endpoint-type <endpoint-type>]
                [--os-database-api-version <database-api-ver>]
                [--os-cacert <ca-certificate>] [--retries <retries>]
                <subcommand> ...

Subcommands
-----------

``backup-create``
  Creates a backup.

``backup-delete``
  Deletes a backup.

``backup-list``
  List available backups.

``backup-list-instance``
  List available backups for an instance.

``backup-show``
  Show details of a backup.

``create``
  Creates a new instance.

``database-create``
  Creates a database on an instance.

``database-delete``
  Deletes a database.

``database-list``
  Lists available databases on an instance.

``delete``
  Deletes an instance.

``flavor-list``
  Lists available flavors.

``flavor-show``
  Show details of a flavor.

``limit-list``
  Lists the limits for a tenant.

``list``
  List all the instances.

``resize-flavor``
  Resizes the flavor of an instance.

``resize-volume``
  Resizes the volume size of an instance.

``restart``
  Restarts the instance.

``root-enable``
  Enables root for a instance.

``root-show``
  Gets root enabled status for a instance.

``secgroup-add-rule``
  Creates a security group rule.

``secgroup-delete-rule``
  Deletes a security group rule.

``secgroup-list``
  Lists all security groups.

``secgroup-show``
  Shows details about a security group.

``show``
  Show details of an instance.

``user-create``
  Creates a user.

``user-delete``
  Deletes a user from the instance.

``user-grant-access``
  Grants access to a database(s) for a user.

``user-list``
  Lists the users for a instance.

``user-revoke-access``
  Revokes access to a database for a user.

``user-show``
  Gets a user from the instance.

``user-show-access``
  Gets a users access from the instance.

``user-update-attributes``
  Updates a users attributes from the instance.

``bash-completion``
  Print arguments for bash_completion.

``help``
  Display help about this program or one of its
  subcommands.

.. _trove_command_options:

trove optional arguments
~~~~~~~~~~~~~~~~~~~~~~~~

``--version``
  show program's version number and exit

``--debug``
  Print debugging output

``--os-username <auth-user-name>``
  Defaults to ``env[OS_USERNAME]``.

``--os-password <auth-password>``
  Defaults to ``env[OS_PASSWORD]``.

``--os-tenant-name <auth-tenant-name>``
  Defaults to ``env[OS_TENANT_NAME]``.

``--os-tenant-id <auth-tenant-id>``
  Defaults to ``env[OS_TENANT_ID]``.

``--os-auth-url <auth-url>``
  Defaults to ``env[OS_AUTH_URL]``.

``--os-region-name <region-name>``
  Defaults to ``env[OS_REGION_NAME]``.

``--service-type <service-type>``
  Defaults to database for most actions

``--service-name <service-name>``
  Defaults to ``env[TROVE_SERVICE_NAME]``

``--bypass-url <bypass-url>``
  Defaults to ``env[TROVE_BYPASS_URL]``

``--database-service-name <database-service-name>``
  Defaults to ``env[TROVE_DATABASE_SERVICE_NAME]``

``--endpoint-type <endpoint-type>``
  Defaults to ``env[TROVE_ENDPOINT_TYPE]`` or publicURL.

``--os-database-api-version <database-api-ver>``
  Accepts 1,defaults to ``env[OS_DATABASE_API_VERSION]``.

``--os-cacert <ca-certificate>``
  Specify a CA bundle file to use in verifying a TLS
  (https) server certificate. Defaults to ``env[OS_CACERT]``

``--retries <retries>``
  Number of retries.

.. _trove_backup-create:

trove backup-create
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-create [--description <description>] <name> <instance>

Creates a backup.

Positional arguments
--------------------

``<name>``
  Name of the backup.

``<instance>``
  UUID of the instance.

Optional arguments
------------------

``--description <description>``
  An optional description for the backup.

.. _trove_backup-delete:

trove backup-delete
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-delete <backup>

Deletes a backup.

Positional arguments
--------------------

``<backup>``
  ID of the backup.

.. _trove_backup-list:

trove backup-list
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-list

List available backups.

.. _trove_backup-list-instance:

trove backup-list-instance
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-list-instance <instance>

List available backups for an instance.

Positional arguments
--------------------

``<instance>``
  ID of the instance.

.. _trove_backup-show:

trove backup-show
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-show <backup>

Show details of a backup.

Positional arguments
--------------------

``<backup>``
  ID of the backup.

.. _trove_create:

trove create
~~~~~~~~~~~~

.. code-block:: console

   usage: trove create [--size <size>]
                       [--databases <databases> [<databases> ...]]
                       [--users <users> [<users> ...]] [--backup <backup>]
                       [--availability_zone <availability_zone>]
                       <name> <flavor_id>

Creates a new instance.

Positional arguments
--------------------

``<name>``
  Name of the instance

``<flavor_id>``
  Flavor of the instance

Optional arguments
------------------

``--size <size>``
  Size of the instance disk in GB

``--databases <databases> [<databases> ...]``
  Optional list of databases.

``--users <users> [<users> ...]``
  Optional list of users in the form user:password.

``--backup <backup>``
  A backup UUID

``--availability_zone <availability_zone>``
  The Zone hint to give to nova

.. _trove_database-create:

trove database-create
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-create [--character_set <character_set>]
                                [--collate <collate>]
                                <instance> <name>

Creates a database on an instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of the backup.

Optional arguments
------------------

``--character_set <character_set>``
  Optional character set for database

``--collate <collate>``
  Optional collation type for database

.. _trove_database-delete:

trove database-delete
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-delete <instance> <database>

Deletes a database.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<database>``
  Name of the database.

.. _trove_database-list:

trove database-list
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-list <instance>

Lists available databases on an instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

.. _trove_delete:

trove delete
~~~~~~~~~~~~

.. code-block:: console

   usage: trove delete <instance>

Deletes an instance.

Positional arguments
--------------------

``<instance>``
  ID of the instance.

.. _trove_flavor-list:

trove flavor-list
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove flavor-list

Lists available flavors.

.. _trove_flavor-show:

trove flavor-show
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove flavor-show <flavor>

Show details of a flavor.

Positional arguments
--------------------

``<flavor>``
  ID of the flavor.

.. _trove_limit-list:

trove limit-list
~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove limit-list

Lists the limits for a tenant.

.. _trove_list:

trove list
~~~~~~~~~~

.. code-block:: console

   usage: trove list

List all the instances.

.. _trove_resize-flavor:

trove resize-flavor
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove resize-flavor <instance> <flavor_id>

Resizes the flavor of an instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance

``<flavor_id>``
  Flavor of the instance

.. _trove_resize-volume:

trove resize-volume
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove resize-volume <instance> <size>

Resizes the volume size of an instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance

``<size>``
  Size of the instance disk in GB

.. _trove_restart:

trove restart
~~~~~~~~~~~~~

.. code-block:: console

   usage: trove restart <instance>

Restarts the instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance

.. _trove_root-enable:

trove root-enable
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove root-enable <instance>

Enables root for a instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

.. _trove_root-show:

trove root-show
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove root-show <instance>

Gets root enabled status for a instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

.. _trove_secgroup-add-rule:

trove secgroup-add-rule
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-add-rule <security_group> <protocol> <from_port>
                                  <to_port> <cidr>

Creates a security group rule.

Positional arguments
--------------------

``<security_group>``
  Security group name

``<protocol>``
  Protocol

``<from_port>``
  from port

``<to_port>``
  to port

``<cidr>``
  CIDR address

.. _trove_secgroup-delete-rule:

trove secgroup-delete-rule
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-delete-rule <security_group_rule>

Deletes a security group rule.

Positional arguments
--------------------

``<security_group_rule>``
  Security group rule

.. _trove_secgroup-list:

trove secgroup-list
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-list

Lists all security groups.

.. _trove_secgroup-show:

trove secgroup-show
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-show <security_group>

Shows details about a security group.

Positional arguments
--------------------

``<security_group>``
  ID of the security group.

.. _trove_show:

trove show
~~~~~~~~~~

.. code-block:: console

   usage: trove show <instance>

Show details of an instance.

Positional arguments
--------------------

``<instance>``
  ID of the instance.

.. _trove_user-create:

trove user-create
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-create [--host <host>]
                            [--databases <databases> [<databases> ...]]
                            <instance> <name> <password>

Creates a user.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

``<password>``
  Password of user

Optional arguments
------------------

``--host <host>``
  Optional host of user

``--databases <databases> [<databases> ...]``
  Optional list of databases.

.. _trove_user-delete:

trove user-delete
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-delete [--host <host>] <instance> <name>

Deletes a user from the instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

Optional arguments
------------------

``--host <host>``
  Optional host of user

.. _trove_user-grant-access:

trove user-grant-access
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-grant-access [--host <host>]
                                  <instance> <name> <databases> [<databases> ...]

Grants access to a database(s) for a user.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

``<databases>``
  List of databases.

Optional arguments
------------------

``--host <host>``
  Optional host of user

.. _trove_user-list:

trove user-list
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-list <instance>

Lists the users for a instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

.. _trove_user-revoke-access:

trove user-revoke-access
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-revoke-access [--host <host>] <instance> <name> <database>

Revokes access to a database for a user.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

``<database>``
  A single database.

Optional arguments
------------------

``--host <host>``
  Optional host of user

.. _trove_user-show:

trove user-show
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-show [--host <host>] <instance> <name>

Gets a user from the instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

Optional arguments
------------------

``--host <host>``
  Optional host of user

.. _trove_user-show-access:

trove user-show-access
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-show-access [--host <host>] <instance> <name>

Gets a users access from the instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

Optional arguments
------------------

``--host <host>``
  Optional host of user

.. _trove_user-update-attributes:

trove user-update-attributes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-update-attributes [--host <host>] [--new_name <new_name>]
                                       [--new_password <new_password>]
                                       [--new_host <new_host>]
                                       <instance> <name>

Updates a users attributes from the instance.

Positional arguments
--------------------

``<instance>``
  UUID of the instance.

``<name>``
  Name of user

Optional arguments
------------------

``--host <host>``
  Optional host of user

``--new_name <new_name>``
  Optional new name of user

``--new_password <new_password>``
  Optional new password of user

``--new_host <new_host>``
  Optional new host of user

