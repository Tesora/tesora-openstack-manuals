.. ## WARNING ######################################
.. This file is automatically generated, do not edit
.. #################################################

====================================
Database service command-line client
====================================

The trove client is the command-line interface (CLI) for
the Database service API and its extensions.

This chapter documents :command:`trove` version ``1.4.0``.

For help on a specific :command:`trove` command, enter:

.. code-block:: console

   $ trove help COMMAND

.. _trove_command_usage:

trove usage
~~~~~~~~~~~

.. code-block:: console

   usage: trove [--version] [--debug] [--os-auth-system <auth-system>]
                [--service-type <service-type>] [--service-name <service-name>]
                [--bypass-url <bypass-url>]
                [--database-service-name <database-service-name>]
                [--endpoint-type <endpoint-type>]
                [--os-database-api-version <database-api-ver>]
                [--retries <retries>] [--json] [--insecure]
                [--os-cacert <ca-certificate>] [--os-cert <certificate>]
                [--os-key <key>] [--timeout <seconds>]
                [--os-auth-url OS_AUTH_URL] [--os-domain-id OS_DOMAIN_ID]
                [--os-domain-name OS_DOMAIN_NAME] [--os-project-id OS_PROJECT_ID]
                [--os-project-name OS_PROJECT_NAME]
                [--os-project-domain-id OS_PROJECT_DOMAIN_ID]
                [--os-project-domain-name OS_PROJECT_DOMAIN_NAME]
                [--os-trust-id OS_TRUST_ID] [--os-user-id OS_USER_ID]
                [--os-username OS_USERNAME]
                [--os-user-domain-id OS_USER_DOMAIN_ID]
                [--os-user-domain-name OS_USER_DOMAIN_NAME]
                [--os-password OS_PASSWORD] [--os-tenant-name <auth-tenant-name>]
                [--os-tenant-id <tenant-id>] [--os-auth-token OS_AUTH_TOKEN]
                [--os-region-name <region-name>]
                <subcommand> ...

Subcommands
-----------

``backup-copy``
  Creates a backup from another backup.

``backup-create``
  Creates a backup of an instance.

``backup-delete``
  Deletes a backup.

``backup-list``
  Lists available backups.

``backup-list-instance``
  Lists available backups for an instance.

``backup-show``
  Shows details of a backup.

``cluster-create``
  Creates a new cluster.

``cluster-delete``
  Deletes a cluster.

``cluster-grow``
  Adds more instances to a cluster.

``cluster-instances``
  Lists all instances of a cluster.

``cluster-list``
  Lists all the clusters.

``cluster-show``
  Shows details of a cluster.

``cluster-shrink``
  Drops instances from a cluster.

``configuration-attach``
  Attaches a configuration group to an
  instance.

``configuration-create``
  Creates a configuration group.

``configuration-default``
  Shows the default configuration of an
  instance.

``configuration-delete``
  Deletes a configuration group.

``configuration-detach``
  Detaches a configuration group from an
  instance.

``configuration-instances``
  Lists all instances associated with a
  configuration group.

``configuration-list``
  Lists all configuration groups.

``configuration-parameter-list``
  Lists available parameters for a
  configuration group.

``configuration-parameter-show``
  Shows details of a configuration parameter.

``configuration-patch``
  Patches a configuration group.

``configuration-show``
  Shows details of a configuration group.

``configuration-update``
  Updates a configuration group.

``create``
  Creates a new instance.

``database-create``
  Creates a database on an instance.

``database-delete``
  Deletes a database from an instance.

``database-list``
  Lists available databases on an instance.

``datastore-list``
  Lists available datastores.

``datastore-show``
  Shows details of a datastore.

``datastore-version-list``
  Lists available versions for a datastore.

``datastore-version-show``
  Shows details of a datastore version.

``delete``
  Deletes an instance.

``detach-replica``
  Detaches a replica instance from its
  replication source.

``eject-replica-source``
  Ejects a replica source from its set.

``flavor-list``
  Lists available flavors.

``flavor-show``
  Shows details of a flavor.

``limit-list``
  Lists the limits for a tenant.

``list``
  Lists all the instances.

``metadata-create``
  Creates metadata in the database for
  instance <id>.

``metadata-delete``
  Deletes metadata for instance <id>.

``metadata-edit``
  Replaces metadata value with a new one, this
  is non-destructive.

``metadata-list``
  Shows all metadata for instance <id>.

``metadata-show``
  Shows metadata entry for key <key> and
  instance <id>.

``metadata-update``
  Updates metadata, this is destructive.

``promote-to-replica-source``
  Promotes a replica to be the new replica
  source of its set.

``resize-instance``
  Resizes an instance with a new flavor.

``resize-volume``
  Resizes the volume size of an instance.

``restart``
  Restarts an instance.

``root-enable``
  Enables root for an instance and resets if
  already exists.

``root-show``
  Gets status if root was ever enabled for an
  instance or cluster.

``secgroup-add-rule``
  Creates a security group rule.

``secgroup-delete-rule``
  Deletes a security group rule.

``secgroup-list``
  Lists all security groups.

``secgroup-list-rules``
  Lists all rules for a security group.

``secgroup-show``
  Shows details of a security group.

``show``
  Shows details of an instance.

``update``
  Updates an instance: Edits name,
  configuration, or replica source.

``user-create``
  Creates a user on an instance.

``user-delete``
  Deletes a user from an instance.

``user-grant-access``
  Grants access to a database(s) for a user.

``user-list``
  Lists the users for an instance.

``user-revoke-access``
  Revokes access to a database for a user.

``user-show``
  Shows details of a user of an instance.

``user-show-access``
  Shows access details of a user of an
  instance.

``user-update-attributes``
  Updates a user's attributes on an instance.

``bash-completion``
  Prints arguments for bash_completion.

``help``
  Displays help about this program or one of
  its subcommands.

.. _trove_command_options:

trove optional arguments
~~~~~~~~~~~~~~~~~~~~~~~~

``--version``
  show program's version number and exit

``--debug``
  Print debugging output.

``--os-auth-system <auth-system>``
  Defaults to ``env[OS_AUTH_SYSTEM]``.

``--service-type <service-type>``
  Defaults to database for most actions.

``--service-name <service-name>``
  Defaults to ``env[TROVE_SERVICE_NAME]``.

``--bypass-url <bypass-url>``
  Defaults to ``env[TROVE_BYPASS_URL]``.

``--database-service-name <database-service-name>``
  Defaults to
  ``env[TROVE_DATABASE_SERVICE_NAME]``.

``--endpoint-type <endpoint-type>``
  Defaults to ``env[TROVE_ENDPOINT_TYPE]`` or
  publicURL.

``--os-database-api-version <database-api-ver>``
  Accepts 1, defaults to
  ``env[OS_DATABASE_API_VERSION]``.

``--retries <retries>``
  Number of retries.

``--json, --os-json-output``
  Output JSON instead of prettyprint. Defaults
  to ``env[OS_JSON_OUTPUT]``.

``--insecure``
  Explicitly allow client to perform
  "insecure" TLS (https) requests. The
  server's certificate will not be verified
  against any certificate authorities. This
  option should be used with caution.

``--os-cacert <ca-certificate>``
  Specify a CA bundle file to use in verifying
  a TLS (https) server certificate. Defaults
  to ``env[OS_CACERT]``.

``--os-cert <certificate>``
  Defaults to ``env[OS_CERT]``.

``--os-key <key>``
  Defaults to ``env[OS_KEY]``.

``--timeout <seconds>``
  Set request timeout (in seconds).

``--os-auth-url OS_AUTH_URL``
  Authentication URL

``--os-domain-id OS_DOMAIN_ID``
  Domain ID to scope to

``--os-domain-name OS_DOMAIN_NAME``
  Domain name to scope to

``--os-project-id OS_PROJECT_ID``
  Project ID to scope to

``--os-project-name OS_PROJECT_NAME``
  Project name to scope to

``--os-project-domain-id OS_PROJECT_DOMAIN_ID``
  Domain ID containing project

``--os-project-domain-name OS_PROJECT_DOMAIN_NAME``
  Domain name containing project

``--os-trust-id OS_TRUST_ID``
  Trust ID

``--os-user-id OS_USER_ID``
  User ID

``--os-username OS_USERNAME, --os-user_name OS_USERNAME``
  Username

``--os-user-domain-id OS_USER_DOMAIN_ID``
  User's domain id

``--os-user-domain-name OS_USER_DOMAIN_NAME``
  User's domain name

``--os-password OS_PASSWORD``
  User's password

``--os-tenant-name <auth-tenant-name>``
  Tenant to request authorization on. Defaults
  to ``env[OS_TENANT_NAME]``.

``--os-tenant-id <tenant-id>``
  Tenant to request authorization on. Defaults
  to ``env[OS_TENANT_ID]``.

``--os-auth-token OS_AUTH_TOKEN``
  Defaults to ``env[OS_AUTH_TOKEN]``

``--os-region-name <region-name>``
  Specify the region to use. Defaults to
  ``env[OS_REGION_NAME]``.

.. _trove_backup-copy:

trove backup-copy
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-copy <name> <backup>
                            [--region <region>] [--description <description>]

Creates a backup from another backup.

Positional arguments
--------------------

``<name>``
  Name of the backup.

``<backup>``
  Backup ID of the source backup.

Optional arguments
------------------

``--region <region>``
  Region where the source backup resides.

``--description <description>``
  An optional description for the backup.

.. _trove_backup-create:

trove backup-create
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-create <instance> <name>
                              [--description <description>] [--parent <parent>]

Creates a backup of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of the backup.

Optional arguments
------------------

``--description <description>``
  An optional description for the backup.

``--parent <parent>``
  Optional ID of the parent backup to perform an
  incremental backup from.

.. _trove_backup-delete:

trove backup-delete
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-delete <backup>

Deletes a backup.

Positional arguments
--------------------

``<backup>``
  ID of the backup.

.. _trove_backup-list:

trove backup-list
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-list [--limit <limit>] [--marker <ID>]
                            [--datastore <datastore>]

Lists available backups.

Optional arguments
------------------

``--limit <limit>``
  Return up to N number of the most recent backups.

``--marker <ID>``
  Begin displaying the results for IDs greater than
  the specified marker. When used with :option:`--limit,` set
  this to the last ID displayed in the previous run.

``--datastore <datastore>``
  Name or ID of the datastore to list backups for.

.. _trove_backup-list-instance:

trove backup-list-instance
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-list-instance [--limit <limit>] [--marker <ID>] <instance>

Lists available backups for an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

Optional arguments
------------------

``--limit <limit>``
  Return up to N number of the most recent backups.

``--marker <ID>``
  Begin displaying the results for IDs greater than the
  specified marker. When used with :option:`--limit,` set this to the
  last ID displayed in the previous run.

.. _trove_backup-show:

trove backup-show
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove backup-show <backup>

Shows details of a backup.

Positional arguments
--------------------

``<backup>``
  ID of the backup.

.. _trove_cluster-create:

trove cluster-create
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-create <name> <datastore> <datastore_version>
                               [--instance <opt=value,opt=value,...>]

Creates a new cluster.

Positional arguments
--------------------

``<name>``
  Name of the cluster.

``<datastore>``
  A datastore name or ID.

``<datastore_version>``
  A datastore version name or ID.

Optional arguments
------------------

``--instance <opt=value,opt=value,...>``
  Create an instance for the cluster. Specify
  multiple times to create multiple instances.
  Valid options are: flavor=flavor_name_or_id,
  volume=disk_size_in_GB, nic='net-id=net-
  uuid,v4-fixed-ip=ip-addr,port-id=port-uuid'
  (where net-id=network_id, v4-fixed-
  ip=IPv4r_fixed_address, port-id=port_id),
  availability_zone=AZ_hint_for_Nova.

.. _trove_cluster-delete:

trove cluster-delete
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-delete <cluster>

Deletes a cluster.

Positional arguments
--------------------

``<cluster>``
  ID or name of the cluster.

.. _trove_cluster-grow:

trove cluster-grow
~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-grow <cluster>
                             [--instance <name=name,flavor=flavor_name_or_id,volume=volume>]

Adds more instances to a cluster.

Positional arguments
--------------------

``<cluster>``
  ID or name of the cluster.

Optional arguments
------------------

``--instance <name=name,flavor=flavor_name_or_id,volume=volume>``
  Add an instance to the cluster. Specify
  multiple times to create multiple instances.

.. _trove_cluster-instances:

trove cluster-instances
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-instances <cluster>

Lists all instances of a cluster.

Positional arguments
--------------------

``<cluster>``
  ID or name of the cluster.

.. _trove_cluster-list:

trove cluster-list
~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-list [--limit <limit>] [--marker <ID>]

Lists all the clusters.

Optional arguments
------------------

``--limit <limit>``
  Limit the number of results displayed.

``--marker <ID>``
  Begin displaying the results for IDs greater than the
  specified marker. When used with :option:`--limit,` set this to the
  last ID displayed in the previous run.

.. _trove_cluster-show:

trove cluster-show
~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-show <cluster>

Shows details of a cluster.

Positional arguments
--------------------

``<cluster>``
  ID or name of the cluster.

.. _trove_cluster-shrink:

trove cluster-shrink
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove cluster-shrink <cluster> <instance> [<instance> ...]

Drops instances from a cluster.

Positional arguments
--------------------

``<cluster>``
  ID or name of the cluster.

``<instance>``
  Drop instance(s) from the cluster. Specify multiple ids to drop
  multiple instances.

.. _trove_configuration-attach:

trove configuration-attach
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-attach <instance> <configuration>

Attaches a configuration group to an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<configuration>``
  ID of the configuration group to attach to the instance.

.. _trove_configuration-create:

trove configuration-create
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-create <name> <values>
                                     [--datastore <datastore>]
                                     [--datastore_version <datastore_version>]
                                     [--description <description>]

Creates a configuration group.

Positional arguments
--------------------

``<name>``
  Name of the configuration group.

``<values>``
  Dictionary of the values to set.

Optional arguments
------------------

``--datastore <datastore>``
  Datastore assigned to the configuration
  group. Required if default datastore is not
  configured.

``--datastore_version <datastore_version>``
  Datastore version ID assigned to the
  configuration group.

``--description <description>``
  An optional description for the
  configuration group.

.. _trove_configuration-default:

trove configuration-default
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-default <instance>

Shows the default configuration of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_configuration-delete:

trove configuration-delete
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-delete <configuration_group>

Deletes a configuration group.

Positional arguments
--------------------

``<configuration_group>``
  ID of the configuration group.

.. _trove_configuration-detach:

trove configuration-detach
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-detach <instance>

Detaches a configuration group from an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_configuration-instances:

trove configuration-instances
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-instances <configuration_group>

Lists all instances associated with a configuration group.

Positional arguments
--------------------

``<configuration_group>``
  ID of the configuration group.

.. _trove_configuration-list:

trove configuration-list
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-list

Lists all configuration groups.

.. _trove_configuration-parameter-list:

trove configuration-parameter-list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-parameter-list <datastore_version>
                                             [--datastore <datastore>]

Lists available parameters for a configuration group.

Positional arguments
--------------------

``<datastore_version>``
  Datastore version name or ID assigned to the
  configuration group.

Optional arguments
------------------

``--datastore <datastore>``
  ID or name of the datastore to list configuration
  parameters for. Optional if the ID of the
  datastore_version is provided.

.. _trove_configuration-parameter-show:

trove configuration-parameter-show
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-parameter-show <datastore_version> <parameter>
                                             [--datastore <datastore>]

Shows details of a configuration parameter.

Positional arguments
--------------------

``<datastore_version>``
  Datastore version name or ID assigned to the
  configuration group.

``<parameter>``
  Name of the configuration parameter.

Optional arguments
------------------

``--datastore <datastore>``
  ID or name of the datastore to list configuration
  parameters for. Optional if the ID of the
  datastore_version is provided.

.. _trove_configuration-patch:

trove configuration-patch
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-patch <configuration_group> <values>

Patches a configuration group.

Positional arguments
--------------------

``<configuration_group>``
  ID of the configuration group.

``<values>``
  Dictionary of the values to set.

.. _trove_configuration-show:

trove configuration-show
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-show <configuration_group>

Shows details of a configuration group.

Positional arguments
--------------------

``<configuration_group>``
  ID of the configuration group.

.. _trove_configuration-update:

trove configuration-update
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove configuration-update <configuration_group> <values>
                                     [--name <name>]
                                     [--description <description>]

Updates a configuration group.

Positional arguments
--------------------

``<configuration_group>``
  ID of the configuration group.

``<values>``
  Dictionary of the values to set.

Optional arguments
------------------

``--name <name>``
  Name of the configuration group.

``--description <description>``
  An optional description for the configuration
  group.

.. _trove_create:

trove create
~~~~~~~~~~~~

.. code-block:: console

   usage: trove create <name> <flavor>
                       [--size <size>]
                       [--databases <databases> [<databases> ...]]
                       [--users <users> [<users> ...]] [--backup <backup>]
                       [--availability_zone <availability_zone>]
                       [--datastore <datastore>]
                       [--datastore_version <datastore_version>]
                       [--nic <net-id=net-uuid,v4-fixed-ip=ip-addr,port-id=port-uuid>]
                       [--configuration <configuration>]
                       [--replica_of <source_instance>] [--replica_count <count>]

Creates a new instance.

Positional arguments
--------------------

``<name>``
  Name of the instance.

``<flavor>``
  Flavor ID or name of the instance.

Optional arguments
------------------

``--size <size>``
  Size of the instance disk volume in GB.
  Required when volume support is enabled.

``--databases <databases> [<databases> ...]``
  Optional list of databases.

``--users <users> [<users> ...]``
  Optional list of users in the form
  user:password.

``--backup <backup>``
  A backup ID.

``--availability_zone <availability_zone>``
  The Zone hint to give to nova.

``--datastore <datastore>``
  A datastore name or ID.

``--datastore_version <datastore_version>``
  A datastore version name or ID.

``--nic <net-id=net-uuid,v4-fixed-ip=ip-addr,port-id=port-uuid>``
  Create a NIC on the instance. Specify option
  multiple times to create multiple NICs. net-
  id: attach NIC to network with this ID
  (either port-id or net-id must be
  specified), v4-fixed-ip: IPv4 fixed address
  for NIC (optional), port-id: attach NIC to
  port with this ID (either port-id or net-id
  must be specified).

``--configuration <configuration>``
  ID of the configuration group to attach to
  the instance.

``--replica_of <source_instance>``
  ID or name of an existing instance to
  replicate from.

``--replica_count <count>``
  Number of replicas to create (defaults to
  1).

.. _trove_database-create:

trove database-create
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-create <instance> <name>
                                [--character_set <character_set>]
                                [--collate <collate>]

Creates a database on an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of the database.

Optional arguments
------------------

``--character_set <character_set>``
  Optional character set for database.

``--collate <collate>``
  Optional collation type for database.

.. _trove_database-delete:

trove database-delete
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-delete <instance> <database>

Deletes a database from an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<database>``
  Name of the database.

.. _trove_database-list:

trove database-list
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove database-list <instance>

Lists available databases on an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_datastore-list:

trove datastore-list
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove datastore-list

Lists available datastores.

.. _trove_datastore-show:

trove datastore-show
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove datastore-show <datastore>

Shows details of a datastore.

Positional arguments
--------------------

``<datastore>``
  ID of the datastore.

.. _trove_datastore-version-list:

trove datastore-version-list
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove datastore-version-list <datastore>

Lists available versions for a datastore.

Positional arguments
--------------------

``<datastore>``
  ID or name of the datastore.

.. _trove_datastore-version-show:

trove datastore-version-show
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove datastore-version-show <datastore_version>
                                       [--datastore <datastore>]

Shows details of a datastore version.

Positional arguments
--------------------

``<datastore_version>``
  ID or name of the datastore version.

Optional arguments
------------------

``--datastore <datastore>``
  ID or name of the datastore. Optional if the ID of
  the datastore_version is provided.

.. _trove_delete:

trove delete
~~~~~~~~~~~~

.. code-block:: console

   usage: trove delete <instance>

Deletes an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_detach-replica:

trove detach-replica
~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove detach-replica <instance>

Detaches a replica instance from its replication source.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_eject-replica-source:

trove eject-replica-source
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove eject-replica-source <instance>

Ejects a replica source from its set.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_flavor-list:

trove flavor-list
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove flavor-list [--datastore_type <datastore_type>]
                            [--datastore_version_id <datastore_version_id>]

Lists available flavors.

Optional arguments
------------------

``--datastore_type <datastore_type>``
  Type of the datastore. For eg: mysql.

``--datastore_version_id <datastore_version_id>``
  ID of the datastore version.

.. _trove_flavor-show:

trove flavor-show
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove flavor-show <flavor>

Shows details of a flavor.

Positional arguments
--------------------

``<flavor>``
  ID or name of the flavor.

.. _trove_limit-list:

trove limit-list
~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove limit-list

Lists the limits for a tenant.

.. _trove_list:

trove list
~~~~~~~~~~

.. code-block:: console

   usage: trove list [--limit <limit>] [--marker <ID>] [--include-clustered]

Lists all the instances.

Optional arguments
------------------

``--limit <limit>``
  Limit the number of results displayed.

``--marker <ID>``
  Begin displaying the results for IDs greater than the
  specified marker. When used with :option:`--limit,` set this to
  the last ID displayed in the previous run.

``--include-clustered``
  Include instances that are part of a cluster (default
  false).

.. _trove_metadata-create:

trove metadata-create
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-create <instance_id> <key> <value>

Creates metadata in the database for instance <id>.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

``<key>``
  Key for assignment.

``<value>``
  Value to assign to <key>.

.. _trove_metadata-delete:

trove metadata-delete
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-delete <instance_id> <key>

Deletes metadata for instance <id>.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

``<key>``
  Metadata key to delete.

.. _trove_metadata-edit:

trove metadata-edit
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-edit <instance_id> <key> <value>

Replaces metadata value with a new one, this is non-destructive.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

``<key>``
  Key to replace.

``<value>``
  New value to assign to <key>.

.. _trove_metadata-list:

trove metadata-list
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-list <instance_id>

Shows all metadata for instance <id>.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

.. _trove_metadata-show:

trove metadata-show
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-show <instance_id> <key>

Shows metadata entry for key <key> and instance <id>.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

``<key>``
  Key to display.

.. _trove_metadata-update:

trove metadata-update
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove metadata-update <instance_id> <key> <newkey> <value>

Updates metadata, this is destructive.

Positional arguments
--------------------

``<instance_id>``
  UUID for instance.

``<key>``
  Key to update.

``<newkey>``
  New key.

``<value>``
  Value to assign to <newkey>.

.. _trove_promote-to-replica-source:

trove promote-to-replica-source
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove promote-to-replica-source <instance>

Promotes a replica to be the new replica source of its set.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_resize-instance:

trove resize-instance
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove resize-instance <instance> <flavor>

Resizes an instance with a new flavor.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<flavor>``
  New flavor of the instance.

.. _trove_resize-volume:

trove resize-volume
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove resize-volume <instance> <size>

Resizes the volume size of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<size>``
  New size of the instance disk volume in GB.

.. _trove_restart:

trove restart
~~~~~~~~~~~~~

.. code-block:: console

   usage: trove restart <instance>

Restarts an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_root-enable:

trove root-enable
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove root-enable <instance_or_cluster>
                            [--root_password <root_password>]

Enables root for an instance and resets if already exists.

Positional arguments
--------------------

``<instance_or_cluster>``
  ID or name of the instance or cluster.

Optional arguments
------------------

``--root_password <root_password>``
  Root password to set.

.. _trove_root-show:

trove root-show
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove root-show <instance_or_cluster>

Gets status if root was ever enabled for an instance or cluster.

Positional arguments
--------------------

``<instance_or_cluster>``
  ID or name of the instance or cluster.

.. _trove_secgroup-add-rule:

trove secgroup-add-rule
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-add-rule <security_group> <cidr>

Creates a security group rule.

Positional arguments
--------------------

``<security_group>``
  Security group ID.

``<cidr>``
  CIDR address.

.. _trove_secgroup-delete-rule:

trove secgroup-delete-rule
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-delete-rule <security_group_rule>

Deletes a security group rule.

Positional arguments
--------------------

``<security_group_rule>``
  Name of security group rule.

.. _trove_secgroup-list:

trove secgroup-list
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-list

Lists all security groups.

.. _trove_secgroup-list-rules:

trove secgroup-list-rules
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-list-rules <security_group>

Lists all rules for a security group.

Positional arguments
--------------------

``<security_group>``
  Security group ID.

.. _trove_secgroup-show:

trove secgroup-show
~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove secgroup-show <security_group>

Shows details of a security group.

Positional arguments
--------------------

``<security_group>``
  Security group ID.

.. _trove_show:

trove show
~~~~~~~~~~

.. code-block:: console

   usage: trove show <instance>

Shows details of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_update:

trove update
~~~~~~~~~~~~

.. code-block:: console

   usage: trove update <instance>
                       [--name <name>] [--configuration <configuration>]
                       [--detach-replica-source] [--remove_configuration]

Updates an instance: Edits name, configuration, or replica source.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

Optional arguments
------------------

``--name <name>``
  Name of the instance.

``--configuration <configuration>``
  ID of the configuration reference to attach.

``--detach-replica-source``
  Detach the replica instance from its
  replication source.

``--remove_configuration``
  Drops the current configuration reference.

.. _trove_user-create:

trove user-create
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-create <instance> <name> <password>
                            [--host <host>]
                            [--databases <databases> [<databases> ...]]

Creates a user on an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

``<password>``
  Password of user.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

``--databases <databases> [<databases> ...]``
  Optional list of databases.

.. _trove_user-delete:

trove user-delete
~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-delete [--host <host>] <instance> <name>

Deletes a user from an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

.. _trove_user-grant-access:

trove user-grant-access
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-grant-access <instance> <name> <databases> [<databases> ...]
                                  [--host <host>]

Grants access to a database(s) for a user.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

``<databases>``
  List of databases.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

.. _trove_user-list:

trove user-list
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-list <instance>

Lists the users for an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

.. _trove_user-revoke-access:

trove user-revoke-access
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-revoke-access [--host <host>] <instance> <name> <database>

Revokes access to a database for a user.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

``<database>``
  A single database.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

.. _trove_user-show:

trove user-show
~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-show [--host <host>] <instance> <name>

Shows details of a user of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

.. _trove_user-show-access:

trove user-show-access
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-show-access [--host <host>] <instance> <name>

Shows access details of a user of an instance.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

.. _trove_user-update-attributes:

trove user-update-attributes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: console

   usage: trove user-update-attributes <instance> <name>
                                       [--host <host>] [--new_name <new_name>]
                                       [--new_password <new_password>]
                                       [--new_host <new_host>]

Updates a user's attributes on an instance. At least one optional argument
must be provided.

Positional arguments
--------------------

``<instance>``
  ID or name of the instance.

``<name>``
  Name of user.

Optional arguments
------------------

``--host <host>``
  Optional host of user.

``--new_name <new_name>``
  Optional new name of user.

``--new_password <new_password>``
  Optional new password of user.

``--new_host <new_host>``
  Optional new host of user.

