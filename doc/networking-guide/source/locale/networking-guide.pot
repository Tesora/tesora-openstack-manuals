# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, OpenStack contributors
# This file is distributed under the same license as the Networking Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Networking Guide 0.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-19 06:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../adv_config.rst:3
msgid "Advanced configuration"
msgstr ""

# #-#-#-#-#  adv_config_FwaaS.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_ipv6.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_FwaaS.rst:3 ../adv_config_ipv6.rst:399
msgid "FWaaS"
msgstr ""

#: ../adv_config_FwaaS.rst:5
msgid "See the following URL:"
msgstr ""

#: ../adv_config_FwaaS.rst:7
msgid ""
"http://docs.openstack.org/admin-guide-cloud/networking_introduction."
"html#firewall-as-a-service-fwaas-overview"
msgstr ""

# #-#-#-#-#  adv_config_ipv6.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_LBaaS.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_LBaaS.rst:3 ../adv_config_ipv6.rst:394
msgid "LBaaS"
msgstr ""

#: ../adv_config_LBaaS.rst:5
msgid "See the following URLs:"
msgstr ""

#: ../adv_config_LBaaS.rst:7
msgid ""
"http://docs.openstack.org/admin-guide-cloud/networking_introduction."
"html#load-balancer-as-a-service-lbaas-overview"
msgstr ""

#: ../adv_config_LBaaS.rst:9
msgid ""
"http://docs.openstack.org/admin-guide-cloud/networking_config-agents."
"html#configure-load-balancer-as-a-service-lbaas"
msgstr ""

#: ../adv_config_LBaaS.rst:11
msgid ""
"http://docs.openstack.org/admin-guide-cloud/networking_adv-features."
"html#basic-load-balancer-as-a-service-operations"
msgstr ""

# #-#-#-#-#  adv_config_ipv6.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_VPNaaS.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_VPNaaS.rst:3 ../adv_config_ipv6.rst:381
#: ../intro_os_networking_service.rst:69
msgid "VPNaaS"
msgstr ""

# #-#-#-#-#  adv_config_group_policy.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_operational.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_service_chaining.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_VPNaaS.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  migration_legacy_to_dvr.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_VPNaaS.rst:5 ../adv_config_group_policy.rst:5
#: ../adv_config_group_policy.rst:12 ../adv_config_operational.rst:5
#: ../adv_config_service_chaining.rst:7 ../migration_legacy_to_dvr.rst:5
msgid "TBD"
msgstr ""

#: ../adv_config_debugging.rst:3
msgid "Debugging"
msgstr ""

#: ../adv_config_debugging.rst:5
msgid ""
"The OpenStack Networking service offers many degrees of freedom because of "
"the pluggable back end that supports a variety of open source and vendor "
"(proprietary) plug-ins. The open source plug-ins generally implement native "
"Linux facilities such as Open vSwitch (OVS) and Linux bridge. This section "
"provides methods to troubleshoot and mitigate network issues for "
"environments using the open source ML2 plug-in with the OVS or Linux bridge "
"agent."
msgstr ""

#: ../adv_config_debugging.rst:14 ../adv_config_debugging.rst:29
msgid "Neutron-debug command line tools"
msgstr ""

#: ../adv_config_debugging.rst:16
msgid ""
"Network troubleshooting can unfortunately be a very difficult and confusing "
"procedure. A network issue can cause a problem at several points in the "
"cloud. Using a logical troubleshooting procedure can help mitigate the "
"confusion and quickly isolate the network issue."
msgstr ""

#: ../adv_config_debugging.rst:21
msgid ""
"Some of the following sections reference these popular tools to understand "
"both network configuration and traffic patterns:"
msgstr ""

#: ../adv_config_debugging.rst:24
msgid "iproute2"
msgstr ""

#: ../adv_config_debugging.rst:25
msgid "tcpdump"
msgstr ""

#: ../adv_config_debugging.rst:26
msgid "iptables"
msgstr ""

#: ../adv_config_debugging.rst:31 ../adv_config_debugging.rst:36
#: ../adv_config_debugging.rst:41 ../adv_config_debugging.rst:46
#: ../adv_config_debugging.rst:51 ../adv_config_debugging.rst:56
msgid "Subsection ..."
msgstr ""

#: ../adv_config_debugging.rst:34
msgid "Network configuration in the database"
msgstr ""

#: ../adv_config_debugging.rst:39
msgid "Debugging DHCP Issues"
msgstr ""

#: ../adv_config_debugging.rst:44
msgid "Debugging DNS Issues"
msgstr ""

#: ../adv_config_debugging.rst:49
msgid "Network namespaces configuration"
msgstr ""

#: ../adv_config_debugging.rst:54
msgid "Summary"
msgstr ""

#: ../adv_config_group_policy.rst:3
msgid "Group policy"
msgstr ""

#: ../adv_config_group_policy.rst:9
msgid "How it differs from legacy neutron data model"
msgstr ""

#: ../adv_config_ipam.rst:3
msgid "IPAM configuration"
msgstr ""

#: ../adv_config_ipam.rst:5
msgid ""
"Starting with the Liberty release, OpenStack Networking includes a pluggable "
"interface for the IP Address Management (IPAM) function. This interface "
"creates a driver framework for the allocation and de-allocation of subnets "
"and IP addresses, enabling the integration of alternate IPAM implementations "
"or third-party IP Address Management systems."
msgstr ""

# #-#-#-#-#  adv_config_ipam.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_ipv6.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_qos.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_sriov.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_ipam.rst:12 ../adv_config_ipv6.rst:12
#: ../adv_config_qos.rst:23 ../adv_config_sriov.rst:11
msgid "The basics"
msgstr ""

#: ../adv_config_ipam.rst:14
msgid ""
"The IPAM implementation within OpenStack Networking provides two basic "
"flavors (pluggable IPAM, non-pluggable IPAM). By default, the non-pluggable "
"IPAM is enabled. This provides backward compatibility with older releases. "
"In contrast, the pluggable implementation will require a database migration "
"to support upgraded systems. This migration is planned for the Mitaka "
"release."
msgstr ""

#: ../adv_config_ipam.rst:20
msgid ""
"The reference driver for the pluggable implementation is considered "
"experimental at this time. It does not provide additional functionality "
"beyond the non-pluggable implementation, but does provide a basis for custom "
"or third-party developed drivers. This can enable, for example, development "
"of drivers that use different algorithms to allocate an IP address."
msgstr ""

#: ../adv_config_ipam.rst:26
msgid ""
"To enable the pluggable implementation, you must specify the driver to use "
"in the ``neutron.conf`` file. The ``internal`` driver refers to the "
"reference implementation."
msgstr ""

#: ../adv_config_ipam.rst:34
msgid ""
"The documentation for any alternate drivers will include the value to use "
"when specifying that driver."
msgstr ""

# #-#-#-#-#  adv_config_ipam.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_sriov.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_ipam.rst:38 ../adv_config_sriov.rst:62
msgid "Known limitations"
msgstr ""

#: ../adv_config_ipam.rst:40
msgid ""
"The driver interface is designed to allow separate drivers for each subnet "
"pool. However, the current implementation allows only a single IPAM driver "
"system-wide."
msgstr ""

#: ../adv_config_ipam.rst:43
msgid ""
"Database migrations are not available to convert existing OpenStack "
"installations to the new reference implementation of the pluggable IPAM. "
"This migration is planned for the Mitaka release."
msgstr ""

#: ../adv_config_ipam.rst:46
msgid ""
"Third-party drivers must provide their own migration mechanisms to convert "
"existing OpenStack installations to their IPAM."
msgstr ""

#: ../adv_config_ipv6.rst:3
msgid "Using OpenStack Networking with IPv6"
msgstr ""

#: ../adv_config_ipv6.rst:5
msgid ""
"The purpose of this page is to describe how the features and functionality "
"available in OpenStack (using neutron networking) as of the Kilo release. It "
"is intended to serve as a guide for how to deploy IPv6-enabled instances "
"using OpenStack Networking. Where appropriate, features planned for Liberty "
"or beyond may be described."
msgstr ""

#: ../adv_config_ipv6.rst:14
msgid ""
"OpenStack Networking has supported IPv6 tenant subnets in certain "
"configurations since Juno, but later releases added a number of new "
"features, functionality and bug fixes to make it more robust. The focus of "
"this page will be:"
msgstr ""

#: ../adv_config_ipv6.rst:19
msgid "How to enable dual-stack (IPv4 and IPv6 enabled) instances."
msgstr ""

#: ../adv_config_ipv6.rst:20
msgid "How those instances receive an IPv6 address."
msgstr ""

#: ../adv_config_ipv6.rst:21
msgid ""
"How those instances communicate across a router to other subnets or the "
"internet."
msgstr ""

#: ../adv_config_ipv6.rst:23
msgid "How those instances interact with other OpenStack services."
msgstr ""

#: ../adv_config_ipv6.rst:25
msgid ""
"To enable a dual-stack network in OpenStack Networking simply requires "
"creating a subnet with the ``ip_version`` field set to ``6``, then the IPv6 "
"attributes (``ipv6_ra_mode`` and ``ipv6_address_mode``) set.  The "
"``ipv6_ra_mode`` and ``ipv6_address_mode`` will be described in detail in "
"the next section. Finally, the subnets ``cidr`` needs to be provided."
msgstr ""

#: ../adv_config_ipv6.rst:32
msgid "Not in scope"
msgstr ""

#: ../adv_config_ipv6.rst:34
msgid "Things not in the scope of this document include:"
msgstr ""

#: ../adv_config_ipv6.rst:36
msgid "Single stack IPv6 tenant networking"
msgstr ""

#: ../adv_config_ipv6.rst:37
msgid ""
"OpenStack control communication between servers and services over an IPv6 "
"network."
msgstr ""

#: ../adv_config_ipv6.rst:39
msgid "Connection to the OpenStack APIs via an IPv6 transport network"
msgstr ""

#: ../adv_config_ipv6.rst:40
msgid "IPv6 multicast"
msgstr ""

#: ../adv_config_ipv6.rst:41
msgid ""
"IPv6 support in conjunction with any out of tree routers, switches, services "
"or agents whether in physical or virtual form factors."
msgstr ""

#: ../adv_config_ipv6.rst:46
msgid "Neutron subnets and the IPv6 API attributes"
msgstr ""

#: ../adv_config_ipv6.rst:48
msgid ""
"As of Juno, the OpenStack Networking service (neutron) provides two new "
"attributes to the subnet object, which allows users of the API to configure "
"IPv6 subnets."
msgstr ""

#: ../adv_config_ipv6.rst:52
msgid "There are two IPv6 attributes:"
msgstr ""

#: ../adv_config_ipv6.rst:54
msgid "``ipv6_ra_mode``"
msgstr ""

#: ../adv_config_ipv6.rst:55
msgid "``ipv6_address_mode``"
msgstr ""

#: ../adv_config_ipv6.rst:57
msgid "These attributes can be set to the following values:"
msgstr ""

#: ../adv_config_ipv6.rst:59
msgid "``slaac``"
msgstr ""

#: ../adv_config_ipv6.rst:60
msgid "``dhcpv6-stateful``"
msgstr ""

#: ../adv_config_ipv6.rst:61
msgid "``dhcpv6-stateless``"
msgstr ""

#: ../adv_config_ipv6.rst:63
msgid "The attributes can also be left unset."
msgstr ""

#: ../adv_config_ipv6.rst:67
msgid "IPv6 addressing"
msgstr ""

#: ../adv_config_ipv6.rst:69
msgid ""
"The ``ipv6_address_mode`` attribute is used to control how addressing is "
"handled by OpenStack. There are a number of different ways that guest "
"instances can obtain an IPv6 address, and this attribute exposes these "
"choices to users of the Networking API."
msgstr ""

#: ../adv_config_ipv6.rst:76
msgid "Router advertisements"
msgstr ""

#: ../adv_config_ipv6.rst:78
msgid ""
"The ``ipv6_ra_mode`` attribute is used to control router advertisements for "
"a subnet."
msgstr ""

#: ../adv_config_ipv6.rst:81
msgid ""
"The IPv6 Protocol uses Internet Control Message Protocol packets (ICMPv6) as "
"a way to distribute information about networking. ICMPv6 packets with the "
"type flag set to 134 are called \"Router Advertisement\" packets, which "
"broadcasts information about the router and the route that can be used by "
"guest instances to send network traffic."
msgstr ""

#: ../adv_config_ipv6.rst:88
msgid ""
"The ``ipv6_ra_mode`` is used to specify if the Networking service should "
"transmit ICMPv6 packets, for a subnet."
msgstr ""

#: ../adv_config_ipv6.rst:93
msgid "ipv6_ra_mode and ipv6_address_mode combinations"
msgstr ""

#: ../adv_config_ipv6.rst:99
msgid "ipv6 ra mode"
msgstr ""

#: ../adv_config_ipv6.rst:100
msgid "ipv6 address mode"
msgstr ""

#: ../adv_config_ipv6.rst:101
msgid "radvd A,M,O"
msgstr ""

#: ../adv_config_ipv6.rst:102
msgid "External Router A,M,O"
msgstr ""

#: ../adv_config_ipv6.rst:103
msgid "Description"
msgstr ""

#: ../adv_config_ipv6.rst:104 ../adv_config_ipv6.rst:105
#: ../adv_config_ipv6.rst:109 ../adv_config_ipv6.rst:114
#: ../adv_config_ipv6.rst:119 ../adv_config_ipv6.rst:125
#: ../adv_config_ipv6.rst:130 ../adv_config_ipv6.rst:135
msgid "*N/S*"
msgstr ""

#: ../adv_config_ipv6.rst:106 ../adv_config_ipv6.rst:111
#: ../adv_config_ipv6.rst:116 ../adv_config_ipv6.rst:121
#: ../adv_config_ipv6.rst:127 ../adv_config_ipv6.rst:132
#: ../adv_config_ipv6.rst:137 ../adv_config_ipv6.rst:142
#: ../adv_config_ipv6.rst:147 ../adv_config_ipv6.rst:153
msgid "Off"
msgstr ""

#: ../adv_config_ipv6.rst:107
msgid "Not Defined"
msgstr ""

#: ../adv_config_ipv6.rst:108
msgid "Backwards compatibility with pre-Juno IPv6 behavior."
msgstr ""

#: ../adv_config_ipv6.rst:110 ../adv_config_ipv6.rst:124
#: ../adv_config_ipv6.rst:139 ../adv_config_ipv6.rst:140
#: ../adv_config_ipv6.rst:157 ../adv_config_ipv6.rst:162
#: ../adv_config_ipv6.rst:168 ../adv_config_ipv6.rst:178
msgid "slaac"
msgstr ""

#: ../adv_config_ipv6.rst:112 ../adv_config_ipv6.rst:126
#: ../adv_config_ipv6.rst:141
msgid "1,0,0"
msgstr ""

#: ../adv_config_ipv6.rst:113
msgid ""
"Guest instance obtains IPv6 address from non-OpenStack router using SLAAC."
msgstr ""

#: ../adv_config_ipv6.rst:115 ../adv_config_ipv6.rst:129
#: ../adv_config_ipv6.rst:144 ../adv_config_ipv6.rst:145
#: ../adv_config_ipv6.rst:158 ../adv_config_ipv6.rst:167
#: ../adv_config_ipv6.rst:172 ../adv_config_ipv6.rst:183
msgid "dhcpv6-stateful"
msgstr ""

#: ../adv_config_ipv6.rst:117 ../adv_config_ipv6.rst:131
#: ../adv_config_ipv6.rst:146
msgid "0,1,1"
msgstr ""

#: ../adv_config_ipv6.rst:118 ../adv_config_ipv6.rst:123
#: ../adv_config_ipv6.rst:128 ../adv_config_ipv6.rst:133
#: ../adv_config_ipv6.rst:138
msgid "Not currently implemented in the reference implementation."
msgstr ""

#: ../adv_config_ipv6.rst:120 ../adv_config_ipv6.rst:134
#: ../adv_config_ipv6.rst:150 ../adv_config_ipv6.rst:151
#: ../adv_config_ipv6.rst:163 ../adv_config_ipv6.rst:173
#: ../adv_config_ipv6.rst:177 ../adv_config_ipv6.rst:182
msgid "dhcpv6-stateless"
msgstr ""

#: ../adv_config_ipv6.rst:122 ../adv_config_ipv6.rst:136
#: ../adv_config_ipv6.rst:152
msgid "1,0,1"
msgstr ""

#: ../adv_config_ipv6.rst:143
msgid ""
"Guest instance obtains IPv6 address from OpenStack managed radvd using SLAAC."
msgstr ""

#: ../adv_config_ipv6.rst:148
msgid ""
"Guest instance obtains IPv6 address from dnsmasq using DHCPv6 stateful and "
"optional info from dnsmasq using DHCPv6."
msgstr ""

#: ../adv_config_ipv6.rst:154
msgid ""
"Guest instance obtains IPv6 address from OpenStack managed radvd using SLAAC "
"and optional info from dnsmasq using DHCPv6."
msgstr ""

#: ../adv_config_ipv6.rst:161 ../adv_config_ipv6.rst:166
#: ../adv_config_ipv6.rst:171 ../adv_config_ipv6.rst:176
#: ../adv_config_ipv6.rst:181 ../adv_config_ipv6.rst:186
msgid "*Invalid combination.*"
msgstr ""

#: ../adv_config_ipv6.rst:189
msgid "Tenant network considerations"
msgstr ""

#: ../adv_config_ipv6.rst:193
msgid "Dataplane"
msgstr ""

#: ../adv_config_ipv6.rst:195
msgid ""
"Both the Linux bridge and the Open vSwitch dataplane modules support "
"forwarding IPv6 packets amongst the guests and router ports. Similar to "
"IPv4, there is no special configuration or setup required to enable the "
"dataplane to properly forward packets from the source to the destination "
"using IPv6. Note that these dataplanes will forward Link-local Address (LLA) "
"packets between hosts on the same network just fine without any "
"participation or setup by OpenStack components after the ports are all "
"connected and MAC addresses learned."
msgstr ""

#: ../adv_config_ipv6.rst:205
msgid "Addresses for subnets"
msgstr ""

#: ../adv_config_ipv6.rst:207
msgid "There are four methods for a subnet to get its ``cidr`` in OpenStack:"
msgstr ""

#: ../adv_config_ipv6.rst:209
msgid "Direct assignment during subnet creation via command line or Horizon"
msgstr ""

#: ../adv_config_ipv6.rst:210
msgid "Referencing a subnet pool during subnet creation"
msgstr ""

#: ../adv_config_ipv6.rst:212
msgid ""
"In the future, different techniques could be used to allocate subnets to "
"tenants:"
msgstr ""

#: ../adv_config_ipv6.rst:215
msgid "Using a PD client to request a prefix for a subnet from a PD server"
msgstr ""

#: ../adv_config_ipv6.rst:216
msgid "Use of an external IPAM module to allocate the subnet"
msgstr ""

#: ../adv_config_ipv6.rst:219
msgid "Address modes for ports"
msgstr ""

#: ../adv_config_ipv6.rst:221
msgid ""
"That an external DHCPv6 server in theory could override the full address "
"OpenStack assigns based on the EUI-64 address, but that would not be wise as "
"it would not be consistent through the system."
msgstr ""

#: ../adv_config_ipv6.rst:225
msgid ""
"IPv6 supports three different addressing schemes for address configuration "
"and for providing optional network information."
msgstr ""

#: ../adv_config_ipv6.rst:229
msgid "Address configuration using Router Advertisement (RA)."
msgstr ""

#: ../adv_config_ipv6.rst:229
msgid "Stateless Address Auto Configuration (SLAAC)"
msgstr ""

#: ../adv_config_ipv6.rst:232
msgid "Address configuration using RA and optional information using DHCPv6."
msgstr ""

#: ../adv_config_ipv6.rst:233 ../adv_config_ipv6.rst:306
#: ../adv_config_ipv6.rst:307
msgid "DHCPv6-stateless"
msgstr ""

#: ../adv_config_ipv6.rst:236
msgid "Address configuration and optional information using DHCPv6."
msgstr ""

#: ../adv_config_ipv6.rst:236 ../adv_config_ipv6.rst:310
#: ../adv_config_ipv6.rst:311
msgid "DHCPv6-stateful"
msgstr ""

#: ../adv_config_ipv6.rst:238
msgid ""
"OpenStack can be setup such that OpenStack Networking directly provides RA, "
"DHCP relay and DHCPv6 address and optional information for their networks or "
"this can be delegated to external routers and services based on the drivers "
"that are in use. There are two neutron subnet attributes - ``ipv6_ra_mode`` "
"and ``ipv6_address_mode`` – that determine how IPv6 addressing and network "
"information is provided to tenant instances:"
msgstr ""

#: ../adv_config_ipv6.rst:246
msgid "``ipv6_ra_mode``: Determines who sends RA."
msgstr ""

#: ../adv_config_ipv6.rst:247
msgid ""
"``ipv6_address_mode``: Determines how instances obtain IPv6 address, default "
"gateway, or optional information."
msgstr ""

#: ../adv_config_ipv6.rst:250
msgid ""
"For the above two attributes to be effective, ``enable_dhcp`` must be set to "
"True in file :file:`neutron.conf`."
msgstr ""

#: ../adv_config_ipv6.rst:254
msgid "Using SLAAC for addressing"
msgstr ""

#: ../adv_config_ipv6.rst:256
msgid ""
"When using SLAAC, the currently supported combinations for ``ipv6_ra_mode`` "
"and ``ipv6_address_mode`` are as follows."
msgstr ""

#: ../adv_config_ipv6.rst:263 ../adv_config_ipv6.rst:303
msgid "ipv6_ra_mode"
msgstr ""

#: ../adv_config_ipv6.rst:264 ../adv_config_ipv6.rst:304
msgid "ipv6_address_mode"
msgstr ""

#: ../adv_config_ipv6.rst:265 ../adv_config_ipv6.rst:305
msgid "Result"
msgstr ""

#: ../adv_config_ipv6.rst:266
msgid "Not specified."
msgstr ""

#: ../adv_config_ipv6.rst:267 ../adv_config_ipv6.rst:270
#: ../adv_config_ipv6.rst:271
msgid "SLAAC"
msgstr ""

#: ../adv_config_ipv6.rst:268
msgid ""
"Addresses are assigned using EUI-64, and an external router will be used for "
"routing."
msgstr ""

#: ../adv_config_ipv6.rst:272
msgid ""
"Address are assigned using EUI-64, and OpenStack Networking provides routing."
msgstr ""

#: ../adv_config_ipv6.rst:275
msgid ""
"Setting ``ipv6_ra_mode`` to ``slaac`` will result in OpenStack Networking "
"routers being configured to send RA packets, when they are created. This "
"results in the following values set for the address configuration flags in "
"the RA messages:"
msgstr ""

#: ../adv_config_ipv6.rst:280
msgid "Auto Configuration Flag = 1 Managed"
msgstr ""

#: ../adv_config_ipv6.rst:281
msgid "Configuration Flag = 0"
msgstr ""

#: ../adv_config_ipv6.rst:282
msgid "Other Configuration Flag = 0 New or existing"
msgstr ""

#: ../adv_config_ipv6.rst:284
msgid ""
"Neutron networks that contain a SLAAC enabled IPv6 subnet will result in all "
"neutron ports attached to the network receiving IPv6 addresses. This is "
"because when RA broadcast messages are sent out on a neutron network, they "
"are received by all IPv6 capable ports on the network, and each port will "
"then configure an IPv6 address based on the information contained in the RA "
"packet. In some cases, an IPv6 SLAAC address will be added to a port, in "
"addition to other IPv4 and IPv6 addresses that the port already has been "
"assigned."
msgstr ""

#: ../adv_config_ipv6.rst:294
msgid "DHCPv6"
msgstr ""

#: ../adv_config_ipv6.rst:296
msgid ""
"For DHCPv6-stateless, the currently supported combinations are as follows:"
msgstr ""

#: ../adv_config_ipv6.rst:308
msgid ""
"Address and optional information using neutron router and DHCP "
"implementation respectively."
msgstr ""

#: ../adv_config_ipv6.rst:312
msgid "Addresses and optional information are assigned using DHCPv6."
msgstr ""

#: ../adv_config_ipv6.rst:314
msgid ""
"Setting DHCPv6-stateless for ``ipv6_ra_mode`` configures the neutron router "
"with radvd agent to send RAs. The table below captures the values set for "
"the address configuration flags in the RA packet in this scenario. "
"Similarly, setting DHCPv6-stateless for ``ipv6_address_mode`` configures "
"neutron DHCP implementation to provide the additional network information."
msgstr ""

#: ../adv_config_ipv6.rst:321
msgid "Auto Configuration Flag = 1"
msgstr ""

#: ../adv_config_ipv6.rst:322
msgid "Managed Configuration Flag = 0"
msgstr ""

#: ../adv_config_ipv6.rst:323
msgid "Other Configuration Flag = 1"
msgstr ""

#: ../adv_config_ipv6.rst:326
msgid "Router support"
msgstr ""

#: ../adv_config_ipv6.rst:328
msgid ""
"The behavior of the neutron router for IPv6 is different than IPv4 in a few "
"ways."
msgstr ""

#: ../adv_config_ipv6.rst:331
msgid ""
"Internal router ports, that act as default gateway ports for a network, will "
"share a common port for all IPv6 subnets associated with the network. This "
"implies that there will be an IPv6 internal router interface with multiple "
"IPv6 addresses from each of the IPv6 subnets associated with the network and "
"a separate IPv4 internal router interface for the IPv4 subnet. On the other "
"hand, external router ports are allowed to have a dual-stack configuration "
"with both an IPv4 and an IPv6 address assigned to them."
msgstr ""

#: ../adv_config_ipv6.rst:339
msgid ""
"Neutron tenant networks that are assigned Global Unicast Address (GUA) "
"prefixes and addresses don’t require NAT on the neutron router external "
"gateway port to access the outside world. As a consequence of the lack of "
"NAT the external router port doesn’t require a GUA to send and receive to "
"the external networks. This implies a GUA IPv6 subnet prefix is not "
"necessarily needed for the neutron external network. By default, a IPv6 LLA "
"associated with the external gateway port can be used for routing purposes. "
"To handle this scenario, the implementation of router-gateway-set API in "
"neutron has been modified so that an IPv6 subnet is not required for the "
"external network that is associated with the neutron router. The LLA address "
"of the upstream router can be learned in two ways."
msgstr ""

#: ../adv_config_ipv6.rst:351
msgid ""
"In the absence of an upstream RA support, ``ipv6_gateway`` flag can be set "
"with the external router gateway LLA in the neutron L3 agent configuration "
"file. This also requires that no subnet is associated with that port."
msgstr ""

#: ../adv_config_ipv6.rst:354
msgid ""
"The upstream router can send an RA and the neutron router will automatically "
"learn the next-hop LLA, provided again that no subnet is assigned and the "
"``ipv6_gateway`` flag is not set."
msgstr ""

#: ../adv_config_ipv6.rst:358
msgid ""
"Effectively the ``ipv6_gateway`` flag takes precedence over an RA that is "
"received from the upstream router. If it is desired to use a GUA next hop "
"that is accomplished by allocating a subnet to the external router port and "
"assigning the upstream routers GUA address as the gateway for the subnet."
msgstr ""

#: ../adv_config_ipv6.rst:364
msgid ""
"That it should be possible for tenants to communicate with each other on an "
"isolated network (a network without a router port) using LLA with little to "
"no participation on the part of OpenStack. The authors of this section have "
"not proven that to be true for all scenarios."
msgstr ""

#: ../adv_config_ipv6.rst:370
msgid "Neutron's Distributed Router feature and IPv6"
msgstr ""

#: ../adv_config_ipv6.rst:372
msgid ""
"IPv6 does work when the Distributed Virtual Router functionality is enabled, "
"but all ingress/egress traffic is via the centralized router (hence, not "
"distributed). More work is required to fully enable this functionality."
msgstr ""

#: ../adv_config_ipv6.rst:378
msgid "Advanced services"
msgstr ""

#: ../adv_config_ipv6.rst:383
msgid ""
"VPNaaS supports IPv6, but support in Kilo and prior releases will have some "
"bugs that may limit how it can be used. More thorough and complete testing "
"and bug fixing is being done as part of the Liberty release. IPv6-based VPN-"
"as-a-Service is configured similar to the IPv4 configuration. Either or both "
"the ``peer_address`` and the ``peer_cidr`` can specified as an IPv6 address. "
"The choice of addressing modes and router modes described above should not "
"impact support."
msgstr ""

#: ../adv_config_ipv6.rst:396
msgid "TODO"
msgstr ""

#: ../adv_config_ipv6.rst:401
msgid "FWaaS allows creation of IPv6 based rules."
msgstr ""

#: ../adv_config_ipv6.rst:404
msgid "NAT & Floating IPs"
msgstr ""

#: ../adv_config_ipv6.rst:406
msgid ""
"At the current time OpenStack Networking does not provide any facility to "
"support any flavor of NAT with IPv6. Unlike IPv4 there is no current "
"embedded support for floating IPs with IPv6. It is assumed that the IPv6 "
"addressing amongst the tenants are using GUAs with no overlap across the "
"tenants."
msgstr ""

#: ../adv_config_ipv6.rst:413
msgid "Security considerations"
msgstr ""

#: ../adv_config_ipv6.rst:419
msgid "Configuring interfaces of the guest"
msgstr ""

#: ../adv_config_ipv6.rst:421
msgid ""
"OpenStack currently doesn't support the privacy extensions defined by RFC "
"4941. The interface identifier and DUID used must be directly derived from "
"the MAC as described in RFC 2373. The compute hosts must not be setup to "
"utilize the privacy extensions when generating their interface identifier."
msgstr ""

#: ../adv_config_ipv6.rst:426
msgid ""
"There is no provisions for an IPv6-based metadata service similar to what is "
"provided for IPv4. In the case of dual stack Guests though it is always "
"possible to use the IPv4 metadata service instead."
msgstr ""

#: ../adv_config_ipv6.rst:430
msgid ""
"Unlike IPv4 the MTU of a given network can be conveyed in the RA messages "
"sent by the router and not in the DHCP messages. In Kilo the MTU sent by "
"RADVD is always 1500, but in Liberty changes are planned to allow the RA to "
"send the proper MTU of the network."
msgstr ""

#: ../adv_config_ipv6.rst:436
msgid "OpenStack control & management network considerations"
msgstr ""

#: ../adv_config_ipv6.rst:438
msgid ""
"As of the Kilo release, considerable effort has gone in to ensuring the "
"tenant network can handle dual stack IPv6 and IPv4 transport across the "
"variety of configurations describe above. This same level of scrutiny has "
"not been apply to running the OpenStack control network in a dual stack "
"configuration. Similarly, little scrutiny has gone into ensuring that the "
"OpenStack API endpoints can be accessed via an IPv6 network. At this time, "
"Open vSwitch (OVS) tunnel types - STT, VXLAN, GRE, only support IPv4 "
"endpoints, not IPv6, so a full IPv6-only deployment is not possible with "
"that technology."
msgstr ""

#: ../adv_config_ipv6.rst:450
msgid "Prefix delegation"
msgstr ""

#: ../adv_config_ipv6.rst:452
msgid ""
"From the Liberty release onwards, OpenStack Networking supports IPv6 prefix "
"delegation. This section describes the configuration and workflow steps "
"necessary to use IPv6 prefix delegation to provide automatic allocation of "
"subnet CIDRs. This allows you as the OpenStack administrator to rely on an "
"external (to the OpenStack Networking service) DHCPv6 server to manage your "
"tenant network prefixes."
msgstr ""

#: ../adv_config_ipv6.rst:460
msgid ""
"Prefix delegation became available in the Liberty release, it is not "
"available in the Kilo release. HA and DVR routers are not currently "
"supported by this feature."
msgstr ""

#: ../adv_config_ipv6.rst:465
msgid "Configuring OpenStack Networking for prefix delegation"
msgstr ""

#: ../adv_config_ipv6.rst:467
msgid ""
"To enable prefix delegation, edit the :file:`etc/neutron.conf` file. If you "
"are running OpenStack Liberty, make the following change::"
msgstr ""

#: ../adv_config_ipv6.rst:472
msgid "Otherwise if you are running OpenStack Mitaka, make this change::"
msgstr ""

#: ../adv_config_ipv6.rst:478
msgid ""
"If you are not using the default dibbler-based driver for prefix delegation, "
"then you also need to set the driver in :file:`etc/neutron.conf`::"
msgstr ""

#: ../adv_config_ipv6.rst:484
msgid ""
"Drivers other than the default one may require extra configuration, please "
"refer to :ref:`extra-driver-conf`"
msgstr ""

#: ../adv_config_ipv6.rst:487
msgid ""
"This tells OpenStack Networking to use the prefix delegation mechanism for "
"subnet allocation when the user does not provide a CIDR or subnet pool id "
"when creating a subnet."
msgstr ""

#: ../adv_config_ipv6.rst:492
msgid "Requirements"
msgstr ""

#: ../adv_config_ipv6.rst:494
msgid ""
"To use this feature, you need a prefix delegation capable DHCPv6 server that "
"is reachable from your OpenStack Networking node(s). This could be software "
"running on the OpenStack Networking node(s) or elsewhere, or a physical "
"router. For the purposes of this guide we are using the open-source DHCPv6 "
"server, Dibbler. Dibbler is available in many Linux package managers, or "
"from source at https://github.com/tomaszmrugalski/dibbler."
msgstr ""

#: ../adv_config_ipv6.rst:501
msgid ""
"When using the reference implementation of the OpenStack Networking prefix "
"delegation driver, Dibbler must also be installed on your OpenStack "
"Networking node(s) to serve as a DHCPv6 client. Version 1.0.1 or higher is "
"required."
msgstr ""

#: ../adv_config_ipv6.rst:505
msgid ""
"This guide assumes that you are running a Dibbler server on the network node "
"where the external network bridge exists. If you already have a prefix "
"delegation capable DHCPv6 server in place, then you can skip the following "
"section."
msgstr ""

#: ../adv_config_ipv6.rst:511
msgid "Configuring the Dibbler server"
msgstr ""

#: ../adv_config_ipv6.rst:513
msgid ""
"After installing Dibbler, edit the :file:`/etc/dibbler/server.conf` file:"
msgstr ""

#: ../adv_config_ipv6.rst:526
msgid "The options used in the configuration file above are:"
msgstr ""

#: ../adv_config_ipv6.rst:528
msgid ""
":code:`script`: Points to a script to be run when a prefix is delegated or "
"released. This is only needed if you want instances on your subnets to have "
"external network access. More on this below."
msgstr ""

#: ../adv_config_ipv6.rst:531
msgid ""
":code:`iface`: The name of the network interface on which to listen for "
"prefix delegation messages."
msgstr ""

#: ../adv_config_ipv6.rst:533
msgid ""
":code:`pd-pool`: The larger prefix from which you want your delegated "
"prefixes to come. The example given is sufficient if you do not need "
"external network access, otherwise a unique globally routable prefix is "
"necessary."
msgstr ""

#: ../adv_config_ipv6.rst:537
msgid ""
":code:`pd-length`: The length that delegated prefixes will be. This must be "
"64 to work with the current OpenStack Networking reference implementation."
msgstr ""

#: ../adv_config_ipv6.rst:540
msgid ""
"To provide external network access to your instances, your Dibbler server "
"also needs to create new routes for each delegated prefix. This is done "
"using the script file named in the config file above. Edit the :file:`/var/"
"lib/dibbler/pd-server.sh` file:"
msgstr ""

#: ../adv_config_ipv6.rst:556
msgid "The variables used in the script file above are:"
msgstr ""

#: ../adv_config_ipv6.rst:558
msgid ":code:`$PREFIX1`: The prefix being added/deleted by the Dibbler server."
msgstr ""

#: ../adv_config_ipv6.rst:559
msgid ":code:`$1`: The operation being performed."
msgstr ""

#: ../adv_config_ipv6.rst:560
msgid ":code:`$REMOTE_ADDR`: The IP address of the requesting Dibbler client."
msgstr ""

#: ../adv_config_ipv6.rst:561
msgid ""
":code:`$IFACE`: The network interface upon which the request was received."
msgstr ""

#: ../adv_config_ipv6.rst:564
msgid ""
"The above is all you need in this scenario, but more information on "
"installing, configuring, and running Dibbler is available in the Dibbler "
"user guide, at http://klub.com.pl/dhcpv6/doc/dibbler-user.pdf."
msgstr ""

#: ../adv_config_ipv6.rst:568
msgid "To start your Dibbler server, run::"
msgstr ""

#: ../adv_config_ipv6.rst:572
msgid "Or to run in headless mode::"
msgstr ""

#: ../adv_config_ipv6.rst:576
msgid ""
"When using DevStack, it is important to start your server after the :file:"
"`stack.sh` script has finished to ensure that the required network "
"interfaces have been created."
msgstr ""

# #-#-#-#-#  adv_config_ipv6.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  adv_config_qos.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_ipv6.rst:581 ../adv_config_qos.rst:99
msgid "User workflow"
msgstr ""

#: ../adv_config_ipv6.rst:583
msgid "First, create a network and IPv6 subnet:"
msgstr ""

#: ../adv_config_ipv6.rst:625
msgid ""
"The subnet is initially created with a temporary CIDR before one can be "
"assigned by prefix delegation. Any number of subnets with this temporary "
"CIDR can exist without raising an overlap error. The subnetpool_id is "
"automatically set to :code:`prefix_delegation`."
msgstr ""

#: ../adv_config_ipv6.rst:630
msgid ""
"To trigger the prefix delegation process, create a router interface between "
"this subnet and a router with an active interface on the external network:"
msgstr ""

#: ../adv_config_ipv6.rst:640
msgid ""
"The prefix delegation mechanism then sends a request via the external "
"network to your prefix delegation server, which replies with the delegated "
"prefix. The subnet is then updated with the new prefix, including issuing "
"new IP addresses to all ports:"
msgstr ""

#: ../adv_config_ipv6.rst:668
msgid ""
"If the prefix delegation server is configured to delegate globally routable "
"prefixes and setup routes, then any instance with a port on this subnet "
"should now have external network access."
msgstr ""

#: ../adv_config_ipv6.rst:672
msgid ""
"Deleting the router interface causes the subnet to be reverted to the "
"temporary CIDR, and all ports have their IPs updated. Prefix leases are "
"released and renewed automatically as necessary."
msgstr ""

#: ../adv_config_ipv6.rst:677
msgid "References"
msgstr ""

#: ../adv_config_ipv6.rst:679
msgid ""
"The following link provides a great step by step tutorial on setting up IPv6 "
"with OpenStack: http://www.debug-all.com/?p=52"
msgstr ""

#: ../adv_config_ipv6.rst:685
msgid "Extra configuration"
msgstr ""

#: ../adv_config_ipv6.rst:688
msgid "Neutron dhcpv6_pd_agent"
msgstr ""

#: ../adv_config_ipv6.rst:689
msgid ""
"To enable the driver for the dhcpv6_pd_agent, set pd_dhcp_driver to this in :"
"file:`etc/neutron.conf`::"
msgstr ""

#: ../adv_config_ipv6.rst:694
msgid ""
"To allow the neutron-pd-agent to communicate with prefix delegation servers, "
"you must set which network interface to use for external communication. In "
"DevStack the default for this is br-ex::"
msgstr ""

#: ../adv_config_ipv6.rst:700
msgid ""
"Once you have stacked run the command below to start the neutron-pd-agent::"
msgstr ""

#: ../adv_config_operational.rst:3
msgid "Operational"
msgstr ""

#: ../adv_config_operational.rst:8
msgid "Logging"
msgstr ""

#: ../adv_config_operational.rst:10
msgid ""
"http://docs.openstack.org/admin-guide-cloud/networking_adv-operational-"
"features.html#logging-settings"
msgstr ""

#: ../adv_config_qos.rst:3
msgid "Using OpenStack Networking with QoS"
msgstr ""

#: ../adv_config_qos.rst:5
msgid ""
"This page serves as a guide for how to use the \"Quality of Service\" (QoS) "
"functionality of OpenStack Networking."
msgstr ""

#: ../adv_config_qos.rst:8
msgid ""
"QoS is defined as the ability to guarantee certain network requirements like "
"bandwidth, latency, jitter, and reliability in order to satisfy a Service "
"Level Agreement (SLA) between an application provider and end users."
msgstr ""

#: ../adv_config_qos.rst:13
msgid ""
"Network devices such as switches and routers can mark traffic so that it is "
"handled with a higher priority to fulfill the QoS conditions agreed under "
"the SLA. In other cases, certain network traffic such as Voice over IP "
"(VoIP) and video streaming needs to be transmitted with minimal bandwidth "
"constraints. On a system without network QoS management, all traffic will be "
"transmitted in a \"best-effort\" manner making it impossible to guarantee "
"service delivery to customers."
msgstr ""

#: ../adv_config_qos.rst:25
msgid ""
"QoS is an advanced service plug-in. QoS is decoupled from the rest of the "
"Neutron code on multiple levels and it is available through the ml2 "
"extension driver."
msgstr ""

#: ../adv_config_qos.rst:29
msgid ""
"Details about the DB models, API extension, and use cases are out of the "
"scope of this guide but can be found in the `Neutron QoS specification "
"<http://specs.openstack.org/openstack/neutron-specs/specs/liberty/qos-api-"
"extension.html>`_."
msgstr ""

#: ../adv_config_qos.rst:35
msgid "Supported QoS rule types"
msgstr ""

#: ../adv_config_qos.rst:37
msgid ""
"Any plug-in or ml2 mechanism driver can claim support for some QoS rule "
"types by providing a plug-in/driver class property called "
"'supported_qos_rule_types' that returns a list of strings that correspond to "
"QoS rule types: `<https://github.com/openstack/neutron/blob/master/neutron/"
"services/qos/qos_consts.py>`"
msgstr ""

#: ../adv_config_qos.rst:43
msgid ""
"For the Liberty release only egress bandwidth limit rules are supported."
msgstr ""

#: ../adv_config_qos.rst:45
msgid ""
"In the most simple case, the property can be represented by a simple Python "
"list defined on the class."
msgstr ""

#: ../adv_config_qos.rst:48
msgid ""
"For an ml2 plug-in, the list of supported QoS rule types is defined as a "
"common subset of rules supported by all active mechanism drivers."
msgstr ""

#: ../adv_config_qos.rst:52
msgid ""
"The list of supported rule types reported by core plug-in is not enforced "
"when accessing QoS rule resources. This is mostly because then we would not "
"be able to create any rules while at least one ml2 driver lacks support for "
"QoS (at the moment of writing, linuxbridge is such a driver)."
msgstr ""

# #-#-#-#-#  adv_config_qos.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  config.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../adv_config_qos.rst:60 ../config.rst:3
msgid "Configuration"
msgstr ""

#: ../adv_config_qos.rst:62
msgid "To enable the service, follow the steps below:"
msgstr ""

#: ../adv_config_qos.rst:64
msgid "On server side:"
msgstr ""

#: ../adv_config_qos.rst:66
msgid "Enable ``qos`` service in ``service_plugins``."
msgstr ""

#: ../adv_config_qos.rst:67
msgid ""
"Set the needed notification_drivers in [qos] section (message_queue is the "
"default)."
msgstr ""

#: ../adv_config_qos.rst:69
msgid "For ml2, add 'qos' to extension_drivers in [ml2] section."
msgstr ""

#: ../adv_config_qos.rst:71
msgid "On agent side (OVS):"
msgstr ""

#: ../adv_config_qos.rst:73
msgid "Add 'qos' to extensions in [agent] section."
msgstr ""

#: ../adv_config_qos.rst:76
msgid ""
"QoS currently works with ml2 only (SR-IOV and Open vSwitch are the only "
"drivers that are enabled for QoS in Liberty release)."
msgstr ""

#: ../adv_config_qos.rst:80
msgid "Trusted tenants policy.json configuration"
msgstr ""

#: ../adv_config_qos.rst:82
msgid ""
"If tenants are trusted to administrate their own QoS policies in your cloud, "
"neutron's file :file:`policy.json` can be modified to allow this."
msgstr ""

#: ../adv_config_qos.rst:85
msgid "Modify ``/etc/neutron/policy.json`` policy entries as follows::"
msgstr ""

#: ../adv_config_qos.rst:101
msgid ""
"QoS policies are only created by admins with the default ``policy.json``. "
"Therefore, you should have the Cloud Operator to set up them on behalf of "
"the Cloud tenants."
msgstr ""

#: ../adv_config_qos.rst:105
msgid ""
"If tenants are trusted to create their own policies, check the trusted "
"tenants ``policy.json`` configuration section."
msgstr ""

#: ../adv_config_qos.rst:108
msgid "First, create a QoS policy and its bandwidth limit rules:"
msgstr ""

#: ../adv_config_qos.rst:137
msgid ""
"Second, associate the created policy with an existing neutron port. In order "
"to do this, user extracts the port id to be associated to the already "
"created policy. In the next example, we will assign the ``bw-limiter`` "
"policy to the VM with IP address 10.0.0.3"
msgstr ""

#: ../adv_config_qos.rst:156
msgid ""
"In order to detach a port from the QoS policy, simply update again the port "
"configuration."
msgstr ""

#: ../adv_config_qos.rst:165
msgid "Ports can be created with a policy attached to them too."
msgstr ""

#: ../adv_config_qos.rst:195
msgid ""
"You can attach networks to a QoS policy. The meaning of this is that any "
"compute port connected to the network will use the network policy by default "
"unless the port has a specific policy attached to it. Network owned ports "
"like dhcp and router ports are excluded from network policy application."
msgstr ""

#: ../adv_config_qos.rst:200
msgid ""
"In order to attach a QoS policy to a network, update an existing network, or "
"initially create the network attached to the policy."
msgstr ""

#: ../adv_config_qos.rst:210
msgid "Administrator enforcement"
msgstr ""

#: ../adv_config_qos.rst:212
msgid ""
"Administrators are able to enforce policies on tenant ports or networks. As "
"long as the policy is not shared, the tenant is not be able to detach any "
"policy attached to a network or port."
msgstr ""

#: ../adv_config_qos.rst:216
msgid ""
"If the policy is shared, the tenant is able to attach or detach such policy "
"from its own ports and networks."
msgstr ""

#: ../adv_config_qos.rst:221
msgid "Rule modification"
msgstr ""

#: ../adv_config_qos.rst:222
msgid ""
"You can modify rules at runtime. Rule modifications will be propagated to "
"any attached port."
msgstr ""

#: ../adv_config_service_chaining.rst:3
msgid "Service chaining"
msgstr ""

#: ../adv_config_sriov.rst:3
msgid "Using SR-IOV functionality"
msgstr ""

#: ../adv_config_sriov.rst:5
msgid ""
"The purpose of this page is to describe how to enable SR-IOV functionality "
"available in OpenStack (using OpenStack Networking) as of the Juno release. "
"This page serves as a how-to guide on configuring OpenStack Networking and "
"OpenStack Compute to create neutron SR-IOV ports."
msgstr ""

#: ../adv_config_sriov.rst:13
msgid ""
"PCI-SIG Single Root I/O Virtualization and Sharing (SR-IOV) specification "
"defines a standardized mechanism to virtualize PCIe devices. The mechanism "
"can virtualize a single PCIe Ethernet controller to appear as multiple PCIe "
"devices. You can directly assign each virtual PCIe device to a VM, bypassing "
"the hypervisor and virtual switch layer. As a result, users are able to "
"achieve low latency and near-line wire speed."
msgstr ""

#: ../adv_config_sriov.rst:20
msgid "The following terms are used over the document:"
msgstr ""

#: ../adv_config_sriov.rst:26
msgid "Term"
msgstr ""

#: ../adv_config_sriov.rst:27
msgid "Definition"
msgstr ""

#: ../adv_config_sriov.rst:28
msgid "PF"
msgstr ""

#: ../adv_config_sriov.rst:29
msgid ""
"Physical Function. This is the physical Ethernet controller that supports SR-"
"IOV."
msgstr ""

#: ../adv_config_sriov.rst:31
msgid "VF"
msgstr ""

#: ../adv_config_sriov.rst:32
msgid ""
"Virtual Function. This is a virtual PCIe device created from a physical "
"Ethernet controller."
msgstr ""

#: ../adv_config_sriov.rst:36
msgid "In order to enable SR-IOV, the following steps are required:"
msgstr ""

#: ../adv_config_sriov.rst:38 ../adv_config_sriov.rst:92
msgid "Create Virtual Functions (Compute)"
msgstr ""

#: ../adv_config_sriov.rst:39
msgid "Whitelist PCI devices in nova-compute (Compute)"
msgstr ""

#: ../adv_config_sriov.rst:40 ../adv_config_sriov.rst:207
msgid "Configure neutron-server (Controller)"
msgstr ""

#: ../adv_config_sriov.rst:41 ../adv_config_sriov.rst:248
msgid "Configure nova-scheduler (Controller)"
msgstr ""

#: ../adv_config_sriov.rst:42 ../adv_config_sriov.rst:269
msgid "Enable neutron sriov-agent (Compute)"
msgstr ""

#: ../adv_config_sriov.rst:45
msgid "Neutron sriov-agent"
msgstr ""

#: ../adv_config_sriov.rst:46
msgid "There are 2 ways of configuring SR-IOV:"
msgstr ""

#: ../adv_config_sriov.rst:48
msgid "With the sriov-agent running on each compute node"
msgstr ""

#: ../adv_config_sriov.rst:49
msgid "Without the sriov-agent running on each compute node"
msgstr ""

#: ../adv_config_sriov.rst:51
msgid ""
"The sriov-agent allows you to set the admin state of ports and starting from "
"Liberty allows you to control port security (enable and disable "
"spoofchecking) and QoS rate limit settings."
msgstr ""

#: ../adv_config_sriov.rst:57
msgid ""
"With the sriov-agent mode is default in Liberty. Without the sriov-agent "
"mode is deprecated in Liberty and removed in Mitaka."
msgstr ""

#: ../adv_config_sriov.rst:64
msgid ""
"QoS is supported since Liberty, while it has limitations. max_burst_kbps "
"(burst over max_kbps) is not supported. max_kbps is rounded to Mbps."
msgstr ""

#: ../adv_config_sriov.rst:67
msgid ""
"Security Group is not supported. the agent is only working with "
"``firewall_driver = neutron.agent.firewall.NoopFirewallDriver``."
msgstr ""

#: ../adv_config_sriov.rst:69
msgid ""
"No OpenStack Dashboard integration. Users need to use CLI or API to create "
"neutron SR-IOV ports."
msgstr ""

#: ../adv_config_sriov.rst:71
msgid "Live migration is not supported for instances with SR-IOV ports."
msgstr ""

#: ../adv_config_sriov.rst:74
msgid ""
"ARP spoofing filtering is supported since Liberty when using sriov-agent."
msgstr ""

#: ../adv_config_sriov.rst:78
msgid "Environment example"
msgstr ""

#: ../adv_config_sriov.rst:79
msgid ""
"We recommend using Open vSwitch with VLAN as segregation. This way you can "
"combine normal VMs without SR-IOV ports and instances with SR-IOV ports on a "
"single neutron network."
msgstr ""

#: ../adv_config_sriov.rst:85
msgid ""
"Throughout this guide, eth3 is used as the PF and physnet2 is used as the "
"provider network configured as a VLAN range. You are expected to change this "
"according to your actual environment."
msgstr ""

#: ../adv_config_sriov.rst:93
msgid ""
"In this step, create the VFs for the network interface that will be used for "
"SR-IOV. Use eth3 as PF, which is also used as the interface for Open vSwitch "
"VLAN and has access to the private networks of all machines."
msgstr ""

#: ../adv_config_sriov.rst:99
msgid ""
"The step to create VFs differ between SR-IOV card Ethernet controller "
"manufacturers. Currently the following manufacturers are known to work:"
msgstr ""

#: ../adv_config_sriov.rst:102
msgid "Intel"
msgstr ""

#: ../adv_config_sriov.rst:103
msgid "Mellanox"
msgstr ""

#: ../adv_config_sriov.rst:104
msgid "QLogic"
msgstr ""

#: ../adv_config_sriov.rst:106
msgid ""
"For **Mellanox SR-IOV Ethernet cards** see: `Mellanox: HowTo Configure SR-"
"IOV VFs <https://community.mellanox.com/docs/DOC-1484>`_"
msgstr ""

#: ../adv_config_sriov.rst:110
msgid ""
"To create the VFs on Ubuntu for **Intel SR-IOV Ethernet cards**, do the "
"following:"
msgstr ""

#: ../adv_config_sriov.rst:113
msgid ""
"Make sure SR-IOV is enabled in BIOS, check for VT-d and make sure it is "
"enabled.  After enabling VT-d, enable IOMMU on Linux by adding "
"``intel_iommu=on`` to kernel parameters. Edit the file :file:`/etc/default/"
"grub`:"
msgstr ""

#: ../adv_config_sriov.rst:122
msgid "Run the following if you have added new parameters:"
msgstr ""

#: ../adv_config_sriov.rst:129
msgid "On each compute node, create the VFs via the PCI SYS interface:"
msgstr ""

#: ../adv_config_sriov.rst:135
msgid ""
"Alternatively VFs can be created by passing the ``max_vfs`` to the kernel "
"module of your network interface. The ``max_vfs`` parameter has been "
"deprecated so the PCI SYS interface is the preferred method."
msgstr ""

#: ../adv_config_sriov.rst:139
msgid ""
"Now verify that the VFs have been created (Should see Virtual Function "
"device):"
msgstr ""

#: ../adv_config_sriov.rst:146
msgid "Persist created VFs on reboot:"
msgstr ""

#: ../adv_config_sriov.rst:154
msgid ""
"The suggested way of making PCI SYS settings persistent is through :file:"
"`sysfs.conf` but for unknown reason changing :file:`sysfs.conf` does not "
"have any effect on Ubuntu 14.04."
msgstr ""

#: ../adv_config_sriov.rst:158
msgid ""
"For **QLogic SR-IOV Ethernet cards** see: `User's Guide OpenStack Deployment "
"with SR-IOV Configuration <http://www.qlogic.com/solutions/Documents/"
"UsersGuide_OpenStack_SR-IOV.pdf>`_"
msgstr ""

#: ../adv_config_sriov.rst:164
msgid "Whitelist PCI devices nova-compute (Compute)"
msgstr ""

#: ../adv_config_sriov.rst:166
msgid ""
"Tell nova-compute which pci devices are allowed to be passed through. Edit "
"the file :file:`/etc/nova/nova.conf`:"
msgstr ""

#: ../adv_config_sriov.rst:174
msgid ""
"This tells nova that all VFs belonging to eth3 are allowed to be passed "
"through to VMs and belong to the neutron provider network physnet2. Restart "
"nova compute with :command:`service nova-compute restart` to let the changes "
"have effect."
msgstr ""

#: ../adv_config_sriov.rst:179
msgid ""
"Alternatively the ``pci_passthrough_whitelist`` parameter also supports "
"whitelisting by:"
msgstr ""

#: ../adv_config_sriov.rst:182
msgid ""
"PCI address: The address uses the same syntax as in ``lspci`` and an "
"asterisk (*) can be used to match anything."
msgstr ""

#: ../adv_config_sriov.rst:192
msgid ""
"PCI ``vendor_id`` and ``product_id`` as displayed by the Linux utility "
"``lspci``."
msgstr ""

#: ../adv_config_sriov.rst:201
msgid ""
"If the device defined by the PCI address or devname corresponds to a SR-IOV "
"PF, all VFs under the PF will match the entry. Multiple "
"pci_passthrough_whitelist entries per host are supported."
msgstr ""

#: ../adv_config_sriov.rst:209
msgid ""
"Add ``sriovnicswitch`` as mechanism driver. Edit the file :file:`/etc/"
"neutron/plugins/ml2/ml2_conf.ini`:"
msgstr ""

#: ../adv_config_sriov.rst:216
msgid ""
"Find out the ``vendor_id`` and ``product_id`` of your **VFs** by logging in "
"to your compute node with VFs previously created:"
msgstr ""

#: ../adv_config_sriov.rst:226
msgid ""
"Update the :file:`/etc/neutron/plugins/ml2/ml2_conf_sriov.ini` on each "
"controller. In our case the vendor_id is 8086 and the product_id is 10ed. "
"Tell neutron the vendor_id and product_id of the VFs that are supported."
msgstr ""

#: ../adv_config_sriov.rst:235
msgid ""
"Add the newly configured :file:`ml2_conf_sriov.ini` as parameter to the "
"neutron-server daemon.  Edit the file :file:`/etc/init/neutron-server.conf`:"
msgstr ""

#: ../adv_config_sriov.rst:244
msgid ""
"To make the changes have effect, restart the neutron-server service with "
"the :command:`service neutron-server restart`."
msgstr ""

#: ../adv_config_sriov.rst:250
msgid ""
"On every controller node running nova-scheduler add PCIDeviceScheduler to "
"the scheduler_default_filters parameter and add a new line for "
"scheduler_available_filters parameter under the [default] section in :file:`/"
"etc/nova/nova.conf`:"
msgstr ""

#: ../adv_config_sriov.rst:264
msgid ""
"Now restart the nova-scheduler service with :command:`service nova-scheduler "
"restart`."
msgstr ""

#: ../adv_config_sriov.rst:272
msgid ""
"You only need to enable the sriov-agent if you decided to keep "
"``agent_required=True`` in the step `Configure neutron-server "
"(Controller)`_. If you set ``agent_required=False``, you can safely skip "
"this step."
msgstr ""

#: ../adv_config_sriov.rst:276
msgid ""
"On each compute node edit the file :file:`/etc/neutron/plugins/ml2/"
"ml2_conf_sriov.ini`:"
msgstr ""

#: ../adv_config_sriov.rst:288
msgid ""
"exclude_devices is empty so all the VFs associated with eth3 may be "
"configured by the agent. If you want to exclude specific VFs, add them to "
"the exclude_devices parameter as follows:"
msgstr ""

#: ../adv_config_sriov.rst:296
msgid "Test whether the sriov-agent runs successfully:"
msgstr ""

#: ../adv_config_sriov.rst:302
msgid ""
"Enable the neutron-sriov-agent to start automatically at system start. If "
"your distribution does not come with a daemon file for your init system, "
"create a daemon configuration file. For example on Ubuntu install the "
"package:"
msgstr ""

#: ../adv_config_sriov.rst:313
msgid "Creating instances with SR-IOV ports"
msgstr ""

#: ../adv_config_sriov.rst:314
msgid ""
"After the configuration is done, you can now launch Instances with neutron "
"SR-IOV ports."
msgstr ""

#: ../adv_config_sriov.rst:317
msgid ""
"Get the id of the neutron network where you want the SR-IOV port to be "
"created:"
msgstr ""

#: ../adv_config_sriov.rst:324
msgid ""
"Create the SR-IOV port. We specify vnic_type direct, but other options "
"include macvtap:"
msgstr ""

#: ../adv_config_sriov.rst:331
msgid ""
"Create the VM. For the nic we specify the SR-IOV port created in step 2:"
msgstr ""

#: ../config.rst:5
msgid ""
"This content currently under development. For general configuration, see the "
"`Configuration Reference <http://docs.openstack.org/liberty/config-reference/"
"content/>`_."
msgstr ""

#: ../config_ml2_plug_in.rst:3
msgid "ML2 plug-in"
msgstr ""

#: ../config_ml2_plug_in.rst:6
msgid "Overview"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  config_server.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:9 ../config_server.rst:6
#: ../scenario_dvr_ovs.rst:111 ../scenario_l3ha_lb.rst:124
#: ../scenario_l3ha_ovs.rst:131 ../scenario_legacy_lb.rst:142
#: ../scenario_legacy_ovs.rst:149 ../scenario_provider_lb.rst:107
#: ../scenario_provider_ovs.rst:103
msgid "Architecture"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  config_server.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:12 ../config_server.rst:9
msgid "Configuration file organization, relationships, etc."
msgstr ""

#: ../config_ml2_plug_in.rst:15
msgid "Network type drivers"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_overview.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:17 ../intro_os_networking_overview.rst:68
msgid "Flat"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_overview.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:19 ../config_ml2_plug_in.rst:33
#: ../intro_os_networking_overview.rst:76
msgid "VLAN"
msgstr ""

#: ../config_ml2_plug_in.rst:21 ../config_ml2_plug_in.rst:37
msgid "GRE"
msgstr ""

#: ../config_ml2_plug_in.rst:23 ../config_ml2_plug_in.rst:41
msgid "VXLAN"
msgstr ""

#: ../config_ml2_plug_in.rst:26
msgid "Tenant network types"
msgstr ""

#: ../config_ml2_plug_in.rst:28
msgid ""
"Similar info in: http://docs.openstack.org/admin-guide-cloud/networking_adv-"
"features.html#provider-networks"
msgstr ""

#: ../config_ml2_plug_in.rst:31
msgid "Local"
msgstr ""

#: ../config_ml2_plug_in.rst:35 ../config_ml2_plug_in.rst:43
msgid "ID ranges"
msgstr ""

#: ../config_ml2_plug_in.rst:39
msgid "Tunnel ID ranges"
msgstr ""

#: ../config_ml2_plug_in.rst:45
msgid "Multicast discovery (L2 population)"
msgstr ""

#: ../config_ml2_plug_in.rst:48
msgid "Mechanism"
msgstr ""

#: ../config_ml2_plug_in.rst:50
msgid "Linux bridge"
msgstr ""

#: ../config_ml2_plug_in.rst:52 ../config_ml2_plug_in.rst:56
msgid "Option stanza/section"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:54 ../scenario_dvr_ovs.rst:635
#: ../scenario_dvr_ovs.rst:722 ../scenario_l3ha_ovs.rst:371
#: ../scenario_l3ha_ovs.rst:426 ../scenario_legacy_ovs.rst:781
#: ../scenario_legacy_ovs.rst:837 ../scenario_provider_ovs.rst:454
#: ../scenario_provider_ovs.rst:517
msgid "Open vSwitch"
msgstr ""

#: ../config_ml2_plug_in.rst:58
msgid "L2 population"
msgstr ""

#: ../config_ml2_plug_in.rst:60
msgid "Specialized"
msgstr ""

#: ../config_ml2_plug_in.rst:62
msgid "Open source"
msgstr ""

#: ../config_ml2_plug_in.rst:64
msgid "Explains that mechanisms such as OpenDaylight and OpenContrail exist"
msgstr ""

#: ../config_ml2_plug_in.rst:66 ../config_ml2_plug_in.rst:72
msgid "Does not cover how to do this"
msgstr ""

#: ../config_ml2_plug_in.rst:68
msgid "Proprietary (vendor)"
msgstr ""

#: ../config_ml2_plug_in.rst:70
msgid "Just specifies that these exist"
msgstr ""

#: ../config_ml2_plug_in.rst:75
msgid "Security"
msgstr ""

#: ../config_ml2_plug_in.rst:77
msgid "Options"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:80 ../intro_os_networking_service.rst:22
msgid "Agents"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:83 ../intro_os_networking_service.rst:47
msgid "L3"
msgstr ""

#: ../config_ml2_plug_in.rst:85 ../config_ml2_plug_in.rst:90
#: ../config_ml2_plug_in.rst:95
msgid "Configuration file"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_basic_networking.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:88 ../intro_basic_networking.rst:227
#: ../intro_os_networking_service.rst:51
msgid "DHCP"
msgstr ""

# #-#-#-#-#  config_ml2_plug_in.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_ml2_plug_in.rst:93 ../intro_os_networking_service.rst:58
msgid "Metadata"
msgstr ""

# #-#-#-#-#  config_server.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../config_server.rst:3 ../intro_os_networking_service.rst:6
#: ../scenario_dvr_ovs.rst:528 ../scenario_l3ha_lb.rst:254
#: ../scenario_l3ha_ovs.rst:266 ../scenario_legacy_lb.rst:578
#: ../scenario_legacy_ovs.rst:676 ../scenario_provider_lb.rst:437
#: ../scenario_provider_ovs.rst:474
msgid "Server"
msgstr ""

#: ../config_server.rst:12
msgid "Reference common configuration items"
msgstr ""

#: ../deploy.rst:3
msgid "Deployment scenarios"
msgstr ""

#: ../index.rst:8
msgid "OpenStack Networking Guide"
msgstr ""

#: ../index.rst:11
msgid "Abstract"
msgstr ""

#: ../index.rst:13
msgid ""
"This guide targets OpenStack administrators seeking to deploy and manage "
"OpenStack Networking (neutron)."
msgstr ""

#: ../index.rst:16
msgid ""
"This guide documents OpenStack Liberty, OpenStack Kilo, and OpenStack Juno "
"releases."
msgstr ""

#: ../index.rst:19
msgid ""
"This guide is a work-in-progress and changing rapidly while we continue to "
"test and enhance the guidance. Please note where there are open \"to do\" "
"items and help where you are able."
msgstr ""

#: ../index.rst:24
msgid "Contents"
msgstr ""

#: ../index.rst:43
msgid "Search in this guide"
msgstr ""

#: ../index.rst:45
msgid ":ref:`search`"
msgstr ""

#: ../intro_basic_networking.rst:3
msgid "Basic networking"
msgstr ""

#: ../intro_basic_networking.rst:6
msgid "Ethernet"
msgstr ""

#: ../intro_basic_networking.rst:8
msgid ""
"Ethernet is a networking protocol, specified by the IEEE 802.3 standard. "
"Most wired network interface cards (NICs) communicate using Ethernet."
msgstr ""

#: ../intro_basic_networking.rst:11
msgid ""
"In the `OSI model`_ of networking protocols, Ethernet occupies the second "
"layer, which is known as the data link layer. When discussing Ethernet, you "
"will often hear terms such as *local network*, *layer 2*, *L2*, *link layer* "
"and *data link layer*."
msgstr ""

#: ../intro_basic_networking.rst:16
msgid ""
"In an Ethernet network, the hosts connected to the network communicate by "
"exchanging *frames*. Every host on an Ethernet network is uniquely "
"identified by an address called the media access control (MAC) address. In "
"particular, in an OpenStack environment, every virtual machine instance has "
"a unique MAC address, which is different from the MAC address of the compute "
"host. A MAC address has 48 bits and is typically represented as a "
"hexadecimal string, such as ``08:00:27:b9:88:74``. The MAC address is hard-"
"coded into the NIC by the manufacturer, although modern NICs allow you to "
"change the MAC address programatically. In Linux, you can retrieve the MAC "
"address of a NIC using the ``ip`` command::"
msgstr ""

#: ../intro_basic_networking.rst:31
msgid ""
"Conceptually, you can think of an Ethernet network as a single bus that each "
"of the network hosts connects to. In early implementations, an Ethernet "
"network consisted of a single coaxial cable that hosts would tap into to "
"connect to the network. Modern Ethernet networks do not use this approach, "
"and instead each network host connects directly to a network device called a "
"*switch*. Still, this conceptual model is useful, and in network diagrams "
"(including those generated by the OpenStack dashboard) an Ethernet network "
"is often depicted as if it was a single bus. You'll sometimes hear an "
"Ethernet network referred to as a *layer 2 segment*."
msgstr ""

#: ../intro_basic_networking.rst:42
msgid ""
"In an Ethernet network, every host on the network can send a frame directly "
"to every other host. An Ethernet network also supports broadcasts, so that "
"one host can send a frame to every host on the network by sending to the "
"special MAC address ``ff:ff:ff:ff:ff:ff``. ARP_ and DHCP_ are two notable "
"protocols that use Ethernet broadcasts. Because Ethernet networks support "
"broadcasts, you will sometimes hear an Ethernet network referred to as a "
"*broadcast domain*."
msgstr ""

#: ../intro_basic_networking.rst:50
msgid ""
"When a NIC receives an Ethernet frame, by default the NIC checks to see if "
"the destination MAC address matches the address of the NIC (or the broadcast "
"address), and the Ethernet frame is discarded if the MAC address does not "
"match. For a compute host, this behavior is undesirable because the frame "
"may be intended for one of the instances. NICs can be configured for "
"*promiscuous mode*, where they pass all Ethernet frames to the operating "
"system, even if the MAC address does not match. Compute hosts should always "
"have the appropriate NICs configured for promiscuous mode."
msgstr ""

#: ../intro_basic_networking.rst:60
msgid ""
"As mentioned earlier, modern Ethernet networks use switches to interconnect "
"the network hosts. A switch is a box of networking hardware with a large "
"number of ports, that forwards Ethernet frames from one connected host to "
"another. When hosts first send frames over the switch, the switch doesn’t "
"know which MAC address is associated with which port. If an Ethernet frame "
"is destined for an unknown MAC address, the switch broadcasts the frame to "
"all ports. The port learns which MAC addresses are at which ports by "
"observing the traffic. Once it knows which MAC address is associated with a "
"port, it can send Ethernet frames to the correct port instead of "
"broadcasting. The switch maintains the mappings of MAC addresses to switch "
"ports in a table called a *forwarding table* or *forwarding information "
"base* (FIB). Switches can be daisy-chained together, and the resulting "
"connection of switches and hosts behaves like a single network."
msgstr ""

#: ../intro_basic_networking.rst:78
msgid "VLANs"
msgstr ""

#: ../intro_basic_networking.rst:80
msgid ""
"VLAN is a networking technology that enables a single switch to act as if it "
"was multiple independent switches. Specifically, two hosts that are "
"connected to the same switch but on different VLANs do not see each other's "
"traffic. OpenStack is able to take advantage of VLANs to isolate the traffic "
"of different tenants, even if the tenants happen to have instances running "
"on the same compute host. Each VLAN has an associated numerical ID, between "
"1 and 4095. We say \"VLAN 15\" to refer to the VLAN with numerical ID of 15."
msgstr ""

#: ../intro_basic_networking.rst:89
msgid ""
"To understand how VLANs work, let's consider VLAN applications in a "
"traditional IT environment, where physical hosts are attached to a physical "
"switch, and no virtualization is involved. Imagine a scenario where you want "
"three isolated networks, but you only have a single physical switch. The "
"network administrator would choose three VLAN IDs, say, 10, 11, and 12, and "
"would configure the switch to associate switchports with VLAN IDs. For "
"example, switchport 2 might be associated with VLAN 10, switchport 3 might "
"be associated with VLAN 11, and so forth. When a switchport is configured "
"for a specific VLAN, it is called an *access port*. The switch is "
"responsible for ensuring that the network traffic is isolated across the "
"VLANs."
msgstr ""

#: ../intro_basic_networking.rst:101
msgid ""
"Now consider the scenario that all of the switchports in the first switch "
"become occupied, and so the organization buys a second switch and connects "
"it to the first switch to expand the available number of switchports. The "
"second switch is also configured to support VLAN IDs 10, 11, and 12. Now "
"imagine host A connected to switch 1 on a port configured for VLAN ID 10 "
"sends an Ethernet frame intended for host B connected to switch 2 on a port "
"configured for VLAN ID 10. When switch 1 forwards the Ethernet frame to "
"switch 2, it must communicate that the frame is associated with VLAN ID 10."
msgstr ""

#: ../intro_basic_networking.rst:111
msgid ""
"If two switches are to be connected together, and the switches are "
"configured for VLANs, then the switchports used for cross-connecting the "
"switches must be configured to allow Ethernet frames from any VLAN to be "
"forwarded to the other switch. In addition, the sending switch must tag each "
"Ethernet frame with the VLAN ID so that the receiving switch can ensure that "
"only hosts on the matching VLAN are eligible to receive the frame."
msgstr ""

#: ../intro_basic_networking.rst:118
msgid ""
"When a switchport is configured to pass frames from all VLANs and tag them "
"with the VLAN IDs it is called a *trunk port*. IEEE 802.1Q is the network "
"standard that describes how VLAN tags are encoded in Ethernet frames when "
"trunking is being used."
msgstr ""

#: ../intro_basic_networking.rst:123
msgid ""
"Note that if you are using VLANs on your physical switches to implement "
"tenant isolation in your OpenStack cloud, you must ensure that all of your "
"switchports are configured as trunk ports."
msgstr ""

#: ../intro_basic_networking.rst:127
msgid ""
"It is important that you select a VLAN range that your current network "
"infrastructure is not using. For example, if you estimate that your cloud "
"must support a maximum of 100 projects, pick a VLAN range outside of that "
"value, such as VLAN 200–299. OpenStack and all physical network "
"infrastructure that handles tenant networks must then support this VLAN "
"range."
msgstr ""

#: ../intro_basic_networking.rst:133
msgid ""
"Trunking is used to connect between different switches. Each trunk uses a "
"tag to identify which VLAN is in use. This ensures that switches on the same "
"VLAN can communicate."
msgstr ""

#: ../intro_basic_networking.rst:141
msgid "Subnets and ARP"
msgstr ""

#: ../intro_basic_networking.rst:143
msgid ""
"While NICs use MAC addresses to address network hosts, TCP/IP applications "
"use IP addresses. The Address Resolution Protocol (ARP) bridges the gap "
"between Ethernet and IP by translating IP addresses into MAC addresses."
msgstr ""

#: ../intro_basic_networking.rst:147
msgid ""
"IP addresses are broken up into two parts: a *network number* and a *host "
"identifier*. Two hosts are on the same *subnet* if they have the same "
"network number. Recall that two hosts can only communicate directly over "
"Ethernet if they are on the same local network. ARP assumes that all "
"machines that are in the same subnet are on the same local network. Network "
"administrators must take care when assigning IP addresses and netmasks to "
"hosts so that any two hosts that are in the same subnet are on the same "
"local network, otherwise ARP does not work properly."
msgstr ""

#: ../intro_basic_networking.rst:156
msgid ""
"To calculate the network number of an IP address, you must know the "
"*netmask* associated with the address. A netmask indicates how many of the "
"bits in the 32-bit IP address make up the network number."
msgstr ""

#: ../intro_basic_networking.rst:160
msgid "There are two syntaxes for expressing a netmask:"
msgstr ""

#: ../intro_basic_networking.rst:162
msgid "dotted quad"
msgstr ""

#: ../intro_basic_networking.rst:163
msgid "classless inter-domain routing (CIDR)"
msgstr ""

#: ../intro_basic_networking.rst:165
msgid ""
"Consider an IP address of 192.168.1.5, where the first 24 bits of the "
"address are the network number. In dotted quad notation, the netmask would "
"be written as ``255.255.255.0``. CIDR notation includes both the IP address "
"and netmask, and this example would be written as ``192.168.1.5/24``."
msgstr ""

#: ../intro_basic_networking.rst:172
msgid ""
"Creating CIDR subnets including a multicast address or a loopback address "
"cannot be used in an OpenStack environment. For example, creating a subnet "
"using ``224.0.0.0/16`` or ``127.0.1.0/24`` is not supported."
msgstr ""

#: ../intro_basic_networking.rst:176
msgid ""
"Sometimes we want to refer to a subnet, but not any particular IP address on "
"the subnet. A common convention is to set the host identifier to all zeros "
"to make reference to a subnet. For example, if a host's IP address is "
"``10.10.53.24/16``, then we would say the subnet is ``10.10.0.0/16``."
msgstr ""

#: ../intro_basic_networking.rst:182
msgid ""
"To understand how ARP translates IP addresses to MAC addresses, consider the "
"following example. Assume host *A* has an IP address of ``192.168.1.5/24`` "
"and a MAC address of ``fc:99:47:49:d4:a0``, and wants to send a packet to "
"host *B* with an IP address of ``192.168.1.7``. Note that the network number "
"is the same for both hosts, so host *A* is able to send frames directly to "
"host *B*."
msgstr ""

#: ../intro_basic_networking.rst:189
msgid ""
"The first time host *A* attempts to communicate with host *B*, the "
"destination MAC address is not known. Host *A* makes an ARP request to the "
"local network. The request is a broadcast with a message like this:"
msgstr ""

#: ../intro_basic_networking.rst:194
msgid ""
"*To: everybody (ff:ff:ff:ff:ff:ff). I am looking for the computer who has IP "
"address 192.168.1.7. Signed: MAC address fc:99:47:49:d4:a0*."
msgstr ""

#: ../intro_basic_networking.rst:197
msgid "Host *B* responds with a response like this:"
msgstr ""

#: ../intro_basic_networking.rst:199
msgid ""
"*To: fc:99:47:49:d4:a0. I have IP address 192.168.1.7. Signed: MAC address "
"54:78:1a:86:00:a5.*"
msgstr ""

#: ../intro_basic_networking.rst:202
msgid "Host *A* then sends Ethernet frames to host *B*."
msgstr ""

#: ../intro_basic_networking.rst:204
msgid ""
"You can initiate an ARP request manually using the *arping* command. For "
"example, to send an ARP request to IP address ``10.30.0.132``::"
msgstr ""

#: ../intro_basic_networking.rst:215
msgid ""
"To reduce the number of ARP requests, operating systems maintain an ARP "
"cache that contains the mappings of IP addresses to MAC address. On a Linux "
"machine, you can view the contents of the ARP cache by using the *arp* "
"command::"
msgstr ""

#: ../intro_basic_networking.rst:229
msgid ""
"Hosts connected to a network use the Dynamic Host Configuration Protocol (:"
"term:`DHCP`) to dynamically obtain IP addresses. A DHCP server hands out the "
"IP addresses to network hosts, which are the DHCP clients."
msgstr ""

#: ../intro_basic_networking.rst:234
msgid ""
"DHCP clients locate the DHCP server by sending a UDP_ packet from port 68 to "
"address ``255.255.255.255`` on port 67. Address ``255.255.255.255`` is the "
"local network broadcast address: all hosts on the local network see the UDP "
"packets sent to this address. However, such packets are not forwarded to "
"other networks. Consequently, the DHCP server must be on the same local "
"network as the client, or the server will not receive the broadcast. The "
"DHCP server responds by sending a UDP packet from port 67 to port 68 on the "
"client. The exchange looks like this:"
msgstr ""

#: ../intro_basic_networking.rst:244
msgid ""
"The client sends a discover (\"I’m a client at MAC address ``08:00:27:"
"b9:88:74``, I need an IP address\")"
msgstr ""

#: ../intro_basic_networking.rst:246
msgid ""
"The server sends an offer (\"OK ``08:00:27:b9:88:74``, I’m offering IP "
"address ``10.10.0.112``\")"
msgstr ""

#: ../intro_basic_networking.rst:248
msgid ""
"The client sends a request (\"Server ``10.10.0.131``, I would like to have "
"IP ``10.10.0.112``\")"
msgstr ""

#: ../intro_basic_networking.rst:250
msgid ""
"The server sends an acknowledgement (\"OK ``08:00:27:b9:88:74``, IP "
"``10.10.0.112`` is yours\")"
msgstr ""

#: ../intro_basic_networking.rst:254
msgid ""
"OpenStack uses a third-party program called dnsmasq_ to implement the DHCP "
"server. Dnsmasq writes to the syslog, where you can observe the DHCP request "
"and replies::"
msgstr ""

#: ../intro_basic_networking.rst:264
msgid ""
"When troubleshooting an instance that is not reachable over the network, it "
"can be helpful to examine this log to verify that all four steps of the DHCP "
"protocol were carried out for the instance in question."
msgstr ""

#: ../intro_basic_networking.rst:273
msgid "IP"
msgstr ""

#: ../intro_basic_networking.rst:275
msgid ""
"The Internet Protocol (IP) specifies how to route packets between hosts that "
"are connected to different local networks. IP relies on special network "
"hosts called *routers* or *gateways*. A router is a host that is connected "
"to at least two local networks and can forward IP packets from one local "
"network to another. A router has multiple IP addresses: one for each of the "
"networks it is connected to."
msgstr ""

#: ../intro_basic_networking.rst:282
msgid ""
"In the OSI model of networking protocols, IP occupies the third layer, which "
"is known as the network layer. When discussing IP, you will often hear terms "
"such as *layer 3*, *L3*, and *network layer*."
msgstr ""

#: ../intro_basic_networking.rst:286
msgid ""
"A host sending a packet to an IP address consults its *routing table* to "
"determine which machine on the local network(s) the packet should be sent "
"to. The routing table maintains a list of the subnets associated with each "
"local network that the host is directly connected to, as well as a list of "
"routers that are on these local networks."
msgstr ""

#: ../intro_basic_networking.rst:292
msgid ""
"On a Linux machine, any of the following commands displays the routing "
"table::"
msgstr ""

#: ../intro_basic_networking.rst:298
msgid "Here is an example of output from ``ip route show``::"
msgstr ""

#: ../intro_basic_networking.rst:306
msgid ""
"Line 1 of the output specifies the location of the default route, which is "
"the effective routing rule if none of the other rules match. The router "
"associated with the default route (``10.0.2.2`` in the example above) is "
"sometimes referred to as the *default gateway*. A DHCP_ server typically "
"transmits the IP address of the default gateway to the DHCP client along "
"with the client's IP address and a netmask."
msgstr ""

#: ../intro_basic_networking.rst:313
msgid ""
"Line 2 of the output specifies that IPs in the 10.0.2.0/24 subnet are on the "
"local network associated with the network interface eth0."
msgstr ""

#: ../intro_basic_networking.rst:316
msgid ""
"Line 3 of the output specifies that IPs in the 192.168.27.0/24 subnet are on "
"the local network associated with the network interface eth1."
msgstr ""

#: ../intro_basic_networking.rst:319
msgid ""
"Line 4 of the output specifies that IPs in the 192.168.122/24 subnet are on "
"the local network associated with the network interface virbr0."
msgstr ""

#: ../intro_basic_networking.rst:322
msgid ""
"The output of the ``route -n`` and ``netstat -rn`` commands are formatted in "
"a slightly different way. This example shows how the same routes would be "
"formatted using these commands::"
msgstr ""

#: ../intro_basic_networking.rst:334
msgid ""
"The ``ip route get`` command outputs the route for a destination IP address. "
"From the above example, destination IP address 10.0.2.14 is on the local "
"network of eth0 and would be sent directly::"
msgstr ""

#: ../intro_basic_networking.rst:341
msgid ""
"The destination IP address 93.184.216.34 is not on any of the connected "
"local networks and would be forwarded to the default gateway at 10.0.2.2::"
msgstr ""

#: ../intro_basic_networking.rst:347
msgid ""
"It is common for a packet to hop across multiple routers to reach its final "
"destination. On a Linux machine, the ``traceroute`` and more recent ``mtr`` "
"programs prints out the IP address of each router that an IP packet "
"traverses along its path to its destination."
msgstr ""

#: ../intro_basic_networking.rst:355
msgid "TCP/UDP/ICMP"
msgstr ""

#: ../intro_basic_networking.rst:357
msgid ""
"For networked software applications to communicate over an IP network, they "
"must use a protocol layered atop IP. These protocols occupy the fourth layer "
"of the OSI model known as the *transport layer* or *layer 4*. See the "
"`Protocol Numbers`_ web page maintained by the Internet Assigned Numbers "
"Authority (IANA) for a list of protocols that layer atop IP and their "
"associated numbers."
msgstr ""

#: ../intro_basic_networking.rst:366
msgid ""
"The *Transmission Control Protocol* (TCP) is the most commonly used layer 4 "
"protocol in networked applications. TCP is a *connection-oriented* protocol: "
"it uses a client-server model where a client connects to a server, where "
"*server* refers to the application that receives connections. The typical "
"interaction in a TCP-based application proceeds as follows:"
msgstr ""

#: ../intro_basic_networking.rst:374
msgid "Client connects to server."
msgstr ""

#: ../intro_basic_networking.rst:375
msgid "Client and server exchange data."
msgstr ""

#: ../intro_basic_networking.rst:376
msgid "Client or server disconnects."
msgstr ""

#: ../intro_basic_networking.rst:378
msgid ""
"Because a network host may have multiple TCP-based applications running, TCP "
"uses an addressing scheme called *ports* to uniquely identify TCP-based "
"applications. A TCP port is associated with a number in the range 1-65535, "
"and only one application on a host can be associated with a TCP port at a "
"time, a restriction that is enforced by the operating system."
msgstr ""

#: ../intro_basic_networking.rst:384
msgid ""
"A TCP server is said to *listen* on a port. For example, an SSH server "
"typically listens on port 22. For a client to connect to a server using TCP, "
"the client must know both the IP address of a server's host and the server's "
"TCP port."
msgstr ""

#: ../intro_basic_networking.rst:389
msgid ""
"The operating system of the TCP client application automatically assigns a "
"port number to the client. The client owns this port number until the TCP "
"connection is terminated, after which time the operating system reclaims the "
"port number. These types of ports are referred to as *ephemeral ports*."
msgstr ""

#: ../intro_basic_networking.rst:395
msgid ""
"IANA maintains a `registry of port numbers`_ for many TCP-based services, as "
"well as services that use other layer 4 protocols that employ ports. "
"Registering a TCP port number is not required, but registering a port number "
"is helpful to avoid collisions with other services. See `Appendix B. "
"Firewalls and default ports`_ of the `OpenStack Configuration Reference`_ "
"for the default TCP ports used by various services involved in an OpenStack "
"deployment."
msgstr ""

#: ../intro_basic_networking.rst:408
msgid ""
"The most common application programming interface (API) for writing TCP-"
"based applications is called *Berkeley sockets*, also known as *BSD sockets* "
"or, simply, *sockets*. The sockets API exposes a *stream oriented* interface "
"for writing TCP applications: from the perspective of a programmer, sending "
"data over a TCP connection is similar to writing a stream of bytes to a "
"file. It is the responsibility of the operating system's TCP/IP "
"implementation to break up the stream of data into IP packets. The operating "
"system is also responsible for automatically retransmitting dropped packets, "
"and for handling flow control to ensure that transmitted data does not "
"overrun the sender's data buffers, receiver's data buffers, and network "
"capacity. Finally, the operating system is responsible for re-assembling the "
"packets in the correct order into a stream of data on the receiver's side. "
"Because TCP detects and retransmits lost packets, it is said to be a "
"*reliable* protocol."
msgstr ""

#: ../intro_basic_networking.rst:423
msgid ""
"The *User Datagram Protocol* (UDP) is another layer 4 protocol that is the "
"basis of several well-known networking protocols. UDP is a *connectionless* "
"protocol: two applications that communicate over UDP do not need to "
"establish a connection before exchanging data. UDP is also an *unreliable* "
"protocol. The operating system does not attempt to retransmit or even detect "
"lost UDP packets. The operating system also does not provide any guarantee "
"that the receiving application sees the UDP packets in the same order that "
"they were sent in."
msgstr ""

#: ../intro_basic_networking.rst:432
msgid ""
"UDP, like TCP, uses the notion of ports to distinguish between different "
"applications running on the same system. Note, however, that operating "
"systems treat UDP ports separately from TCP ports. For example, it is "
"possible for one application to be associated with TCP port 16543 and a "
"separate application to be associated with UDP port 16543."
msgstr ""

#: ../intro_basic_networking.rst:438
msgid ""
"Like TCP, the sockets API is the most common API for writing UDP-based "
"applications. The sockets API provides a *message-oriented* interface for "
"writing UDP applications: a programmer sends data over UDP by transmitting a "
"fixed-sized message. If an application requires retransmissions of lost "
"packets or a well-defined ordering of received packets, the programmer is "
"responsible for implementing this functionality in the application code."
msgstr ""

#: ../intro_basic_networking.rst:445
msgid ""
"DHCP_, the Domain Name System (DNS), the Network Time Protocol (NTP), and :"
"ref:`VXLAN` are examples of UDP-based protocols used in OpenStack "
"deployments."
msgstr ""

#: ../intro_basic_networking.rst:448
msgid ""
"UDP has support for one-to-many communication: sending a single packet to "
"multiple hosts. An application can broadcast a UDP packet to all of the "
"network hosts on a local network by setting the receiver IP address as the "
"special IP broadcast address ``255.255.255.255``. An application can also "
"send a UDP packet to a set of receivers using *IP multicast*. The intended "
"receiver applications join a multicast group by binding a UDP socket to a "
"special IP address that is one of the valid multicast group addresses. The "
"receiving hosts do not have to be on the same local network as the sender, "
"but the intervening routers must be configured to support IP multicast "
"routing. VXLAN is an example of a UDP-based protocol that uses IP multicast."
msgstr ""

#: ../intro_basic_networking.rst:460
msgid ""
"The *Internet Control Message Protocol* (ICMP) is a protocol used for "
"sending control messages over an IP network. For example, a router that "
"receives an IP packet may send an ICMP packet back to the source if there is "
"no route in the router's routing table that corresponds to the destination "
"address (ICMP code 1, destination host unreachable) or if the IP packet is "
"too large for the router to handle (ICMP code 4, fragmentation required and "
"\"don't fragment\" flag is set)."
msgstr ""

#: ../intro_basic_networking.rst:468
msgid ""
"The *ping* and *mtr* Linux command-line tools are two examples of network "
"utilities that use ICMP."
msgstr ""

#: ../intro_network_address_translation.rst:3
msgid "Network address translation"
msgstr ""

#: ../intro_network_address_translation.rst:5
msgid ""
"*Network Address Translation* (NAT) is a process for modifying the source or "
"destination addresses in the headers of an IP packet while the packet is in "
"transit. In general, the sender and receiver applications are not aware that "
"the IP packets are being manipulated."
msgstr ""

#: ../intro_network_address_translation.rst:10
msgid ""
"NAT is often implemented by routers, and so we will refer to the host "
"performing NAT as a *NAT router*. However, in OpenStack deployments it is "
"typically Linux servers that implement the NAT functionality, not hardware "
"routers. These servers use the iptables_ software package to implement the "
"NAT functionality."
msgstr ""

#: ../intro_network_address_translation.rst:16
msgid ""
"There are multiple variations of NAT, and here we describe three kinds "
"commonly found in OpenStack deployments."
msgstr ""

#: ../intro_network_address_translation.rst:22
msgid "SNAT"
msgstr ""

#: ../intro_network_address_translation.rst:24
msgid ""
"In *Source Network Address Translation* (SNAT), the NAT router modifies the "
"IP address of the sender in IP packets. SNAT is commonly used to enable "
"hosts with *private addresses* to communicate with servers on the public "
"Internet."
msgstr ""

#: ../intro_network_address_translation.rst:29
msgid "`RFC 1918`_ reserves the following three subnets as private addresses:"
msgstr ""

#: ../intro_network_address_translation.rst:31
msgid "``10.0.0.0/8``"
msgstr ""

#: ../intro_network_address_translation.rst:32
msgid "``172.16.0.0/12``"
msgstr ""

#: ../intro_network_address_translation.rst:33
msgid "``192.168.0.0/16``"
msgstr ""

#: ../intro_network_address_translation.rst:37
msgid ""
"These IP addresses are not publicly routable, meaning that a host on the "
"public Internet can not send an IP packet to any of these addresses. Private "
"IP addresses are widely used in both residential and corporate environments."
msgstr ""

#: ../intro_network_address_translation.rst:41
msgid ""
"Often, an application running on a host with a private IP address will need "
"to connect to a server on the public Internet. One such example is a user "
"who wants to access a public website such as www.openstack.org. If the IP "
"packets reach the web server at www.openstack.org with a private IP address "
"as the source, then the web server cannot send packets back to the sender."
msgstr ""

#: ../intro_network_address_translation.rst:47
msgid ""
"SNAT solves this problem by modifying the source IP address to an IP address "
"that is routable on the public Internet. There are different variations of "
"SNAT; in the form that OpenStack deployments use, a NAT router on the path "
"between the sender and receiver replaces the packet's source IP address with "
"the router's public IP address. The router also modifies the source TCP or "
"UDP port to another value, and the router maintains a record of the sender's "
"true IP address and port, as well as the modified IP address and port."
msgstr ""

#: ../intro_network_address_translation.rst:56
msgid ""
"When the router receives a packet with the matching IP address and port, it "
"translates these back to the private IP address and port, and forwards the "
"packet along."
msgstr ""

#: ../intro_network_address_translation.rst:60
msgid ""
"Because the NAT router modifies ports as well as IP addresses, this form of "
"SNAT is sometimes referred to as *Port Address Translation* (PAT). It is "
"also sometimes referred to as *NAT overload*."
msgstr ""

#: ../intro_network_address_translation.rst:64
msgid ""
"OpenStack uses SNAT to enable applications running inside of instances to "
"connect out to the public Internet."
msgstr ""

#: ../intro_network_address_translation.rst:68
msgid "DNAT"
msgstr ""

#: ../intro_network_address_translation.rst:70
msgid ""
"In *Destination Network Address Translation* (DNAT), the NAT router modifies "
"the IP address of the destination in IP packet headers."
msgstr ""

#: ../intro_network_address_translation.rst:73
msgid ""
"OpenStack uses DNAT to route packets from instances to the OpenStack "
"metadata service. Applications running inside of instances access the "
"OpenStack metadata service by making HTTP GET requests to a web server with "
"IP address 169.254.169.254. In an OpenStack deployment, there is no host "
"with this IP address. Instead, OpenStack uses DNAT to change the destination "
"IP of these packets so they reach the network interface that a metadata "
"service is listening on."
msgstr ""

#: ../intro_network_address_translation.rst:82
msgid "One-to-one NAT"
msgstr ""

#: ../intro_network_address_translation.rst:84
msgid ""
"In *one-to-one NAT*, the NAT router maintains a one-to-one mapping between "
"private IP addresses and public IP addresses. OpenStack uses one-to-one NAT "
"to implement floating IP addresses."
msgstr ""

#: ../intro_network_namespaces.rst:3
msgid "Network namespaces"
msgstr ""

#: ../intro_network_namespaces.rst:5
msgid ""
"A namespace is a way of scoping a particular set of identifiers. Using a "
"namespace, you can use the same identifier multiple times in different "
"namespaces. You can also restrict an identifier set visible to particular "
"processes."
msgstr ""

#: ../intro_network_namespaces.rst:10
msgid ""
"For example, Linux provides namespaces for networking and processes, among "
"other things. If a process is running within a process namespace, it can "
"only see and communicate with other processes in the same namespace. So, if "
"a shell in a particular process namespace ran :command:`ps waux`, it would "
"only show the other processes in the same namespace."
msgstr ""

#: ../intro_network_namespaces.rst:17
msgid "Linux network namespaces"
msgstr ""

#: ../intro_network_namespaces.rst:19
msgid ""
"In a network namespace, the scoped 'identifiers' are network devices; so a "
"given network device, such as ``eth0``, exists in a particular namespace. "
"Linux starts up with a default network namespace, so if your operating "
"system does not do anything special, that is where all the network devices "
"will be located. But it is also possible to create further non-default "
"namespaces, and create new devices in those namespaces, or to move an "
"existing device from one namespace to another."
msgstr ""

#: ../intro_network_namespaces.rst:27
msgid ""
"Each network namespace also has its own routing table, and in fact this is "
"the main reason for namespaces to exist. A routing table is keyed by "
"destination IP address, so network namespaces are what you need if you want "
"the same destination IP address to mean different things at different times "
"- which is something that OpenStack Networking requires for its feature of "
"providing overlapping IP addresses in different virtual networks."
msgstr ""

#: ../intro_network_namespaces.rst:34
msgid ""
"Each network namespace also has its own set of iptables (for both IPv4 and "
"IPv6). So, you can apply different security to flows with the same IP "
"addressing in different namespaces, as well as different routing."
msgstr ""

#: ../intro_network_namespaces.rst:38
msgid ""
"Any given Linux process runs in a particular network namespace. By default "
"this is inherited from its parent process, but a process with the right "
"capabilities can switch itself into a different namespace; in practice this "
"is mostly done using the :command:`ip netns exec NETNS COMMAND...` "
"invocation, which starts ``COMMAND`` running in the namespace named "
"``NETNS``. Suppose such a process sends out a message to IP address A.B.C.D, "
"the effect of the namespace is that A.B.C.D will be looked up in that "
"namespace's routing table, and that will determine the network device that "
"the message is transmitted through."
msgstr ""

#: ../intro_network_namespaces.rst:48
msgid "Virtual routing and forwarding (VRF)"
msgstr ""

#: ../intro_network_namespaces.rst:50
msgid ""
"Virtual routing and forwarding is an IP technology that allows multiple "
"instances of a routing table to coexist on the same router at the same time. "
"It is another name for the network namespace functionality described above."
msgstr ""

#: ../intro_networking.rst:3
msgid "Introduction to networking"
msgstr ""

#: ../intro_networking.rst:5
msgid ""
"The OpenStack Networking service provides an API that allows users to set up "
"and define network connectivity and addressing in the cloud. The project "
"code-name for Networking services is neutron. OpenStack Networking handles "
"the creation and management of a virtual networking infrastructure, "
"including networks, switches, subnets, and routers for devices managed by "
"the OpenStack Compute service (nova). Advanced services such as firewalls or "
"virtual private networks (VPNs) can also be used."
msgstr ""

#: ../intro_networking.rst:14
msgid ""
"OpenStack Networking consists of the neutron-server, a database for "
"persistent storage, and any number of plug-in agents, which provide other "
"services such as interfacing with native Linux networking mechanisms, "
"external devices, or SDN controllers."
msgstr ""

#: ../intro_networking.rst:19
msgid ""
"OpenStack Networking is entirely standalone and can be deployed to a "
"dedicated host. If your deployment uses a controller host to run centralized "
"Compute components, you can deploy the Networking server to that specific "
"host instead."
msgstr ""

#: ../intro_networking.rst:24
msgid ""
"OpenStack Networking integrates with various other OpenStack components:"
msgstr ""

#: ../intro_networking.rst:27
msgid ""
"OpenStack Identity (keystone) is used for authentication and authorization "
"of API requests."
msgstr ""

#: ../intro_networking.rst:30
msgid ""
"OpenStack Compute (nova) is used to plug each virtual NIC on the VM into a "
"particular network."
msgstr ""

#: ../intro_networking.rst:33
msgid ""
"OpenStack dashboard (horizon) is used by administrators and tenant users to "
"create and manage network services through a web-based graphical interface."
msgstr ""

#: ../intro_networking_components.rst:3
msgid "Network components"
msgstr ""

#: ../intro_networking_components.rst:6
msgid "Switches"
msgstr ""

#: ../intro_networking_components.rst:8
msgid ""
"A switch is a device that is used to connect devices on a network. Switches "
"forward packets on to other devices, using packet switching to pass data "
"along only to devices that need to receive it. Switches operate at layer 2 "
"of the OSI model."
msgstr ""

# #-#-#-#-#  intro_networking_components.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  intro_os_networking_overview.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../intro_networking_components.rst:14
#: ../intro_os_networking_overview.rst:122 ../scenario_legacy_lb.rst:39
#: ../scenario_legacy_ovs.rst:39
msgid "Routers"
msgstr ""

#: ../intro_networking_components.rst:16
msgid ""
"A router is a networking device that connects multiple networks together. "
"Routers are connected to two or more networks. When they receive data "
"packets, they use a routing table to determine which networks to pass the "
"information to."
msgstr ""

#: ../intro_networking_components.rst:22
msgid "Firewalls"
msgstr ""

#: ../intro_networking_components.rst:24
msgid ""
"A firewall is a network device that controls the incoming and outgoing "
"network traffic based on an applied rule set."
msgstr ""

#: ../intro_networking_components.rst:28
msgid "Load balancers"
msgstr ""

#: ../intro_networking_components.rst:30
msgid ""
"A load balancer is a network device that distributes network or application "
"traffic across a number of servers."
msgstr ""

#: ../intro_os_networking.rst:3
msgid "Introduction to OpenStack Networking (neutron)"
msgstr ""

#: ../intro_os_networking_overview.rst:3
msgid "Overview and components"
msgstr ""

#: ../intro_os_networking_overview.rst:5
msgid ""
"OpenStack Networking allows you to create and manage network objects, such "
"as networks, subnets, and ports, which other OpenStack services can use. "
"Plug-ins can be implemented to accommodate different networking equipment "
"and software, providing flexibility to OpenStack architecture and deployment."
msgstr ""

#: ../intro_os_networking_overview.rst:11
msgid ""
"The Networking service, code-named neutron, provides an API that lets you "
"define network connectivity and addressing in the cloud. The Networking "
"service enables operators to leverage different networking technologies to "
"power their cloud networking. The Networking service also provides an API to "
"configure and manage a variety of network services ranging from L3 "
"forwarding and NAT to load balancing, perimeter firewalls, and virtual "
"private networks."
msgstr ""

#: ../intro_os_networking_overview.rst:19
msgid "It includes the following components:"
msgstr ""

#: ../intro_os_networking_overview.rst:22
msgid ""
"The OpenStack Networking API includes support for Layer 2 networking and IP "
"address management (IPAM), as well as an extension for a Layer 3 router "
"construct that enables routing between Layer 2 networks and gateways to "
"external networks. OpenStack Networking includes a growing list of plug-ins "
"that enable interoperability with various commercial and open source network "
"technologies, including routers, switches, virtual switches and software-"
"defined networking (SDN) controllers."
msgstr ""

#: ../intro_os_networking_overview.rst:29
msgid "API server"
msgstr ""

#: ../intro_os_networking_overview.rst:32
msgid ""
"Plugs and unplugs ports, creates networks or subnets, and provides IP "
"addressing. The chosen plug-in and agents differ depending on the vendor and "
"technologies used in the particular cloud. It is important to mention that "
"only one plug-in can be used at a time."
msgstr ""

#: ../intro_os_networking_overview.rst:35
msgid "OpenStack Networking plug-in and agents"
msgstr ""

#: ../intro_os_networking_overview.rst:38
msgid ""
"Accepts and routes RPC requests between agents to complete API operations. "
"Message queue is used in the ML2 plug-in for RPC between the neutron server "
"and neutron agents that run on each hypervisor, in the ML2 mechanism drivers "
"for :term:`Open vSwitch` and :term:`Linux bridge`."
msgstr ""

#: ../intro_os_networking_overview.rst:42
msgid "Messaging queue"
msgstr ""

#: ../intro_os_networking_overview.rst:45
msgid "OpenStack Networking concepts"
msgstr ""

#: ../intro_os_networking_overview.rst:47
msgid ""
"To configure rich network topologies, you can create and configure networks "
"and subnets and instruct other OpenStack services like Compute to attach "
"virtual devices to ports on these networks. OpenStack Compute is a prominent "
"consumer of OpenStack Networking to provide connectivity for its instances. "
"In particular, OpenStack Networking supports each tenant having multiple "
"private networks and enables tenants to choose their own IP addressing "
"scheme, even if those IP addresses overlap with those that other tenants "
"use. There are two types of network, tenant and provider networks. It is "
"possible to share any of these types of networks among tenants as part of "
"the network creation process."
msgstr ""

#: ../intro_os_networking_overview.rst:60
msgid "Tenant networks"
msgstr ""

#: ../intro_os_networking_overview.rst:62
msgid ""
"Users create tenant networks for connectivity within projects. By default, "
"they are fully isolated and are not shared with other projects. OpenStack "
"Networking supports the following types of network isolation and overlay "
"technologies."
msgstr ""

#: ../intro_os_networking_overview.rst:67
msgid ""
"All instances reside on the same network, which can also be shared with the "
"hosts. No VLAN tagging or other network segregation takes place."
msgstr ""

#: ../intro_os_networking_overview.rst:71
msgid ""
"Networking allows users to create multiple provider or tenant networks using "
"VLAN IDs (802.1Q tagged) that correspond to VLANs present in the physical "
"network. This allows instances to communicate with each other across the "
"environment. They can also communicate with dedicated servers, firewalls, "
"load balancers, and other networking infrastructure on the same layer 2 VLAN."
msgstr ""

#: ../intro_os_networking_overview.rst:79
msgid ""
"VXLAN and GRE are encapsulation protocols that create overlay networks to "
"activate and control communication between compute instances. A Networking "
"router is required to allow traffic to flow outside of the GRE or VXLAN "
"tenant network. A router is also required to connect directly-connected "
"tenant networks with external networks, including the Internet. The router "
"provides the ability to connect to instances directly from an external "
"network using floating IP addresses."
msgstr ""

#: ../intro_os_networking_overview.rst:85
msgid "GRE and VXLAN"
msgstr ""

#: ../intro_os_networking_overview.rst:88
msgid "Provider networks"
msgstr ""

#: ../intro_os_networking_overview.rst:90
msgid ""
"The OpenStack administrator creates provider networks. These networks map to "
"existing physical networks in the data center. Useful network types in this "
"category are flat (untagged) and VLAN (802.1Q tagged)."
msgstr ""

#: ../intro_os_networking_overview.rst:97
msgid ""
"To configure rich network topologies, you can create and configure networks "
"and subnets and other OpenStack services like Compute will request to be "
"connected to these networks by requesting virtual ports. In particular, "
"Networking supports each tenant having multiple private networks and enables "
"tenants to choose their own IP addressing scheme, even if those IP addresses "
"overlap with those that other tenants use."
msgstr ""

#: ../intro_os_networking_overview.rst:105
msgid "Subnets"
msgstr ""

#: ../intro_os_networking_overview.rst:107
msgid ""
"A block of IP addresses and associated configuration state. This is also "
"known as the native IPAM (IP Address Management) provided by the networking "
"service for both tenant and provider networks. Subnets are used to allocate "
"IP addresses when new ports are created on a network."
msgstr ""

#: ../intro_os_networking_overview.rst:114
msgid "Ports"
msgstr ""

#: ../intro_os_networking_overview.rst:116
msgid ""
"A port is a connection point for attaching a single device, such as the NIC "
"of a virtual server, to a virtual network. The port also describes the "
"associated network configuration, such as the MAC and IP addresses to be "
"used on that port."
msgstr ""

#: ../intro_os_networking_overview.rst:124
msgid ""
"This is a logical component that forwards data packets between networks. It "
"also provides L3 and NAT forwarding to provide external network access for "
"VMs on tenant networks. Required by certain plug-ins only."
msgstr ""

#: ../intro_os_networking_overview.rst:130
msgid "Security groups"
msgstr ""

#: ../intro_os_networking_overview.rst:132
msgid ""
"A security group acts as a virtual firewall for your compute instances to "
"control inbound and outbound traffic. Security groups act at the port level, "
"not the subnet level. Therefore, each port in a subnet could be assigned to "
"a different set of security groups. If you don't specify a particular group "
"at launch time, the instance is automatically assigned to the default "
"security group for that network."
msgstr ""

#: ../intro_os_networking_overview.rst:139
msgid ""
"Security groups and security group rules give administrators and tenants the "
"ability to specify the type of traffic and direction (ingress/egress) that "
"is allowed to pass through a port. A security group is a container for "
"security group rules. When a port is created, it is associated with a "
"security group. If a security group is not specified, the port is associated "
"with a 'default' security group. By default, this group drops all ingress "
"traffic and allows all egress. Rules can be added to this group in order to "
"change the behavior."
msgstr ""

#: ../intro_os_networking_overview.rst:148
msgid "Extensions"
msgstr ""

#: ../intro_os_networking_overview.rst:150
msgid ""
"The OpenStack Networking service is extensible. Extensions serve two "
"purposes: they allow the introduction of new features in the API without "
"requiring a version change and they allow the introduction of vendor "
"specific niche functionality. Applications can programmatically list "
"available extensions by performing a GET on the :code:`/extensions` URI. "
"Note that this is a versioned request; that is, an extension available in "
"one API version might not be available in another."
msgstr ""

#: ../intro_os_networking_service.rst:3
msgid "Service and component hierarchy"
msgstr ""

#: ../intro_os_networking_service.rst:9 ../intro_os_networking_service.rst:17
#: ../intro_os_networking_service.rst:25 ../intro_os_networking_service.rst:38
#: ../intro_os_networking_service.rst:42 ../intro_os_networking_service.rst:49
#: ../intro_os_networking_service.rst:53 ../intro_os_networking_service.rst:60
msgid "Overview and concepts"
msgstr ""

#: ../intro_os_networking_service.rst:11
msgid "Provides API, manages database, etc."
msgstr ""

#: ../intro_os_networking_service.rst:14
msgid "Plug-ins"
msgstr ""

#: ../intro_os_networking_service.rst:19
msgid "Manages agents"
msgstr ""

#: ../intro_os_networking_service.rst:27
msgid "Provides layer 2/3 connectivity to instances"
msgstr ""

#: ../intro_os_networking_service.rst:29
msgid "Handles physical-virtual network transition"
msgstr ""

#: ../intro_os_networking_service.rst:31
msgid "Handles metadata, etc."
msgstr ""

#: ../intro_os_networking_service.rst:34
msgid "Layer 2 (Ethernet and Switching)"
msgstr ""

#: ../intro_os_networking_service.rst:36
msgid "Linux Bridge"
msgstr ""

#: ../intro_os_networking_service.rst:40
msgid "OVS"
msgstr ""

#: ../intro_os_networking_service.rst:45
msgid "Layer 3 (IP and Routing)"
msgstr ""

# #-#-#-#-#  intro_os_networking_service.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  miscellaneous.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../intro_os_networking_service.rst:56 ../miscellaneous.rst:3
msgid "Miscellaneous"
msgstr ""

#: ../intro_os_networking_service.rst:63
msgid "Services"
msgstr ""

#: ../intro_os_networking_service.rst:66
msgid "Routing services"
msgstr ""

#: ../intro_os_networking_service.rst:71
msgid ""
"The Virtual Private Network as a Service (VPNaaS) is a neutron extension "
"that introduces the VPN feature set."
msgstr ""

#: ../intro_os_networking_service.rst:75
msgid "LbaaS"
msgstr ""

#: ../intro_os_networking_service.rst:77
msgid ""
"The Load-Balancer-as-a-Service (LBaaS) API provisions and configures load "
"balancers. The reference implementation is based on the HAProxy software "
"load balancer."
msgstr ""

#: ../intro_os_networking_service.rst:82
msgid "FwaaS"
msgstr ""

#: ../intro_os_networking_service.rst:84
msgid ""
"The Firewall-as-a-Service (FWaaS) API is an experimental API that enables "
"early adopters and vendors to test their networking implementations."
msgstr ""

#: ../intro_tunnel_technologies.rst:3
msgid "Tunnel technologies"
msgstr ""

#: ../intro_tunnel_technologies.rst:5
msgid ""
"Tunneling allows one network protocol to encapsulate another payload "
"protocol such that packets from the payload protocol are passed as data on "
"the delivery protocol. For example, this can be used to pass data securely "
"over an untrusted network."
msgstr ""

#: ../intro_tunnel_technologies.rst:11
msgid "Generic routing encapsulation (GRE)"
msgstr ""

#: ../intro_tunnel_technologies.rst:13
msgid ""
"GRE carries IP packets with private IP addresses over the Internet using "
"delivery packets with public IP addresses."
msgstr ""

#: ../intro_tunnel_technologies.rst:19
msgid "Virtual extensible local area network (VXLAN)"
msgstr ""

#: ../intro_tunnel_technologies.rst:21
msgid ""
"A VXLAN, virtual extensible local area network, allows the creation of a "
"logical network for virtual machines across various networks. VXLAN "
"encapsulates layer-2 Ethernet frames over layer-4 UDP packets."
msgstr ""

# #-#-#-#-#  migration_legacy_to_L3_HA.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  migration.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../migration.rst:3 ../migration_legacy_to_L3_HA.rst:22
msgid "Migration"
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:3
msgid "Legacy to L3 HA"
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:5
msgid ""
"This section describes the process of migrating from a legacy router to an "
"L3 HA router, which is available starting from the Mitaka release."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:8
msgid ""
"Similar to the legacy scenario, all network traffic on a project network "
"that requires routing actively traverses only one network node regardless of "
"the quantity of network nodes providing HA for the router. Therefore, this "
"high-availability implementation primarily addresses failure situations "
"instead of bandwidth constraints that limit performance. However, it "
"supports random distribution of routers on different network nodes to reduce "
"the chances of bandwidth constraints and to improve scaling."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:16
msgid ""
"This section summarizes parts of :doc:`scenario_l3ha_ovs` and :doc:"
"`scenario_l3ha_lb`. For details regarding needed infrastructure and "
"configuration to allow actual L3 HA deployment, read the relevant guide "
"before continuing with the migration process."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:24
msgid ""
"The migration process is quite simple, it involves turning down the router "
"by setting the router's ``admin_state_up`` attribute to ``False``, upgrading "
"the router to L3 HA and then setting the router's ``admin_state_up`` "
"attribute back to ``True``."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:30 ../migration_legacy_to_L3_HA.rst:104
msgid ""
"Once starting the migration, south-north connections (instances to internet) "
"will be severed. New connections will be able to start only when the "
"migration is complete."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:34 ../migration_legacy_to_L3_HA.rst:108
msgid "Here is the router we have used in our demonstration:"
msgstr ""

# #-#-#-#-#  migration_legacy_to_L3_HA.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../migration_legacy_to_L3_HA.rst:53 ../migration_legacy_to_L3_HA.rst:127
#: ../scenario_dvr_ovs.rst:730 ../scenario_dvr_ovs.rst:756
#: ../scenario_dvr_ovs.rst:930 ../scenario_l3ha_lb.rst:422
#: ../scenario_l3ha_lb.rst:448 ../scenario_l3ha_lb.rst:611
#: ../scenario_l3ha_ovs.rst:432 ../scenario_l3ha_ovs.rst:458
#: ../scenario_l3ha_ovs.rst:621 ../scenario_legacy_lb.rst:741
#: ../scenario_legacy_lb.rst:763 ../scenario_legacy_ovs.rst:843
#: ../scenario_legacy_ovs.rst:865 ../scenario_provider_lb.rst:491
#: ../scenario_provider_lb.rst:512 ../scenario_provider_ovs.rst:542
#: ../scenario_provider_ovs.rst:563
msgid "Source the administrative project credentials."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:54 ../migration_legacy_to_L3_HA.rst:128
msgid ""
"Set the admin_state_up to ``False``. This will severe south-north "
"connections until admin_state_up is set to ``True`` again."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:62 ../migration_legacy_to_L3_HA.rst:136
msgid "Set the ``ha`` attribute of the router to ``True``."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:69 ../migration_legacy_to_L3_HA.rst:143
msgid ""
"Set the admin_state_up to ``True``. This will severe south-north connections "
"until admin_state_up is set to ``True`` again."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:77 ../migration_legacy_to_L3_HA.rst:151
msgid "Make sure that the router's ``ha`` attribute has changed to ``True``."
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:98
msgid "L3 HA to Legacy"
msgstr ""

#: ../migration_legacy_to_L3_HA.rst:100
msgid ""
"To return to legacy mode, you turn down the router again, turning off L3 HA "
"and starting the router again"
msgstr ""

#: ../migration_legacy_to_dvr.rst:3
msgid "Legacy to DVR"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:3
msgid "Migrate legacy nova-network to OpenStack Networking (neutron)"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:5
msgid ""
"Two networking models exist in OpenStack. The first is called legacy "
"networking (nova-network) and it is a sub-process embedded in the Compute "
"project (nova). This model has some limitations, such as creating complex "
"network topologies, extending its back-end implementation to vendor-specific "
"technologies, and providing tenant-specific networking elements. These "
"limitations are the main reasons the OpenStack Networking (neutron) model "
"was created."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:13
msgid ""
"This section describes the process of migrating clouds based on the legacy "
"networking model to the OpenStack Networking model. This process requires "
"additional changes to both compute and networking to support the migration. "
"This document describes the overall process and the features required in "
"both Networking and Compute."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:19
msgid ""
"The current process as designed is a minimally viable migration with the "
"goal of deprecating and then removing legacy networking. Both the Compute "
"and Networking teams agree that a \"one-button\" migration process from "
"legacy networking to OpenStack Networking (neutron) is not an essential "
"requirement for the deprecation and removal of the legacy networking at a "
"future date. This section includes a process and tools which are designed to "
"solve a simple use case migration."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:27
msgid ""
"Users are encouraged to take these tools, test them, provide feedback, and "
"then expand on the feature set to suit their own deployments; deployers that "
"refrain from participating in this process intending to wait for a path that "
"better suits their use case are likely to be disappointed."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:34
msgid "Impact and limitations"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:36
msgid ""
"The migration process from the legacy nova-network networking service to "
"OpenStack Networking (neutron) has some limitations and impacts on the "
"operational state of the cloud. It is critical to understand them in order "
"to decide whether or not this process is acceptable for your cloud and all "
"users."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:43
msgid "Management impact"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:45
msgid ""
"The Networking REST API is publicly read-only until after the migration is "
"complete. During the migration, Networking REST API is read-write only to "
"nova-api, and changes to Networking are only allowed via nova-api."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:50
msgid ""
"The Compute REST API is available throughout the entire process, although "
"there is a brief period where it is made read-only during a database "
"migration. The Networking REST API will need to expose (to nova-api) all "
"details necessary for reconstructing the information previously held in the "
"legacy networking database."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:56
msgid ""
"Compute needs a per-hypervisor \"has_transitioned\" boolean change in the "
"data model to be used during the migration process. This flag is no longer "
"required once the process is complete."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:61
msgid "Operations impact"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:63
msgid ""
"In order to support a wide range of deployment options, the migration "
"process described here requires a rolling restart of hypervisors. The rate "
"and timing of specific hypervisor restarts is under the control of the "
"operator."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:68
msgid ""
"The migration may be paused, even for an extended period of time (for "
"example, while testing or investigating issues) with some hypervisors on "
"legacy networking and some on Networking, and Compute API remains fully "
"functional. Individual hypervisors may be rolled back to legacy networking "
"during this stage of the migration, although this requires an additional "
"restart."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:75
msgid ""
"In order to support the widest range of deployer needs, the process "
"described here is easy to automate but is not already automated. Deployers "
"should expect to perform multiple manual steps or write some simple scripts "
"in order to perform this migration."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:81
msgid "Performance impact"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:83
msgid ""
"During the migration, nova-network API calls will go through an additional "
"internal conversion to Networking calls. This will have different and likely "
"poorer performance characteristics compared with either the pre-migration or "
"post-migration APIs."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:89
msgid "Migration process overview"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:91
msgid ""
"Start neutron-server in intended final config, except with REST API "
"restricted to read-write only by nova-api."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:93
msgid "Make the Compute REST API read-only."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:94
msgid ""
"Run a DB dump/restore tool that creates Networking data structures "
"representing current legacy networking config."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:96
msgid ""
"Enable a nova-api proxy that recreates internal Compute objects from "
"Networking information (via the Networking REST API)."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:99
msgid ""
"Make Compute REST API read-write again. This means legacy networking DB is "
"now unused, new changes are now stored in the Networking DB, and no rollback "
"is possible from here without losing those new changes."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:105
msgid ""
"At this moment the Networking DB is the source of truth, but nova-api is the "
"only public read-write API."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:108
msgid ""
"Next, you'll need to migrate each hypervisor.  To do that, follow these "
"steps:"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:110
msgid ""
"Disable the hypervisor. This would be a good time to live migrate or "
"evacuate the compute node, if supported."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:112
msgid "Disable nova-compute."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:113
msgid "Enable the Networking agent."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:114
msgid ""
"Set the \"has_transitioned\" flag in the Compute hypervisor database/config."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:115
msgid ""
"Reboot the hypervisor (or run \"smart\" live transition tool if available)."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:116
msgid "Re-enable the hypervisor."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:118
msgid ""
"At this point, all compute nodes have been migrated, but they are still "
"using the nova-api API and Compute gateways. Finally, enable OpenStack "
"Networking by following these steps:"
msgstr ""

#: ../migration_nova_network_to_neutron.rst:122
msgid ""
"Bring up the Networking (l3) nodes. The new routers will have identical MAC"
"+IPs as old Compute gateways so some sort of immediate cutover is possible, "
"except for stateful connections issues such as NAT."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:126
msgid "Make the Networking API read-write and disable legacy networking."
msgstr ""

#: ../migration_nova_network_to_neutron.rst:128
msgid "Migration Completed!"
msgstr ""

#: ../misc_add_ha_for_DHCP.rst:3
msgid "Adding high availability for DHCP"
msgstr ""

#: ../misc_add_ha_for_DHCP.rst:5
msgid "FIXME (Simple note, needs to be added.)"
msgstr ""

#: ../misc_add_ha_for_DHCP.rst:8
msgid "DHCP agents"
msgstr ""

#: ../misc_add_ha_for_DHCP.rst:10
msgid ""
"FIXME: Content needs to be written; see DHCP agents (http://docs.openstack."
"org/admin-guide-cloud/networking_multi-dhcp-agents.html)"
msgstr ""

#: ../misc_libvirt.rst:3
msgid "Disabling libvirt networking"
msgstr ""

#: ../misc_libvirt.rst:5
msgid ""
"Most OpenStack deployments use the libvirt_ toolkit for interacting with the "
"hypervisor. Specifically, OpenStack Compute uses libvirt for tasks such as "
"booting and terminating virtual machine instances. When OpenStack Compute "
"boots a new instance, libvirt provides OpenStack with the VIF associated "
"with the instance, and OpenStack Compute plugs the VIF into a virtual device "
"provided by OpenStack Network. The libvirt toolkit itself does not provide "
"any networking functionality in OpenStack deployments."
msgstr ""

#: ../misc_libvirt.rst:15
msgid ""
"However, libvirt is capable of providing networking services to the virtual "
"machines that it manages. In particular, libvirt can be configured to "
"provide networking functionality akin to a simplified, single-node version "
"of OpenStack. Users can use libvirt to create layer 2 networks that are "
"similar to OpenStack Networking's networks, confined to a single node."
msgstr ""

#: ../misc_libvirt.rst:22
msgid "libvirt network implementation"
msgstr ""

#: ../misc_libvirt.rst:24
msgid ""
"By default, libvirt's networking functionality is enabled, and libvirt "
"creates a network when the system boots. To implement this network, libvirt "
"leverages some of the same technologies that OpenStack Network does. In "
"particular, libvirt uses:"
msgstr ""

#: ../misc_libvirt.rst:29
msgid "Linux bridging for implementing a layer 2 network"
msgstr ""

#: ../misc_libvirt.rst:30
msgid "dnsmasq for providing IP addresses to virtual machines using DHCP"
msgstr ""

#: ../misc_libvirt.rst:31
msgid ""
"iptables to implement SNAT so instances can connect out to the public "
"internet, and to ensure that virtual machines are permitted to communicate "
"with dnsmasq using DHCP"
msgstr ""

#: ../misc_libvirt.rst:35
msgid ""
"By default, libvirt creates a network named *default*. The details of this "
"network may vary by distribution; on Ubuntu this network involves:"
msgstr ""

#: ../misc_libvirt.rst:38
msgid ""
"a Linux bridge named ``virbr0`` with an IP address of ``192.168.122.1/24``"
msgstr ""

#: ../misc_libvirt.rst:39
msgid ""
"a dnsmasq process that listens on the ``virbr0`` interface and hands out IP "
"addresses in the range ``192.168.122.2-192.168.122.254``"
msgstr ""

#: ../misc_libvirt.rst:41
msgid "a set of iptables rules"
msgstr ""

#: ../misc_libvirt.rst:43
msgid ""
"When libvirt boots a virtual machine, it places the machine's VIF in the "
"bridge ``virbr0`` unless explicitly told not to."
msgstr ""

#: ../misc_libvirt.rst:46
msgid ""
"On Ubuntu, the iptables ruleset that libvirt creates includes the following "
"rules::"
msgstr ""

#: ../misc_libvirt.rst:69
msgid ""
"The following shows the dnsmasq process that libvirt manages as it appears "
"in the output of :command:`ps`::"
msgstr ""

#: ../misc_libvirt.rst:75
msgid "How to disable libvirt networks"
msgstr ""

#: ../misc_libvirt.rst:77
msgid ""
"Although OpenStack does not make use of libvirt's networking, this "
"networking will not interfere with OpenStack's behavior, and can be safely "
"left enabled. However, libvirt's networking can be a nuisance when debugging "
"OpenStack networking issues. Because libvirt creates an additional bridge, "
"dnsmasq process, and iptables ruleset, these may distract an operator "
"engaged in network troubleshooting. Unless you need to start up virtual "
"machines using libvirt directly, you can safely disable libvirt's network."
msgstr ""

#: ../misc_libvirt.rst:86
msgid "To view the defined libvirt networks and their state::"
msgstr ""

#: ../misc_libvirt.rst:93
msgid "To deactivate the libvirt network named *default*::"
msgstr ""

#: ../misc_libvirt.rst:97
msgid ""
"Deactivating the network will remove the ``virbr0`` bridge, terminate the "
"dnsmasq process, and remove the iptables rules."
msgstr ""

#: ../misc_libvirt.rst:100
msgid "To prevent the network from automatically starting on boot::"
msgstr ""

#: ../misc_libvirt.rst:104
msgid "To activate the network after it has been deactivated::"
msgstr ""

#: ../scenario_dvr_ovs.rst:3
msgid "Scenario: High Availability using Distributed Virtual Routing (DVR)"
msgstr ""

#: ../scenario_dvr_ovs.rst:5
msgid ""
"This scenario describes the high-availability Distributed Virtual Routing "
"(DVR) implementation of the OpenStack Networking service using the ML2 plug-"
"in and Open vSwitch. The example configuration creates one flat external "
"network and one VXLAN project (tenant) network. However, This configuration "
"also supports VLAN external networks, VLAN project networks, and GRE project "
"networks."
msgstr ""

#: ../scenario_dvr_ovs.rst:12
msgid ""
"The DVR architecture augments the legacy architecture by providing direct "
"connectivity to external networks on compute nodes. For instances with a "
"floating IP address, routing between project and external networks resides "
"completely on the compute nodes to eliminate single point of failure and "
"performance issues with legacy network nodes. Routing also resides "
"completely on the compute nodes for instances with a fixed or floating IP "
"address using project networks on the same distributed virtual router. "
"However, instances with a fixed IP address still rely on the network node "
"for routing and SNAT services between project and external networks."
msgstr ""

#: ../scenario_dvr_ovs.rst:23
msgid ""
"In the Juno (initial) release, DVR supports VXLAN and GRE project networks. "
"In the Kilo release, support was added for DVR with VLAN project networks. "
"All releases support flat and VLAN external networks."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:28 ../scenario_l3ha_lb.rst:43
#: ../scenario_l3ha_ovs.rst:42 ../scenario_legacy_lb.rst:63
#: ../scenario_legacy_ovs.rst:62 ../scenario_provider_lb.rst:48
#: ../scenario_provider_ovs.rst:41
msgid "Prerequisites"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:30 ../scenario_legacy_lb.rst:65
#: ../scenario_legacy_ovs.rst:64
msgid ""
"These prerequisites define the minimal physical infrastructure and immediate "
"OpenStack service dependencies necessary to deploy this scenario. For "
"example, the Networking service immediately depends on the Identity service "
"and the Compute service immediately depends on the Networking service. These "
"dependencies lack services such as the Image service because the Networking "
"service does not immediately depend on it. However, the Compute service "
"depends on the Image service to launch an instance. The example "
"configuration in this scenario assumes basic configuration knowledge of "
"Networking service components."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:41 ../scenario_l3ha_lb.rst:57
#: ../scenario_l3ha_ovs.rst:56 ../scenario_legacy_lb.rst:76
#: ../scenario_legacy_ovs.rst:75 ../scenario_provider_lb.rst:63
#: ../scenario_provider_ovs.rst:56
msgid "Infrastructure"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:43 ../scenario_l3ha_lb.rst:59
#: ../scenario_l3ha_ovs.rst:58 ../scenario_legacy_lb.rst:78
#: ../scenario_legacy_ovs.rst:77
msgid "One controller node with one network interface: management."
msgstr ""

#: ../scenario_dvr_ovs.rst:44
msgid ""
"One network node with four network interfaces: management, project tunnel "
"networks, VLAN project networks, and external (typically the Internet). The "
"Open vSwitch bridge ``br-vlan`` must contain a port on the VLAN interface "
"and the Open vSwitch bridge ``br-ex`` must contain a port on the external "
"interface."
msgstr ""

#: ../scenario_dvr_ovs.rst:49
msgid ""
"At least two compute nodes with four network interfaces: management, project "
"tunnel networks, project VLAN networks, and external (typically the "
"Internet). The Open vSwitch bridge ``br-vlan`` must contain a port on the "
"VLAN interface and the Open vSwitch bridge ``br-ex`` must contain a port on "
"the external interface."
msgstr ""

#: ../scenario_dvr_ovs.rst:55
msgid ""
"In the example configuration, the management network uses 10.0.0.0/24, the "
"tunnel network uses 10.0.1.0/24, and the external network uses "
"203.0.113.0/24. The VLAN network does not require an IP address range "
"because it only handles layer 2 connectivity."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:70 ../scenario_l3ha_ovs.rst:89
msgid ""
"For VLAN external and project networks, the network infrastructure must "
"support VLAN tagging. For best performance with VXLAN and GRE project "
"networks, the network infrastructure should support jumbo frames."
msgstr ""

#: ../scenario_dvr_ovs.rst:75
msgid ""
"Proper operation of this scenario requires Open vSwitch 2.1 or newer. VXLAN "
"requires kernel 3.13 or newer. Also, the Kilo release increases stability "
"and reliability of DVR considerably over the Juno release."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:80 ../scenario_l3ha_lb.rst:94
#: ../scenario_l3ha_ovs.rst:98 ../scenario_legacy_lb.rst:112
#: ../scenario_legacy_ovs.rst:117 ../scenario_provider_lb.rst:84
#: ../scenario_provider_ovs.rst:79
msgid "OpenStack services - controller node"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:82 ../scenario_l3ha_lb.rst:96
#: ../scenario_l3ha_ovs.rst:100 ../scenario_legacy_lb.rst:114
#: ../scenario_legacy_ovs.rst:119 ../scenario_provider_lb.rst:86
#: ../scenario_provider_ovs.rst:81
msgid ""
"Operational SQL server with ``neutron`` database and appropriate "
"configuration in the :file:`neutron.conf` file."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:84 ../scenario_l3ha_lb.rst:98
#: ../scenario_l3ha_ovs.rst:102 ../scenario_legacy_lb.rst:116
#: ../scenario_legacy_ovs.rst:121 ../scenario_provider_lb.rst:88
#: ../scenario_provider_ovs.rst:83
msgid ""
"Operational message queue service with appropriate configuration in the :"
"file:`neutron.conf` file."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:86 ../scenario_dvr_ovs.rst:95
#: ../scenario_dvr_ovs.rst:103 ../scenario_l3ha_lb.rst:100
#: ../scenario_l3ha_lb.rst:109 ../scenario_l3ha_lb.rst:117
#: ../scenario_l3ha_ovs.rst:104 ../scenario_l3ha_ovs.rst:114
#: ../scenario_l3ha_ovs.rst:122 ../scenario_legacy_lb.rst:118
#: ../scenario_legacy_lb.rst:127 ../scenario_legacy_lb.rst:135
#: ../scenario_legacy_ovs.rst:123 ../scenario_legacy_ovs.rst:133
#: ../scenario_legacy_ovs.rst:141 ../scenario_provider_lb.rst:90
#: ../scenario_provider_lb.rst:100 ../scenario_provider_ovs.rst:85
#: ../scenario_provider_ovs.rst:95
msgid ""
"Operational OpenStack Identity service with appropriate configuration in "
"the :file:`neutron.conf` file."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:88 ../scenario_l3ha_lb.rst:102
#: ../scenario_legacy_lb.rst:120 ../scenario_legacy_lb.rst:137
#: ../scenario_legacy_ovs.rst:125 ../scenario_legacy_ovs.rst:143
#: ../scenario_provider_lb.rst:92 ../scenario_provider_lb.rst:102
#: ../scenario_provider_ovs.rst:87 ../scenario_provider_ovs.rst:97
msgid ""
"Operational OpenStack Compute controller/management service with appropriate "
"configuration to use neutron in the :file:`nova.conf` file."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:90 ../scenario_l3ha_lb.rst:104
#: ../scenario_l3ha_ovs.rst:109 ../scenario_legacy_lb.rst:122
#: ../scenario_legacy_ovs.rst:128
msgid "Neutron server service, ML2 plug-in, and any dependencies."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:93 ../scenario_l3ha_lb.rst:107
#: ../scenario_legacy_lb.rst:125 ../scenario_legacy_ovs.rst:131
msgid "OpenStack services - network node"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:97 ../scenario_l3ha_ovs.rst:116
#: ../scenario_legacy_ovs.rst:135
msgid ""
"Open vSwitch service, ML2 plug-in, Open vSwitch agent, L3 agent, DHCP agent, "
"metadata agent, and any dependencies."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:101 ../scenario_l3ha_lb.rst:115
#: ../scenario_l3ha_ovs.rst:120 ../scenario_legacy_lb.rst:133
#: ../scenario_legacy_ovs.rst:139 ../scenario_provider_lb.rst:98
#: ../scenario_provider_ovs.rst:93
msgid "OpenStack services - compute nodes"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:105 ../scenario_l3ha_lb.rst:119
msgid ""
"Operational OpenStack Compute hypervisor service with appropriate "
"configuration to use neutron in the :file:`nova.conf` file."
msgstr ""

#: ../scenario_dvr_ovs.rst:107
msgid ""
"Open vSwitch service, ML2 plug-in, Open vSwitch agent, L3 agent, metadata "
"agent, and any dependencies."
msgstr ""

#: ../scenario_dvr_ovs.rst:117
msgid ""
"The term *north-south* generally defines network traffic that travels "
"between an instance and external network (typically the Internet) and the "
"term *east-west* generally defines network traffic that travels between "
"instances."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:122 ../scenario_legacy_lb.rst:156
#: ../scenario_legacy_ovs.rst:162
msgid "The network node contains the following network components:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:124 ../scenario_dvr_ovs.rst:150
#: ../scenario_l3ha_ovs.rst:138 ../scenario_l3ha_ovs.rst:157
#: ../scenario_legacy_ovs.rst:164 ../scenario_legacy_ovs.rst:183
msgid ""
"Open vSwitch agent managing virtual switches, connectivity among them, and "
"interaction via virtual ports with other network components such as "
"namespaces, Linux bridges, and underlying interfaces."
msgstr ""

#: ../scenario_dvr_ovs.rst:127
msgid ""
"DHCP agent managing the ``qdhcp`` namespaces. The ``dhcp`` namespaces "
"provide DHCP services for instances using project networks."
msgstr ""

#: ../scenario_dvr_ovs.rst:129
msgid "L3 agent managing the ``qrouter`` and ``snat`` namespaces."
msgstr ""

#: ../scenario_dvr_ovs.rst:131
msgid ""
"For instances using project networks on legacy routers, the ``qrouter`` "
"namespaces route *north-south* and *east-west* network traffic and perform "
"DNAT/SNAT similar to the legacy scenarios. They also route metadata traffic "
"between instances and the metadata agent."
msgstr ""

#: ../scenario_dvr_ovs.rst:135
msgid ""
"For instances with a fixed IP address using project networks on distributed "
"routers, the ``snat`` namespaces perform SNAT for *north-south* network "
"traffic."
msgstr ""

#: ../scenario_dvr_ovs.rst:139
msgid ""
"Metadata agent handling metadata operations for instances using project "
"networks on legacy routers."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:148 ../scenario_l3ha_lb.rst:152
#: ../scenario_legacy_lb.rst:175 ../scenario_legacy_ovs.rst:181
#: ../scenario_provider_lb.rst:133 ../scenario_provider_ovs.rst:129
msgid "The compute nodes contain the following network components:"
msgstr ""

#: ../scenario_dvr_ovs.rst:154
msgid "L3 agent managing the ``qrouter`` and ``fip`` namespaces."
msgstr ""

#: ../scenario_dvr_ovs.rst:156
msgid ""
"For instances with a floating IP address using project networks on "
"distributed routers, the ``fip`` namespaces route *north-south* network "
"traffic and perform DNAT/SNAT."
msgstr ""

#: ../scenario_dvr_ovs.rst:159
msgid ""
"For instances with a fixed or floating IP address using project networks on "
"distributed routers, the ``qrouter`` namespaces route *east-west* traffic."
msgstr ""

#: ../scenario_dvr_ovs.rst:163
msgid ""
"Metadata agent handling metadata operations for instances using project "
"networks on distributed routers."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:165 ../scenario_l3ha_ovs.rst:160
#: ../scenario_provider_ovs.rst:134
msgid "Linux bridges handling security groups."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:168 ../scenario_l3ha_ovs.rst:163
#: ../scenario_provider_ovs.rst:137
msgid ""
"Due to limitations with Open vSwitch and *iptables*, the Networking service "
"uses a Linux bridge to manage security groups for instances."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:179 ../scenario_l3ha_lb.rst:167
#: ../scenario_l3ha_ovs.rst:176 ../scenario_legacy_lb.rst:188
#: ../scenario_legacy_ovs.rst:197 ../scenario_provider_lb.rst:150
#: ../scenario_provider_ovs.rst:151
msgid "Packet flow"
msgstr ""

#: ../scenario_dvr_ovs.rst:182
msgid "Case 1: North/south for instances with a fixed IP address"
msgstr ""

#: ../scenario_dvr_ovs.rst:184
msgid ""
"For instances with a fixed IP address using project networks on distributed "
"routers, the network node routes *north-south* network traffic between "
"project and external networks."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:188 ../scenario_dvr_ovs.rst:275
#: ../scenario_legacy_lb.rst:201 ../scenario_legacy_lb.rst:297
#: ../scenario_legacy_ovs.rst:210 ../scenario_legacy_ovs.rst:302
#: ../scenario_provider_lb.rst:168 ../scenario_provider_ovs.rst:174
msgid "External network"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:190 ../scenario_dvr_ovs.rst:277
#: ../scenario_legacy_lb.rst:203 ../scenario_legacy_lb.rst:299
#: ../scenario_legacy_ovs.rst:212 ../scenario_legacy_ovs.rst:304
#: ../scenario_provider_lb.rst:170 ../scenario_provider_ovs.rst:176
msgid "Network 203.0.113.0/24"
msgstr ""

#: ../scenario_dvr_ovs.rst:191 ../scenario_dvr_ovs.rst:278
msgid "Gateway 203.0.113.1 with MAC address *EG*"
msgstr ""

#: ../scenario_dvr_ovs.rst:192 ../scenario_dvr_ovs.rst:279
msgid "Floating IP range 203.0.113.101 to 203.0.113.200"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:193 ../scenario_dvr_ovs.rst:280
#: ../scenario_legacy_lb.rst:205 ../scenario_legacy_lb.rst:301
#: ../scenario_legacy_ovs.rst:214 ../scenario_legacy_ovs.rst:306
msgid "Project network router interface 203.0.113.101 *TR*"
msgstr ""

#: ../scenario_dvr_ovs.rst:194
msgid "Project network SNAT interface 192.168.1.2 with MAC address *TN*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:196 ../scenario_dvr_ovs.rst:282
#: ../scenario_legacy_lb.rst:207 ../scenario_legacy_lb.rst:303
#: ../scenario_legacy_lb.rst:471 ../scenario_legacy_ovs.rst:216
#: ../scenario_legacy_ovs.rst:308 ../scenario_legacy_ovs.rst:535
msgid "Project network"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:198 ../scenario_dvr_ovs.rst:284
#: ../scenario_dvr_ovs.rst:372 ../scenario_legacy_lb.rst:209
#: ../scenario_legacy_lb.rst:305 ../scenario_legacy_ovs.rst:218
#: ../scenario_legacy_ovs.rst:310
msgid "Network 192.168.1.0/24"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:199 ../scenario_dvr_ovs.rst:285
#: ../scenario_legacy_lb.rst:210 ../scenario_legacy_lb.rst:306
#: ../scenario_legacy_ovs.rst:219 ../scenario_legacy_ovs.rst:311
msgid "Gateway 192.168.1.1 with MAC address *TG*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:201 ../scenario_dvr_ovs.rst:380
#: ../scenario_legacy_lb.rst:212 ../scenario_legacy_lb.rst:308
#: ../scenario_legacy_lb.rst:399 ../scenario_legacy_lb.rst:475
#: ../scenario_legacy_ovs.rst:221 ../scenario_legacy_ovs.rst:313
#: ../scenario_legacy_ovs.rst:405 ../scenario_legacy_ovs.rst:539
#: ../scenario_provider_lb.rst:177 ../scenario_provider_lb.rst:230
#: ../scenario_provider_lb.rst:294 ../scenario_provider_ovs.rst:183
#: ../scenario_provider_ovs.rst:240 ../scenario_provider_ovs.rst:311
msgid "Compute node 1"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:203 ../scenario_dvr_ovs.rst:382
#: ../scenario_legacy_lb.rst:214 ../scenario_legacy_ovs.rst:223
msgid "Instance 1 192.168.1.11 with MAC address *I1*"
msgstr ""

#: ../scenario_dvr_ovs.rst:204 ../scenario_dvr_ovs.rst:291
#: ../scenario_dvr_ovs.rst:383
msgid "DVR MAC address *D1*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:206 ../scenario_dvr_ovs.rst:294
#: ../scenario_legacy_lb.rst:216 ../scenario_legacy_lb.rst:313
#: ../scenario_legacy_ovs.rst:225 ../scenario_legacy_ovs.rst:318
msgid "Instance 1 resides on compute node 1 and uses a project network."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:207 ../scenario_legacy_lb.rst:217
#: ../scenario_legacy_ovs.rst:226 ../scenario_provider_lb.rst:182
#: ../scenario_provider_ovs.rst:188
msgid "The instance sends a packet to a host on the external network."
msgstr ""

#: ../scenario_dvr_ovs.rst:209 ../scenario_dvr_ovs.rst:297
#: ../scenario_dvr_ovs.rst:395
msgid ""
"This scenario supports both VLAN and GRE/VXLAN project networks. However, "
"the packet flow only considers one instance using a VXLAN project network "
"for simplicity."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:213 ../scenario_dvr_ovs.rst:399
#: ../scenario_legacy_lb.rst:223 ../scenario_legacy_lb.rst:349
#: ../scenario_legacy_lb.rst:412 ../scenario_legacy_lb.rst:489
#: ../scenario_legacy_ovs.rst:228 ../scenario_legacy_ovs.rst:355
#: ../scenario_legacy_ovs.rst:418 ../scenario_legacy_ovs.rst:553
#: ../scenario_provider_lb.rst:242 ../scenario_provider_lb.rst:307
#: ../scenario_provider_ovs.rst:252 ../scenario_provider_ovs.rst:324
msgid "The following steps involve compute node 1:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:215 ../scenario_legacy_ovs.rst:230
#: ../scenario_provider_ovs.rst:192
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the Linux bridge "
"``qbr``. The packet contains destination MAC address *TG* because the "
"destination resides on another network."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:218 ../scenario_dvr_ovs.rst:404
#: ../scenario_legacy_ovs.rst:233 ../scenario_legacy_ovs.rst:423
msgid ""
"Security group rules (2) on the Linux bridge ``qbr`` handle state tracking "
"for the packet."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:220 ../scenario_dvr_ovs.rst:339
#: ../scenario_dvr_ovs.rst:406 ../scenario_legacy_ovs.rst:235
#: ../scenario_legacy_ovs.rst:425 ../scenario_legacy_ovs.rst:560
#: ../scenario_provider_ovs.rst:197 ../scenario_provider_ovs.rst:259
#: ../scenario_provider_ovs.rst:331
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the Open vSwitch integration "
"bridge ``br-int``."
msgstr ""

#: ../scenario_dvr_ovs.rst:222
msgid ""
"The Open vSwitch integration bridge ``br-int`` modifies the packet to "
"contain the internal tag for project network 1."
msgstr ""

#: ../scenario_dvr_ovs.rst:224
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet (3) to "
"the project network 1 gateway *TG* interface ``qr`` in the distributed "
"router namespace ``qrouter``."
msgstr ""

#: ../scenario_dvr_ovs.rst:227
msgid ""
"The distributed router ``qrouter`` namespace resolves the project network 1 "
"SNAT interface MAC address *TN* on the ``sg`` interface (4) in the SNAT "
"namespace ``snat`` and forwards the packet to the Open vSwitch integration "
"bridge ``br-int``."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:231 ../scenario_dvr_ovs.rst:418
#: ../scenario_legacy_ovs.rst:250 ../scenario_legacy_ovs.rst:348
#: ../scenario_legacy_ovs.rst:440 ../scenario_legacy_ovs.rst:488
#: ../scenario_legacy_ovs.rst:575
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"Open vSwitch tunnel bridge ``br-tun``."
msgstr ""

#: ../scenario_dvr_ovs.rst:233 ../scenario_dvr_ovs.rst:420
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` replaces the packet source MAC "
"address *I1* with *D1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:235
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` wraps the packet in a VXLAN tunnel "
"that contains a tag for project network 1."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:237 ../scenario_legacy_ovs.rst:254
#: ../scenario_legacy_ovs.rst:444
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` forwards the packet to the network "
"node via the tunnel interface."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:240 ../scenario_legacy_lb.rst:252
#: ../scenario_legacy_lb.rst:320 ../scenario_legacy_lb.rst:425
#: ../scenario_legacy_ovs.rst:257 ../scenario_legacy_ovs.rst:321
#: ../scenario_legacy_ovs.rst:447
msgid "The following steps involve the network node:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:242 ../scenario_dvr_ovs.rst:429
#: ../scenario_legacy_ovs.rst:270 ../scenario_legacy_ovs.rst:368
#: ../scenario_legacy_ovs.rst:460 ../scenario_legacy_ovs.rst:508
#: ../scenario_legacy_ovs.rst:595
msgid ""
"The tunnel interface forwards the packet to the Open vSwitch tunnel bridge "
"``br-tun``."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:244 ../scenario_legacy_ovs.rst:462
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` unwraps the packet and adds the "
"internal tag for project network 1."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:246 ../scenario_dvr_ovs.rst:432
#: ../scenario_legacy_ovs.rst:274 ../scenario_legacy_ovs.rst:372
#: ../scenario_legacy_ovs.rst:464 ../scenario_legacy_ovs.rst:512
#: ../scenario_legacy_ovs.rst:599
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` forwards the packet to the Open "
"vSwitch integration bridge ``br-int``."
msgstr ""

#: ../scenario_dvr_ovs.rst:248
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the packet source "
"MAC address *D1* with *TG*."
msgstr ""

#: ../scenario_dvr_ovs.rst:250
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"``sg`` interface (4) in the SNAT namespace ``snat``."
msgstr ""

#: ../scenario_dvr_ovs.rst:252
msgid ""
"The *iptables* service (5) performs SNAT on the packet using the project "
"network 1 router interface IP address *TR* on the ``qg`` interface (6)."
msgstr ""

#: ../scenario_dvr_ovs.rst:254
msgid ""
"The ``qg`` interface forwards the packet to the Open vSwitch external bridge "
"``br-ex``."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:256 ../scenario_dvr_ovs.rst:356
#: ../scenario_legacy_ovs.rst:287
msgid ""
"The Open vSwitch external bridge ``br-ex`` forwards the packet to the "
"external network via the external interface."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:260 ../scenario_legacy_lb.rst:286
#: ../scenario_legacy_lb.rst:377 ../scenario_legacy_lb.rst:459
#: ../scenario_legacy_lb.rst:515 ../scenario_legacy_ovs.rst:291
#: ../scenario_legacy_ovs.rst:383 ../scenario_legacy_ovs.rst:523
#: ../scenario_legacy_ovs.rst:610 ../scenario_provider_lb.rst:209
#: ../scenario_provider_lb.rst:279 ../scenario_provider_lb.rst:339
#: ../scenario_provider_ovs.rst:219 ../scenario_provider_ovs.rst:296
#: ../scenario_provider_ovs.rst:362
msgid "Return traffic follows similar steps in reverse."
msgstr ""

#: ../scenario_dvr_ovs.rst:266
msgid "Case 2: North/south for instances with a floating IP address"
msgstr ""

#: ../scenario_dvr_ovs.rst:268
msgid ""
"For instances with a floating IP address using project networks on "
"distributed routers, the compute node containing the instance routes *north-"
"south* network traffic between project and external networks, avoiding the "
"network node. Given the complexity of this case, the following case covers "
"both the flow of network traffic from the external network to an instance "
"and from an instance to the external network."
msgstr ""

#: ../scenario_dvr_ovs.rst:287
msgid "Compute node"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:289 ../scenario_legacy_lb.rst:310
#: ../scenario_legacy_ovs.rst:315
msgid ""
"Instance 1 192.168.1.11 with MAC address *I1* and floating IP address "
"203.0.113.102 *F1*"
msgstr ""

#: ../scenario_dvr_ovs.rst:292
msgid "DVR internal IP addresses *DA1* and *DA2*"
msgstr ""

#: ../scenario_dvr_ovs.rst:295
msgid "Instance 1 sends a packet to a host on the external network."
msgstr ""

#: ../scenario_dvr_ovs.rst:301
msgid ""
"The following steps involve a packet inbound from the external network to an "
"instance on compute node 1:"
msgstr ""

#: ../scenario_dvr_ovs.rst:304
msgid ""
"The external interface forwards the packet to the Open vSwitch external "
"bridge ``br-ex``. The packet contains destination IP address *F1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:307
msgid ""
"The Open vSwitch external bridge ``br-ex`` forwards the packet to the ``fg`` "
"interface (1) in the floating IP namespace ``fip``. The ``fg`` interface "
"responds to any ARP requests for the instance floating IP address *F1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:311
msgid ""
"The floating IP namespace ``fip`` routes the packet (2) to the distributed "
"router namespace ``qrouter`` using DVR internal IP addresses *DA1* and "
"*DA2*. The ``fpr`` interface (3) contains DVR internal IP address *DA1* and "
"the ``rfp`` interface (4) contains DVR internal IP address *DA2*."
msgstr ""

#: ../scenario_dvr_ovs.rst:316
msgid ""
"The floating IP namespace ``fip`` forwards the packet to the ``rfp`` "
"interface (5) in the distributed router namespace ``qrouter``. The ``rfp`` "
"interface also contains the instance floating IP address *F1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:319
msgid ""
"The *iptables* service (6) in the distributed router namespace ``qrouter`` "
"performs DNAT on the packet using the destination IP address. The ``qr`` "
"interface (7) contains the project network gateway IP address *TG*."
msgstr ""

#: ../scenario_dvr_ovs.rst:322
msgid ""
"The distributed router namespace ``qrouter`` forwards the packet to the Open "
"vSwitch integration bridge ``br-int``."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:324 ../scenario_dvr_ovs.rst:436
#: ../scenario_legacy_ovs.rst:375 ../scenario_legacy_ovs.rst:515
#: ../scenario_legacy_ovs.rst:602 ../scenario_provider_ovs.rst:288
#: ../scenario_provider_ovs.rst:354
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"Linux bridge ``qbr``."
msgstr ""

#: ../scenario_dvr_ovs.rst:326
msgid ""
"Security group rules (8) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_dvr_ovs.rst:328
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the instance ``tap`` "
"interface (9)."
msgstr ""

#: ../scenario_dvr_ovs.rst:331
msgid ""
"The following steps involve a packet outbound from an instance on compute "
"node 1 to the external network:"
msgstr ""

#: ../scenario_dvr_ovs.rst:334
msgid ""
"The instance 1 ``tap`` interface (9) forwards the packet to the Linux bridge "
"``qbr``. The packet contains destination MAC address *TG1* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_dvr_ovs.rst:337
msgid ""
"Security group rules (8) on the Linux bridge ``qbr`` handle state tracking "
"for the packet."
msgstr ""

#: ../scenario_dvr_ovs.rst:341
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"``qr`` interface (7) in the distributed router namespace ``qrouter``. The "
"``qr`` interface contains the project network gateway IP address *TG*."
msgstr ""

#: ../scenario_dvr_ovs.rst:345
msgid ""
"The *iptables* service (6) performs SNAT on the packet using the ``rfp`` "
"interface (5) as the source IP address. The ``rfp`` interface contains the "
"instance floating IP address *F1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:348
msgid ""
"The distributed router namespace ``qrouter`` (2) routes the packet to the "
"floating IP namespace ``fip`` using DVR internal IP addresses *DA1* and "
"*DA2*. The ``rfp`` interface (4) contains DVR internal IP address *DA2* and "
"the ``fpr`` interface (3) contains DVR internal IP address *DA1*."
msgstr ""

#: ../scenario_dvr_ovs.rst:353
msgid ""
"The ``fg`` interface (1) in the floating IP namespace ``fip`` forwards the "
"packet to the Open vSwitch external bridge ``br-ex``. The ``fg`` interface "
"contains the project router external IP address *TE*."
msgstr ""

#: ../scenario_dvr_ovs.rst:363
msgid ""
"Case 3: East/west for instances using different networks on the same router"
msgstr ""

#: ../scenario_dvr_ovs.rst:365
msgid ""
"For instances with fixed or floating IP addresses using project networks on "
"distributed routers, the compute nodes route *east-west* network traffic "
"among the project networks that reside on the same distributed virtual "
"router, avoiding the network node."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:370 ../scenario_legacy_lb.rst:389
#: ../scenario_legacy_ovs.rst:395
msgid "Project network 1"
msgstr ""

#: ../scenario_dvr_ovs.rst:373
msgid "Gateway 192.168.1.1 with MAC address *TG1*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:375 ../scenario_legacy_lb.rst:394
#: ../scenario_legacy_ovs.rst:400
msgid "Project network 2"
msgstr ""

#: ../scenario_dvr_ovs.rst:377
msgid "Network 192.168.2.0/24"
msgstr ""

#: ../scenario_dvr_ovs.rst:378
msgid "Gateway 192.168.2.1 with MAC address *TG2*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:385 ../scenario_legacy_lb.rst:403
#: ../scenario_legacy_lb.rst:479 ../scenario_legacy_ovs.rst:409
#: ../scenario_legacy_ovs.rst:543 ../scenario_provider_lb.rst:234
#: ../scenario_provider_lb.rst:298 ../scenario_provider_ovs.rst:244
#: ../scenario_provider_ovs.rst:315
msgid "Compute node 2"
msgstr ""

#: ../scenario_dvr_ovs.rst:387
msgid "Instance 2 192.168.2.11 with MAC address *I2*"
msgstr ""

#: ../scenario_dvr_ovs.rst:388
msgid "DVR MAC address *D2*"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:390 ../scenario_legacy_ovs.rst:413
msgid "Instance 1 resides on compute node 1 and uses project network 1."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:391 ../scenario_legacy_ovs.rst:414
msgid "Instance 2 resides on compute node 2 and uses project network 2."
msgstr ""

#: ../scenario_dvr_ovs.rst:392
msgid "Both project networks reside on the same distributed virtual router."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:393 ../scenario_legacy_lb.rst:410
#: ../scenario_legacy_lb.rst:486 ../scenario_legacy_ovs.rst:416
#: ../scenario_legacy_ovs.rst:550 ../scenario_provider_lb.rst:240
#: ../scenario_provider_lb.rst:305 ../scenario_provider_ovs.rst:250
#: ../scenario_provider_ovs.rst:322
msgid "Instance 1 sends a packet to instance 2."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:401 ../scenario_legacy_ovs.rst:420
#: ../scenario_provider_ovs.rst:254
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the Linux bridge "
"``qbr``. The packet contains destination MAC address *TG1* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_dvr_ovs.rst:408
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"project network 1 interface (3) in the distributed router namespace "
"``qrouter``."
msgstr ""

#: ../scenario_dvr_ovs.rst:411
msgid ""
"The distributed router namespace ``qrouter`` routes the packet to project "
"network 2."
msgstr ""

#: ../scenario_dvr_ovs.rst:413
msgid ""
"The project network 2 interface (4) in the distributed router namespace "
"``qrouter`` namespace forwards the packet to the Open vSwitch integration "
"bridge ``br-int``."
msgstr ""

#: ../scenario_dvr_ovs.rst:416
msgid ""
"The Open vSwitch integration bridge ``br-int`` modifies the packet to "
"contain the internal tag for project network 2."
msgstr ""

#: ../scenario_dvr_ovs.rst:422
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` wraps the packet in a VXLAN tunnel "
"that contains a tag for project network 2."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:424 ../scenario_legacy_ovs.rst:492
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` forwards the packet to compute "
"node 2 via the tunnel interface."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:427 ../scenario_legacy_lb.rst:446
#: ../scenario_legacy_lb.rst:502 ../scenario_legacy_ovs.rst:495
#: ../scenario_legacy_ovs.rst:582 ../scenario_provider_lb.rst:266
#: ../scenario_provider_lb.rst:325 ../scenario_provider_ovs.rst:280
#: ../scenario_provider_ovs.rst:346
msgid "The following steps involve compute node 2:"
msgstr ""

#: ../scenario_dvr_ovs.rst:431
msgid "The Open vSwitch tunnel bridge ``br-tun`` unwraps the packet."
msgstr ""

#: ../scenario_dvr_ovs.rst:434
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the packet source "
"MAC address *D1* with *TG2*."
msgstr ""

#: ../scenario_dvr_ovs.rst:438
msgid ""
"Security group rules (7) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_dvr_ovs.rst:440
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the instance 2 ``tap`` "
"interface (8)."
msgstr ""

#: ../scenario_dvr_ovs.rst:444
msgid ""
"Packets arriving from compute node 1 do not traverse the project network "
"interfaces (5,6) in the ``qrouter`` namespace on compute node 2. However, "
"return traffic traverses them."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:457 ../scenario_l3ha_lb.rst:191
#: ../scenario_l3ha_ovs.rst:200 ../scenario_legacy_lb.rst:521
#: ../scenario_legacy_ovs.rst:616 ../scenario_provider_lb.rst:345
#: ../scenario_provider_ovs.rst:368
msgid "Example configuration"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:459 ../scenario_l3ha_lb.rst:193
#: ../scenario_l3ha_ovs.rst:202 ../scenario_legacy_lb.rst:523
#: ../scenario_legacy_ovs.rst:618 ../scenario_provider_lb.rst:347
#: ../scenario_provider_ovs.rst:370
msgid ""
"Use the following example configuration as a template to deploy this "
"scenario in your environment."
msgstr ""

#: ../scenario_dvr_ovs.rst:463
msgid "This configuration primarily supports the Kilo release."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:466 ../scenario_l3ha_lb.rst:197
#: ../scenario_l3ha_ovs.rst:206 ../scenario_legacy_lb.rst:527
#: ../scenario_legacy_ovs.rst:622 ../scenario_provider_lb.rst:356
#: ../scenario_provider_ovs.rst:379
msgid "Controller node"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:468 ../scenario_dvr_ovs.rst:548
#: ../scenario_dvr_ovs.rst:662 ../scenario_l3ha_lb.rst:199
#: ../scenario_l3ha_lb.rst:274 ../scenario_l3ha_lb.rst:385
#: ../scenario_l3ha_ovs.rst:208 ../scenario_l3ha_ovs.rst:286
#: ../scenario_l3ha_ovs.rst:396 ../scenario_legacy_lb.rst:529
#: ../scenario_legacy_lb.rst:598 ../scenario_legacy_lb.rst:704
#: ../scenario_legacy_ovs.rst:624 ../scenario_legacy_ovs.rst:696
#: ../scenario_legacy_ovs.rst:806 ../scenario_provider_lb.rst:372
#: ../scenario_provider_lb.rst:458 ../scenario_provider_ovs.rst:395
#: ../scenario_provider_ovs.rst:495
msgid ""
"Configure common options. Edit the :file:`/etc/neutron/neutron.conf` file:"
msgstr ""

#: ../scenario_dvr_ovs.rst:480
msgid ""
"Configuring the ``router_distributed = True`` option creates distributed "
"routers by default for all users. Without it, only privileged users can "
"create distributed routers using the ``--distributed True`` option during "
"router creation."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:485 ../scenario_l3ha_lb.rst:215
#: ../scenario_l3ha_ovs.rst:224 ../scenario_legacy_lb.rst:539
#: ../scenario_legacy_ovs.rst:634
msgid ""
"Configure the ML2 plug-in. Edit the :file:`/etc/neutron/plugins/ml2/ml2_conf."
"ini` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:513 ../scenario_l3ha_ovs.rst:252
#: ../scenario_legacy_ovs.rst:662
msgid ""
"Replace ``MIN_VLAN_ID``, ``MAX_VLAN_ID``, ``MIN_GRE_ID``, ``MAX_GRE_ID``, "
"``MIN_VXLAN_ID``, and ``MAX_VXLAN_ID`` with VLAN, GRE, and VXLAN ID minimum "
"and maximum values suitable for your environment."
msgstr ""

#: ../scenario_dvr_ovs.rst:518
msgid ""
"The first value in the ``tenant_network_types`` option becomes the default "
"project network type when a non-privileged user creates a network."
msgstr ""

#: ../scenario_dvr_ovs.rst:523
msgid ""
"The ``external`` value in the ``network_vlan_ranges`` option lacks VLAN ID "
"ranges to support use of arbitrary VLAN IDs by privileged users."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:526 ../scenario_dvr_ovs.rst:633
#: ../scenario_dvr_ovs.rst:720 ../scenario_l3ha_lb.rst:252
#: ../scenario_l3ha_lb.rst:359 ../scenario_l3ha_lb.rst:415
#: ../scenario_l3ha_ovs.rst:264 ../scenario_l3ha_ovs.rst:369
#: ../scenario_l3ha_ovs.rst:424 ../scenario_legacy_lb.rst:576
#: ../scenario_legacy_lb.rst:678 ../scenario_legacy_lb.rst:734
#: ../scenario_legacy_ovs.rst:674 ../scenario_legacy_ovs.rst:779
#: ../scenario_legacy_ovs.rst:835 ../scenario_provider_lb.rst:435
#: ../scenario_provider_lb.rst:484 ../scenario_provider_ovs.rst:472
#: ../scenario_provider_ovs.rst:535
msgid "Start the following services:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:531 ../scenario_legacy_lb.rst:581
#: ../scenario_legacy_ovs.rst:679
msgid "Network node"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:533 ../scenario_l3ha_lb.rst:259
#: ../scenario_l3ha_ovs.rst:271 ../scenario_legacy_lb.rst:583
#: ../scenario_legacy_ovs.rst:681
msgid ""
"Configure the kernel to enable packet forwarding and disable reverse path "
"filtering. Edit the :file:`/etc/sysctl.conf` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:542 ../scenario_dvr_ovs.rst:656
#: ../scenario_l3ha_lb.rst:268 ../scenario_l3ha_lb.rst:379
#: ../scenario_l3ha_ovs.rst:280 ../scenario_l3ha_ovs.rst:390
#: ../scenario_legacy_lb.rst:592 ../scenario_legacy_lb.rst:698
#: ../scenario_legacy_ovs.rst:690 ../scenario_legacy_ovs.rst:800
#: ../scenario_provider_lb.rst:366 ../scenario_provider_lb.rst:452
#: ../scenario_provider_ovs.rst:389 ../scenario_provider_ovs.rst:489
msgid "Load the new kernel configuration:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:555 ../scenario_dvr_ovs.rst:669
#: ../scenario_l3ha_ovs.rst:293 ../scenario_l3ha_ovs.rst:403
#: ../scenario_legacy_ovs.rst:703 ../scenario_legacy_ovs.rst:813
#: ../scenario_provider_ovs.rst:502
msgid ""
"Configure the Open vSwitch agent. Edit the :file:`/etc/neutron/plugins/ml2/"
"ml2_conf.ini` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:575 ../scenario_dvr_ovs.rst:689
#: ../scenario_l3ha_ovs.rst:311 ../scenario_l3ha_ovs.rst:421
#: ../scenario_legacy_ovs.rst:722 ../scenario_legacy_ovs.rst:832
msgid ""
"Replace ``TUNNEL_INTERFACE_IP_ADDRESS`` with the IP address of the interface "
"that handles GRE/VXLAN project networks."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:578 ../scenario_dvr_ovs.rst:692
#: ../scenario_l3ha_lb.rst:304 ../scenario_l3ha_ovs.rst:314
#: ../scenario_legacy_lb.rst:628 ../scenario_legacy_ovs.rst:725
msgid ""
"Configure the L3 agent. Edit the :file:`/etc/neutron/l3_agent.ini` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:591 ../scenario_dvr_ovs.rst:705
#: ../scenario_l3ha_lb.rst:317 ../scenario_l3ha_ovs.rst:327
#: ../scenario_legacy_ovs.rst:737
msgid "The ``external_network_bridge`` option intentionally contains no value."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:594 ../scenario_l3ha_lb.rst:320
#: ../scenario_l3ha_ovs.rst:330 ../scenario_legacy_lb.rst:639
#: ../scenario_legacy_ovs.rst:740 ../scenario_provider_lb.rst:424
#: ../scenario_provider_ovs.rst:441
msgid ""
"Configure the DHCP agent. Edit the :file:`/etc/neutron/dhcp_agent.ini` file:"
msgstr ""

#: ../scenario_dvr_ovs.rst:606
msgid "(Optional) Reduce MTU for GRE/VXLAN project networks."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:608 ../scenario_l3ha_lb.rst:334
#: ../scenario_l3ha_ovs.rst:344 ../scenario_legacy_lb.rst:653
#: ../scenario_legacy_ovs.rst:754
msgid "Edit the :file:`/etc/neutron/dhcp_agent.ini` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:615 ../scenario_l3ha_lb.rst:341
#: ../scenario_l3ha_ovs.rst:351 ../scenario_legacy_lb.rst:660
#: ../scenario_legacy_ovs.rst:761
msgid "Edit the :file:`/etc/neutron/dnsmasq-neutron.conf` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:621 ../scenario_dvr_ovs.rst:708
#: ../scenario_l3ha_lb.rst:347 ../scenario_l3ha_ovs.rst:357
#: ../scenario_legacy_lb.rst:666 ../scenario_legacy_ovs.rst:767
msgid ""
"Configure the metadata agent. Edit the :file:`/etc/neutron/metadata_agent."
"ini` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:631 ../scenario_dvr_ovs.rst:718
#: ../scenario_l3ha_lb.rst:357 ../scenario_l3ha_ovs.rst:367
#: ../scenario_legacy_lb.rst:676 ../scenario_legacy_ovs.rst:777
msgid "Replace ``METADATA_SECRET`` with a suitable value for your environment."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:636 ../scenario_dvr_ovs.rst:723
#: ../scenario_l3ha_ovs.rst:372 ../scenario_l3ha_ovs.rst:427
#: ../scenario_legacy_ovs.rst:782 ../scenario_legacy_ovs.rst:838
#: ../scenario_provider_ovs.rst:475 ../scenario_provider_ovs.rst:537
msgid "Open vSwitch agent"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:637 ../scenario_dvr_ovs.rst:724
#: ../scenario_l3ha_lb.rst:362 ../scenario_l3ha_ovs.rst:373
#: ../scenario_legacy_lb.rst:681 ../scenario_legacy_ovs.rst:783
msgid "L3 agent"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:638 ../scenario_l3ha_lb.rst:363
#: ../scenario_l3ha_ovs.rst:374 ../scenario_legacy_lb.rst:682
#: ../scenario_legacy_ovs.rst:784 ../scenario_provider_lb.rst:439
#: ../scenario_provider_ovs.rst:476
msgid "DHCP agent"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:639 ../scenario_dvr_ovs.rst:725
#: ../scenario_l3ha_lb.rst:364 ../scenario_l3ha_ovs.rst:375
#: ../scenario_legacy_lb.rst:683 ../scenario_legacy_ovs.rst:785
msgid "Metadata agent"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:642 ../scenario_l3ha_lb.rst:367
#: ../scenario_l3ha_ovs.rst:378 ../scenario_legacy_lb.rst:686
#: ../scenario_legacy_ovs.rst:788 ../scenario_provider_lb.rst:442
#: ../scenario_provider_ovs.rst:479
msgid "Compute nodes"
msgstr ""

#: ../scenario_dvr_ovs.rst:644
msgid ""
"Configure the kernel to enable packet forwarding, enable *iptables* on "
"bridges, and disable reverse path filtering. Edit the :file:`/etc/sysctl."
"conf` file:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:728 ../scenario_l3ha_lb.rst:420
#: ../scenario_l3ha_ovs.rst:430 ../scenario_legacy_lb.rst:739
#: ../scenario_legacy_ovs.rst:841 ../scenario_provider_lb.rst:489
#: ../scenario_provider_ovs.rst:540
msgid "Verify service operation"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:731 ../scenario_l3ha_lb.rst:423
#: ../scenario_l3ha_ovs.rst:433 ../scenario_legacy_lb.rst:742
#: ../scenario_legacy_ovs.rst:844 ../scenario_provider_lb.rst:492
#: ../scenario_provider_ovs.rst:543
msgid "Verify presence and operation of the agents:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:752 ../scenario_l3ha_lb.rst:444
#: ../scenario_l3ha_ovs.rst:454 ../scenario_legacy_lb.rst:759
#: ../scenario_legacy_ovs.rst:861 ../scenario_provider_lb.rst:507
#: ../scenario_provider_ovs.rst:558
msgid "Create initial networks"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:754 ../scenario_l3ha_lb.rst:446
#: ../scenario_l3ha_ovs.rst:456 ../scenario_legacy_lb.rst:761
#: ../scenario_legacy_ovs.rst:863
msgid ""
"This example creates a flat external network and a VXLAN project network."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:757 ../scenario_l3ha_lb.rst:449
#: ../scenario_l3ha_ovs.rst:459 ../scenario_legacy_lb.rst:764
#: ../scenario_legacy_ovs.rst:866
msgid "Create the external network:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:780 ../scenario_l3ha_lb.rst:472
#: ../scenario_l3ha_ovs.rst:482 ../scenario_legacy_lb.rst:787
#: ../scenario_legacy_ovs.rst:889
msgid "Create a subnet on the external network:"
msgstr ""

#: ../scenario_dvr_ovs.rst:807
msgid ""
"The example configuration contains ``vlan`` as the first project network "
"type. Only a privileged user can create other types of networks such as GRE "
"or VXLAN. The following commands use the ``admin`` project credentials to "
"create a VXLAN project network."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:812 ../scenario_l3ha_lb.rst:504
#: ../scenario_l3ha_ovs.rst:514 ../scenario_legacy_lb.rst:819
#: ../scenario_legacy_ovs.rst:921
msgid ""
"Obtain the ID of a regular project. For example, using the ``demo`` project:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:826 ../scenario_l3ha_ovs.rst:528
#: ../scenario_legacy_lb.rst:833 ../scenario_legacy_ovs.rst:935
msgid "Create the project network:"
msgstr ""

#: ../scenario_dvr_ovs.rst:849 ../scenario_dvr_ovs.rst:961
msgid "Source the regular project credentials."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:850 ../scenario_l3ha_lb.rst:544
#: ../scenario_l3ha_ovs.rst:554 ../scenario_legacy_lb.rst:858
#: ../scenario_legacy_ovs.rst:960
msgid "Create a subnet on the project network:"
msgstr ""

#: ../scenario_dvr_ovs.rst:875
msgid "Create a distributed project router:"
msgstr ""

#: ../scenario_dvr_ovs.rst:896
msgid ""
"Default policy might prevent the '`distributed`` flag from appearing in the "
"command output for non-privileged users."
msgstr ""

#: ../scenario_dvr_ovs.rst:899
msgid "Attach the project network to the router:"
msgstr ""

#: ../scenario_dvr_ovs.rst:906
msgid ""
"Add a gateway to the external network for the project network on the router:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:915 ../scenario_l3ha_lb.rst:609
#: ../scenario_l3ha_ovs.rst:619 ../scenario_legacy_lb.rst:915
#: ../scenario_legacy_ovs.rst:1018 ../scenario_provider_lb.rst:566
#: ../scenario_provider_ovs.rst:617
msgid "Verify network operation"
msgstr ""

#: ../scenario_dvr_ovs.rst:917
msgid ""
"On the network node, verify creation of the `snat`, `qrouter`, and `qdhcp` "
"namespaces:"
msgstr ""

#: ../scenario_dvr_ovs.rst:928
msgid "One or more namespaces might not exist until launching an instance."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:931 ../scenario_l3ha_lb.rst:758
#: ../scenario_l3ha_ovs.rst:766 ../scenario_legacy_lb.rst:929
#: ../scenario_legacy_ovs.rst:1032
msgid ""
"Determine the external network gateway IP address for the project network on "
"the router, typically the lowest IP address in the external subnet IP "
"allocation range:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:945 ../scenario_l3ha_lb.rst:774
#: ../scenario_l3ha_ovs.rst:782 ../scenario_legacy_lb.rst:943
#: ../scenario_legacy_ovs.rst:1046
msgid ""
"On the controller node or any host with access to the external network, ping "
"the external network gateway IP address on the project router:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:962 ../scenario_legacy_lb.rst:961
#: ../scenario_legacy_ovs.rst:1064
msgid "Launch an instance with an interface on the project network."
msgstr ""

#: ../scenario_dvr_ovs.rst:963
msgid ""
"On the compute node with the instance, verify creation of the ``qrouter`` "
"namespace:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:971 ../scenario_l3ha_lb.rst:849
#: ../scenario_l3ha_ovs.rst:857 ../scenario_legacy_lb.rst:962
#: ../scenario_legacy_ovs.rst:1065
msgid "Obtain console access to the instance."
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:973 ../scenario_l3ha_lb.rst:851
#: ../scenario_l3ha_ovs.rst:859 ../scenario_legacy_lb.rst:964
#: ../scenario_legacy_ovs.rst:1067
msgid "Test connectivity to the project router:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:988 ../scenario_l3ha_lb.rst:866
#: ../scenario_l3ha_ovs.rst:874 ../scenario_legacy_lb.rst:979
#: ../scenario_legacy_ovs.rst:1082 ../scenario_provider_lb.rst:671
#: ../scenario_provider_ovs.rst:722
msgid "Test connectivity to the Internet:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:1003 ../scenario_l3ha_lb.rst:792
#: ../scenario_l3ha_ovs.rst:800 ../scenario_legacy_lb.rst:994
#: ../scenario_legacy_ovs.rst:1097 ../scenario_provider_lb.rst:580
#: ../scenario_provider_ovs.rst:631
msgid ""
"Create the appropriate security group rules to allow ping and SSH access to "
"the instance. For example:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:1022 ../scenario_l3ha_lb.rst:881
#: ../scenario_l3ha_ovs.rst:889 ../scenario_legacy_lb.rst:1013
#: ../scenario_legacy_ovs.rst:1116
msgid "Create a floating IP address on the external network:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:1041 ../scenario_l3ha_lb.rst:900
#: ../scenario_l3ha_ovs.rst:908 ../scenario_legacy_lb.rst:1031
#: ../scenario_legacy_ovs.rst:1134
msgid "Associate the floating IP address with the instance:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:1047 ../scenario_l3ha_lb.rst:906
#: ../scenario_l3ha_ovs.rst:914 ../scenario_legacy_lb.rst:1037
#: ../scenario_legacy_ovs.rst:1140
msgid "Verify addition of the floating IP address to the instance:"
msgstr ""

#: ../scenario_dvr_ovs.rst:1058
msgid ""
"On the compute node with the instance, verify creation of the ``fip`` "
"namespace:"
msgstr ""

# #-#-#-#-#  scenario_dvr_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_dvr_ovs.rst:1066 ../scenario_l3ha_lb.rst:917
#: ../scenario_l3ha_ovs.rst:925 ../scenario_legacy_lb.rst:1048
#: ../scenario_legacy_ovs.rst:1151
msgid ""
"On the controller node or any host with access to the external network, ping "
"the floating IP address associated with the instance:"
msgstr ""

#: ../scenario_l3ha_lb.rst:3
msgid "Scenario: High Availability using VRRP (L3HA) with Linux Bridge"
msgstr ""

#: ../scenario_l3ha_lb.rst:5
msgid ""
"This scenario describes a high-availability implementation of the OpenStack "
"Networking service using the ML2 plug-in and Linux bridge."
msgstr ""

#: ../scenario_l3ha_lb.rst:8
msgid ""
"This high-availability implementation augments the :doc:`scenario_legacy_lb` "
"architecture with Virtual Router Redundancy Protocol (VRRP) using "
"``keepalived`` to provide quick failover of layer-3 services. See :ref:"
"`scenario_l3ha_lb-packet_flow` for VRRP operation. Similar to the legacy "
"scenario, all network traffic on a project network that requires routing "
"actively traverses only one network node regardless of the quantity of "
"network nodes providing HA for the router. Therefore, this high-availability "
"implementation primarily addresses failure situations instead of bandwidth "
"constraints that limit performance. However, it supports random distribution "
"of routers on different network nodes to reduce the chances of bandwidth "
"constraints and to improve scaling. Also, this implementation does not "
"address situations where one or more layer-3 agents fail and the underlying "
"virtual networks continue to operate normally. Consider deploying :doc:"
"`scenario_dvr_ovs` to increase performance in addition to redundancy. As of "
"the Liberty release, you cannot combine the DVR and L3HA mechanisms."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:25 ../scenario_l3ha_ovs.rst:25
msgid ""
"The failover process only retains the state of network connections for "
"instances with a floating IP address."
msgstr ""

#: ../scenario_l3ha_lb.rst:28
msgid ""
"The example configuration creates one flat external network and one VXLAN "
"project (tenant) network. However, this configuration also supports VLAN "
"external and project networks."
msgstr ""

#: ../scenario_l3ha_lb.rst:33
msgid ""
"In the releases prior to Liberty, L3HA with Linux bridge supports VLAN and "
"VXLAN project networks. However, due to a bug, VXLAN project networks must "
"use multicast instead of the layer-2 population mechanism."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:45 ../scenario_l3ha_ovs.rst:44
msgid ""
"These prerequisites define the minimal physical infrastructure and immediate "
"OpenStack service dependencies necessary to deploy this scenario. For "
"example, the Networking service immediately depends on the Identity service "
"and the Compute service immediately depends on the Networking service. These "
"dependencies lack services such as the Image service because the Networking "
"service does not immediately depend on it. However, the Compute service "
"depends on the Image service to launch an instance. The example "
"configuration in this scenario assumes basic configuration knowledge of "
"Networking service components. For assistance with basic configuration of "
"the Networking service, see the Installation Guide."
msgstr ""

#: ../scenario_l3ha_lb.rst:60
msgid ""
"At least two network nodes with four network interfaces: management, project "
"tunnel networks, project VLAN networks, and external (typically the "
"Internet)."
msgstr ""

#: ../scenario_l3ha_lb.rst:63
msgid ""
"At least two compute nodes with three network interfaces: management, "
"project tunnel networks, and project VLAN networks."
msgstr ""

#: ../scenario_l3ha_lb.rst:66
msgid ""
"To improve understanding of network traffic flow, the network and compute "
"nodes contain a separate network interface for project VLAN networks. In "
"production environments, you can use any network interface for VLAN project "
"networks."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:71 ../scenario_l3ha_ovs.rst:74
msgid ""
"In the example configuration, the management network uses 10.0.0.0/24, the "
"tunnel network uses 10.0.1.0/24, the VRRP network uses 169.254.192.0/18, and "
"the external network uses 203.0.113.0/24. The VLAN network does not require "
"an IP address range because it only handles layer-2 connectivity."
msgstr ""

#: ../scenario_l3ha_lb.rst:86
msgid ""
"For VLAN external and project networks, the network infrastructure must "
"support VLAN tagging. For best performance with VXLAN project networks, the "
"network infrastructure should support jumbo frames."
msgstr ""

#: ../scenario_l3ha_lb.rst:91
msgid "Proper operation of VXLAN requires kernel 3.13 or newer."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:111 ../scenario_legacy_lb.rst:129
msgid ""
"ML2 plug-in, Linux bridge agent, L3 agent, DHCP agent, metadata agent, and "
"any dependencies."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:121 ../scenario_legacy_lb.rst:139
#: ../scenario_provider_lb.rst:104
msgid "ML2 plug-in, Linux bridge agent, and any dependencies."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:129 ../scenario_l3ha_ovs.rst:136
msgid "The network nodes contain the following components:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:131 ../scenario_legacy_lb.rst:158
#: ../scenario_provider_lb.rst:117
msgid ""
"Linux bridge agent managing virtual switches, connectivity among them, and "
"interaction via virtual ports with other network components such as "
"namespaces and underlying interfaces."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:134 ../scenario_l3ha_ovs.rst:141
#: ../scenario_legacy_lb.rst:161 ../scenario_legacy_ovs.rst:167
msgid ""
"DHCP agent managing the ``qdhcp`` namespaces. The ``qdhcp`` namespaces "
"provide DHCP services for instances using project networks."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:136 ../scenario_l3ha_ovs.rst:143
msgid ""
"L3 agent managing the ``qrouter`` namespaces and VRRP using ``keepalived``. "
"The ``qrouter`` namespaces provide routing between project and external "
"networks and among project networks. They also route metadata traffic "
"between instances and the metadata agent."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:140 ../scenario_l3ha_ovs.rst:147
#: ../scenario_legacy_lb.rst:167 ../scenario_legacy_ovs.rst:173
msgid "Metadata agent handling metadata operations for instances."
msgstr ""

#: ../scenario_l3ha_lb.rst:149
msgid ""
"For simplicity, the hidden project network that connects all HA routers for "
"a particular project uses the VXLAN network type."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:154 ../scenario_legacy_lb.rst:177
#: ../scenario_provider_lb.rst:135
msgid ""
"Linux bridge agent managing virtual switches, connectivity among them, and "
"interaction via virtual ports with other network components such as "
"namespaces, security groups, and underlying interfaces."
msgstr ""

#: ../scenario_l3ha_lb.rst:169
msgid ""
"The L3HA mechanism simply augments :doc:`scenario_legacy_lb` with quick "
"failover of layer-3 services to another router if the master router fails."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:173 ../scenario_l3ha_ovs.rst:182
msgid ""
"During normal operation, the master router periodically transmits "
"*heartbeat* packets over a hidden project network that connects all HA "
"routers for a particular project. By default, this network uses the type "
"indicated by the first value in the ``tenant_network_types`` option in the :"
"file:`/etc/neutron/plugins/ml2_conf.ini` file."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:179 ../scenario_l3ha_ovs.rst:188
msgid ""
"If the backup router stops receiving these packets, it assumes failure of "
"the master router and promotes itself to the master router by configuring IP "
"addresses on the interfaces in the ``qrouter`` namespace. In environments "
"with more than one backup router, the router with the next highest priority "
"becomes the master router."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:186 ../scenario_l3ha_ovs.rst:195
msgid ""
"The L3HA mechanism uses the same priority for all routers. Therefore, VRRP "
"promotes the backup router with the highest IP address to the master router."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:240 ../scenario_legacy_lb.rst:564
msgid ""
"Replace ``MIN_VLAN_ID``, ``MAX_VLAN_ID``, ``MIN_VXLAN_ID``, and "
"``MAX_VXLAN_ID`` with VLAN and VXLAN ID minimum and maximum values suitable "
"for your environment."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:245 ../scenario_l3ha_ovs.rst:257
#: ../scenario_legacy_lb.rst:569 ../scenario_legacy_ovs.rst:667
msgid ""
"The first value in the ``tenant_network_types`` option becomes the default "
"project network type when a regular user creates a network."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:249 ../scenario_l3ha_ovs.rst:261
#: ../scenario_legacy_lb.rst:573 ../scenario_legacy_ovs.rst:671
msgid ""
"The ``external`` value in the ``network_vlan_ranges`` option lacks VLAN ID "
"ranges to support use of arbitrary VLAN IDs by administrative users."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:257 ../scenario_l3ha_ovs.rst:269
msgid "Network nodes"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:281 ../scenario_l3ha_lb.rst:392
#: ../scenario_legacy_lb.rst:605 ../scenario_legacy_lb.rst:711
#: ../scenario_provider_lb.rst:465
msgid ""
"Configure the Linux bridge agent. Edit the :file:`/etc/neutron/plugins/ml2/"
"ml2_conf.ini` file:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:299 ../scenario_l3ha_lb.rst:410
#: ../scenario_legacy_lb.rst:623
msgid ""
"Replace ``PROJECT_VLAN_INTERFACE`` and ``EXTERNAL_INTERFACE`` with the name "
"of the underlying interface that handles VLAN project networks and external "
"networks, respectively. Replace ``TUNNEL_INTERFACE_IP_ADDRESS`` with the IP "
"address of the interface that handles project tunnel networks."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:332 ../scenario_legacy_lb.rst:651
msgid "(Optional) Reduce MTU for VXLAN project networks."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:361 ../scenario_l3ha_lb.rst:417
#: ../scenario_legacy_lb.rst:680 ../scenario_legacy_lb.rst:736
#: ../scenario_provider_lb.rst:438 ../scenario_provider_lb.rst:486
msgid "Linux bridge agent"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:369 ../scenario_l3ha_ovs.rst:380
#: ../scenario_legacy_lb.rst:688 ../scenario_legacy_ovs.rst:790
msgid ""
"Configure the kernel to enable *iptables* on bridges and disable reverse "
"path filtering. Edit the :file:`/etc/sysctl.conf` file:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:499 ../scenario_legacy_lb.rst:814
msgid ""
"The example configuration contains ``vlan`` as the first project network "
"type. Only an administrative user can create other types of networks such as "
"VXLAN. The following commands use the ``admin`` project credentials to "
"create a VXLAN project network."
msgstr ""

#: ../scenario_l3ha_lb.rst:518
msgid "Create a project network:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:542 ../scenario_l3ha_ovs.rst:798
#: ../scenario_legacy_lb.rst:856 ../scenario_legacy_lb.rst:959
#: ../scenario_legacy_ovs.rst:958 ../scenario_legacy_ovs.rst:1062
#: ../scenario_provider_lb.rst:578 ../scenario_provider_ovs.rst:629
msgid ""
"Source the regular project credentials. The following steps use the ``demo`` "
"project."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:569 ../scenario_l3ha_ovs.rst:579
#: ../scenario_legacy_lb.rst:883 ../scenario_legacy_ovs.rst:985
msgid "Create a project router:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:590 ../scenario_l3ha_ovs.rst:600
msgid ""
"The default :file:`policy.json` file allows only administrative projects to "
"enable/disable HA during router creation and view the ``ha`` flag for a "
"router."
msgstr ""

#: ../scenario_l3ha_lb.rst:594
msgid "Attach the project subnet as an interface on the router:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:601 ../scenario_l3ha_ovs.rst:611
#: ../scenario_legacy_lb.rst:907 ../scenario_legacy_ovs.rst:1010
msgid "Add a gateway to the external network on the router:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:612 ../scenario_l3ha_ovs.rst:622
msgid "On the controller node, verify creation of the HA network:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:625 ../scenario_l3ha_ovs.rst:635
msgid ""
"On the controller node, verify creation of the router on more than one "
"network node:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:639 ../scenario_l3ha_ovs.rst:649
msgid ""
"Older versions of *python-neutronclient* do not support the ``ha_state`` "
"field."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:641 ../scenario_l3ha_ovs.rst:651
msgid ""
"On the controller node, verify creation of the HA ports on the ``demo-"
"router`` router:"
msgstr ""

#: ../scenario_l3ha_lb.rst:656
msgid ""
"On the network nodes, verify creation of the ``qrouter`` and ``qdhcp`` "
"namespaces."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:659 ../scenario_l3ha_lb.rst:681
#: ../scenario_l3ha_lb.rst:736 ../scenario_l3ha_ovs.rst:669
#: ../scenario_l3ha_ovs.rst:690 ../scenario_l3ha_ovs.rst:745
msgid "Network node 1:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:666 ../scenario_l3ha_lb.rst:705
#: ../scenario_l3ha_lb.rst:745 ../scenario_l3ha_ovs.rst:676
#: ../scenario_l3ha_ovs.rst:714 ../scenario_l3ha_ovs.rst:754
msgid "Network node 2:"
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:673 ../scenario_l3ha_ovs.rst:683
msgid "Both ``qrouter`` namespaces should use the same UUID."
msgstr ""

#: ../scenario_l3ha_lb.rst:677
msgid "The ``qdhcp`` namespaces might not appear until launching an instance."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:679 ../scenario_l3ha_ovs.rst:688
msgid "On the network nodes, verify HA operation:"
msgstr ""

#: ../scenario_l3ha_lb.rst:725
msgid ""
"On each network node, the ``qrouter`` namespace should include the ``ha``, "
"``qr``, and ``qg`` interfaces. On the master node, the ``qr`` interface "
"contains the project network gateway IP address and the ``qg`` interface "
"contains the project network router IP address on the external network. On "
"the backup node, the ``qr`` and ``qg`` interfaces should not contain an IP "
"address. On both nodes, the ``ha`` interface should contain a unique IP "
"address in the 169.254.192.0/18 range."
msgstr ""

#: ../scenario_l3ha_lb.rst:733
msgid ""
"On the network nodes, verify VRRP advertisements from the master node HA "
"interface IP address on the appropriate network interface."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:756 ../scenario_l3ha_ovs.rst:764
msgid "The example output uses network interface ``eth1``."
msgstr ""

#: ../scenario_l3ha_lb.rst:790
msgid ""
"Source the credentials for a non-privileged project. The following steps use "
"the ``demo`` project."
msgstr ""

# #-#-#-#-#  scenario_l3ha_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_lb.rst:811 ../scenario_l3ha_ovs.rst:819
msgid ""
"Launch an instance with an interface on the project network. For example, "
"using an existing *CirrOS* image:"
msgstr ""

#: ../scenario_l3ha_ovs.rst:3
msgid "Scenario: High Availability using VRRP (L3HA) with Open vSwitch"
msgstr ""

#: ../scenario_l3ha_ovs.rst:5
msgid ""
"This scenario describes a high-availability implementation of the OpenStack "
"Networking service using the ML2 plug-in and Open vSwitch (OVS)."
msgstr ""

#: ../scenario_l3ha_ovs.rst:8
msgid ""
"This high-availability implementation augments the :doc:"
"`scenario_legacy_ovs` architecture with Virtual Router Redundancy Protocol "
"(VRRP) using ``keepalived`` to provide quick failover of layer-3 services. "
"See :ref:`scenario_l3ha_ovs-packet_flow` for VRRP operation. Similar to the "
"legacy scenario, all network traffic on a project network that requires "
"routing actively traverses only one network node regardless of the quantity "
"of network nodes providing HA for the router. Therefore, this high-"
"availability implementation primarily addresses failure situations instead "
"of bandwidth constraints that limit performance. However, it supports random "
"distribution of routers on different network nodes to reduce the chances of "
"bandwidth constraints and to improve scaling. Also, this implementation does "
"not address situations where one or more layer-3 agents fail and the "
"underlying virtual networks continue to operate normally. Consider "
"deploying :doc:`scenario_dvr_ovs` to increase performance in addition to "
"redundancy. As of the Liberty release, you cannot combine the DVR and L3HA "
"mechanisms."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:28 ../scenario_legacy_ovs.rst:57
msgid ""
"The example configuration creates one flat external network and one VXLAN "
"project (tenant) network. However, this configuration also supports VLAN "
"external networks, VLAN project networks, and GRE project networks."
msgstr ""

#: ../scenario_l3ha_ovs.rst:33
msgid ""
"Due to a bug in releases prior to Liberty, VXLAN and GRE project networks "
"must use multicast instead of the layer-2 population mechanism."
msgstr ""

#: ../scenario_l3ha_ovs.rst:59
msgid ""
"Two network nodes with four network interfaces: management, project tunnel "
"networks, project VLAN networks, and external (typically the Internet). The "
"Open vSwitch bridge ``br-vlan`` must contain a port on the VLAN interface "
"and Open vSwitch bridge ``br-ex`` must contain a port on the external "
"interface."
msgstr ""

#: ../scenario_l3ha_ovs.rst:64
msgid ""
"At least one compute node with three network interfaces: management, project "
"tunnel networks, and project VLAN networks. The Open vSwitch bridge ``br-"
"vlan`` must contain a port on the VLAN interface."
msgstr ""

#: ../scenario_l3ha_ovs.rst:68
msgid ""
"To improve understanding of network traffic flow, the network and compute "
"nodes contain a separate network interface for project VLAN networks. In "
"production environments, project VLAN networks can use any Open vSwitch "
"bridge with access to a network interface. For example, the ``br-tun`` "
"bridge."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:94 ../scenario_legacy_ovs.rst:113
msgid ""
"Proper operation of this scenario requires Open vSwitch 2.1 or newer. VXLAN "
"also requires kernel 3.13 or newer."
msgstr ""

#: ../scenario_l3ha_ovs.rst:106
msgid ""
"Operational OpenStack Compute controller/management service with appropriate "
"configuration to use OpenStack Networking in the :file:`nova.conf` file."
msgstr ""

#: ../scenario_l3ha_ovs.rst:112
msgid "OpenStack services - network nodes"
msgstr ""

#: ../scenario_l3ha_ovs.rst:124
msgid ""
"Operational OpenStack Compute controller/management service with appropriate "
"configuration to use OpenStack Networking in the :file:`neutron.conf` file."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:127 ../scenario_legacy_ovs.rst:145
#: ../scenario_provider_ovs.rst:99
msgid ""
"Open vSwitch service, ML2 plug-in, Open vSwitch agent, and any dependencies."
msgstr ""

#: ../scenario_l3ha_ovs.rst:155
msgid "The compute nodes contain the following components:"
msgstr ""

#: ../scenario_l3ha_ovs.rst:178
msgid ""
"The L3HA mechanism simply augments :doc:`scenario_legacy_ovs` with quick "
"failover of layer-3 services to another router if the master router fails."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:342 ../scenario_legacy_ovs.rst:752
msgid "(Optional) Reduce MTU for VXLAN/GRE project networks."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:509 ../scenario_legacy_ovs.rst:916
msgid ""
"The example configuration contains ``vlan`` as the first project network "
"type. Only an administrative user can create other types of networks such as "
"GRE or VXLAN. The following commands use the ``admin`` project credentials "
"to create a VXLAN project network."
msgstr ""

#: ../scenario_l3ha_ovs.rst:552
msgid ""
"Source the ``demo`` project credentials. The following steps use the "
"``demo`` project."
msgstr ""

# #-#-#-#-#  scenario_l3ha_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_l3ha_ovs.rst:604 ../scenario_legacy_lb.rst:900
#: ../scenario_legacy_ovs.rst:1003
msgid "Add the project subnet as an interface on the router:"
msgstr ""

#: ../scenario_l3ha_ovs.rst:666
msgid ""
"On the network nodes, verify creation of the ``qrouter`` and ``qdhcp`` "
"namespaces:"
msgstr ""

#: ../scenario_l3ha_ovs.rst:686
msgid "The ``qdhcp`` namespaces might not exist until launching an instance."
msgstr ""

#: ../scenario_l3ha_ovs.rst:734
msgid ""
"On each network node, the ``qrouter`` namespace should include the ``ha``, "
"``qr``, and ``qg`` interfaces. On the master node, the ``qr`` interface "
"contains the project network gateway IP address and the ``qg`` interface "
"contains the project router IP address on the external network. On the "
"backup node, the ``qr`` and ``qg`` interfaces should not contain an IP "
"address. On both nodes, the ``ha`` interface should contain a unique IP "
"address in the 169.254.192.0/18 range."
msgstr ""

#: ../scenario_l3ha_ovs.rst:742
msgid ""
"On the network nodes, verify VRRP advertisements from the master node HA "
"interface IP address on the appropriate network interface:"
msgstr ""

#: ../scenario_legacy_lb.rst:3
msgid "Scenario: Legacy with Linux Bridge"
msgstr ""

#: ../scenario_legacy_lb.rst:5
msgid ""
"This scenario describes a legacy (basic) implementation of the OpenStack "
"Networking service using the ML2 plug-in with Linux bridge."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:8 ../scenario_legacy_ovs.rst:8
msgid ""
"The legacy implementation contributes the networking portion of self-service "
"virtual data center infrastructure by providing a method for regular (non-"
"privileged) users to manage virtual networks within a project and includes "
"the following components:"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:13 ../scenario_legacy_ovs.rst:13
msgid "Project (tenant) networks"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:15 ../scenario_legacy_ovs.rst:15
msgid ""
"Project networks provide connectivity to instances for a particular project. "
"Regular (non-privileged) users can manage project networks within the "
"allocation that an administrator or operator defines for for them. Project "
"networks can use VLAN, GRE, or VXLAN transport methods depending on the "
"allocation. Project networks generally use private IP address ranges "
"(RFC1918) and lack connectivity to external networks such as the Internet. "
"Networking refers to IP addresses on project networks as *fixed* IP "
"addresses."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:24 ../scenario_legacy_ovs.rst:24
msgid "External networks"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:26 ../scenario_legacy_ovs.rst:26
msgid ""
"External networks provide connectivity to external networks such as the "
"Internet. Only administrative (privileged) users can manage external "
"networks because they interface with the physical network infrastructure. "
"External networks can use flat or VLAN transport methods depending on the "
"physical network infrastructure and generally use public IP address ranges."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:34 ../scenario_legacy_ovs.rst:34
msgid ""
"A flat network essentially uses the untagged or native VLAN. Similar to "
"layer-2 properties of physical networks, only one flat network can exist per "
"external bridge. In most cases, production deployments should use VLAN "
"transport for external networks."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:41 ../scenario_legacy_ovs.rst:41
msgid ""
"Routers typically connect project and external networks. By default, they "
"implement SNAT to provide outbound external connectivity for instances on "
"project networks. Each router uses an IP address in the external network "
"allocation for SNAT. Routers also use DNAT to provide inbound external "
"connectivity for instances on project networks. Networking refers to IP "
"addresses on routers that provide inbound external connectivity for "
"instances on project networks as *floating* IP addresses. Routers can also "
"connect project networks that belong to the same project."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:50 ../scenario_legacy_ovs.rst:50
msgid "Supporting services"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:52 ../scenario_legacy_ovs.rst:52
msgid ""
"Other supporting services include DHCP and metadata. The DHCP service "
"manages IP addresses for instances on project networks. The metadata service "
"provides an API for instances on project networks to obtain metadata such as "
"SSH keys."
msgstr ""

#: ../scenario_legacy_lb.rst:57
msgid ""
"The example configuration creates one flat external network and one VXLAN "
"project network. However, this configuration also supports VLAN external and "
"project networks. The Linux bridge agent does not support GRE project "
"networks."
msgstr ""

#: ../scenario_legacy_lb.rst:79
msgid ""
"One network node with four network interfaces: management, project tunnel "
"networks, VLAN project networks, and external (typically the Internet)."
msgstr ""

#: ../scenario_legacy_lb.rst:81
msgid ""
"At least one compute nodes with three network interfaces: management, "
"project tunnel networks, and VLAN project networks."
msgstr ""

#: ../scenario_legacy_lb.rst:84
msgid ""
"To improve understanding of network traffic flow, the network and compute "
"nodes contain a separate network interface for VLAN project networks. In "
"production environments, you can use any network interface for VLAN project "
"networks."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:89 ../scenario_legacy_ovs.rst:93
msgid ""
"In the example configuration, the management network uses 10.0.0.0/24, the "
"tunnel network uses 10.0.1.0/24, and the external network uses "
"203.0.113.0/24. The VLAN network does not require an IP address range "
"because it only handles layer-2 connectivity."
msgstr ""

#: ../scenario_legacy_lb.rst:104
msgid ""
"For VLAN external and project networks, the physical network infrastructure "
"must support VLAN tagging. For best performance with VXLAN project networks, "
"the network infrastructure should support jumbo frames."
msgstr ""

#: ../scenario_legacy_lb.rst:109
msgid "Proper operation of this scenario requires kernel 3.13 or newer."
msgstr ""

#: ../scenario_legacy_lb.rst:144
msgid ""
"The legacy architecture provides basic virtual networking components in your "
"environment. Routing among project and external networks resides completely "
"on the network node. Although more simple to deploy than other "
"architectures, performing all functions on the network node creates a single "
"point of failure and potential performance issues. Consider deploying DVR or "
"L3 HA architectures in production environments to provide redundancy and "
"increase performance. However, the DVR architecture requires Open vSwitch."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:163 ../scenario_legacy_ovs.rst:169
msgid ""
"L3 agent managing the ``qrouter`` namespaces. The ``qrouter`` namespaces "
"provide routing between project and external networks and among project "
"networks. They also route metadata traffic between instances and the "
"metadata agent."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:191 ../scenario_legacy_ovs.rst:200
#: ../scenario_provider_lb.rst:153 ../scenario_provider_ovs.rst:154
msgid ""
"*North-south* network traffic travels between an instance and external "
"network, typically the Internet. *East-west* network traffic travels between "
"instances."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:196 ../scenario_legacy_ovs.rst:205
msgid "Case 1: North-south for instances with a fixed IP address"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:198 ../scenario_legacy_ovs.rst:207
msgid ""
"For instances with a fixed IP address, the network node routes *north-south* "
"network traffic between project and external networks."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:204 ../scenario_legacy_lb.rst:300
#: ../scenario_legacy_ovs.rst:213 ../scenario_legacy_ovs.rst:305
msgid "IP address allocation from 203.0.113.101 to 203.0.113.200"
msgstr ""

#: ../scenario_legacy_lb.rst:220 ../scenario_legacy_lb.rst:317
msgid ""
"Although the diagram shows both VXLAN and VLAN project networks, the packet "
"flow only considers one instance using a VXLAN project network."
msgstr ""

#: ../scenario_legacy_lb.rst:225 ../scenario_legacy_lb.rst:254
#: ../scenario_legacy_lb.rst:330 ../scenario_legacy_lb.rst:351
msgid "For VXLAN project networks:"
msgstr ""

#: ../scenario_legacy_lb.rst:227
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the tunnel "
"bridge ``qbr``. The packet contains destination MAC address *TG* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_legacy_lb.rst:230 ../scenario_legacy_lb.rst:417
#: ../scenario_legacy_lb.rst:494
msgid ""
"Security group rules (2) on the tunnel bridge ``qbr`` handle state tracking "
"for the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:232 ../scenario_legacy_lb.rst:419
#: ../scenario_legacy_lb.rst:496
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the logical tunnel "
"interface ``vxlan-sid`` (3) where *sid* contains the project network "
"segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:235 ../scenario_legacy_lb.rst:422
#: ../scenario_legacy_lb.rst:499
msgid "The physical tunnel interface forwards the packet to the network node."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:238 ../scenario_legacy_lb.rst:265
#: ../scenario_legacy_lb.rst:339 ../scenario_legacy_lb.rst:363
#: ../scenario_legacy_ovs.rst:239 ../scenario_legacy_ovs.rst:259
#: ../scenario_legacy_ovs.rst:337 ../scenario_legacy_ovs.rst:357
#: ../scenario_legacy_ovs.rst:429 ../scenario_legacy_ovs.rst:449
#: ../scenario_legacy_ovs.rst:477 ../scenario_legacy_ovs.rst:497
#: ../scenario_legacy_ovs.rst:564 ../scenario_legacy_ovs.rst:584
msgid "For VLAN project networks:"
msgstr ""

#: ../scenario_legacy_lb.rst:240
msgid ""
"The instance 1 ``tap`` interface forwards the packet to the VLAN bridge "
"``qbr``. The packet contains destination MAC address *TG* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_legacy_lb.rst:243
msgid ""
"Security group rules on the VLAN bridge ``qbr`` handle state tracking for "
"the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:245 ../scenario_legacy_lb.rst:343
msgid ""
"The VLAN bridge ``qbr`` forwards the packet to the logical VLAN interface "
"``device.sid`` where *device* references the underlying physical VLAN "
"interface and *sid* contains the project network segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:249
msgid ""
"The logical VLAN interface ``device.sid`` forwards the packet to the network "
"node via the physical VLAN interface."
msgstr ""

#: ../scenario_legacy_lb.rst:256 ../scenario_legacy_lb.rst:427
#: ../scenario_legacy_lb.rst:504
msgid ""
"The physical tunnel interface forwards the packet to the logical tunnel "
"interface ``vxlan-sid`` (4) where *sid* contains the project network "
"segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:259 ../scenario_legacy_lb.rst:356
#: ../scenario_legacy_lb.rst:430 ../scenario_legacy_lb.rst:507
msgid ""
"The logical tunnel interface ``vxlan-sid`` forwards the packet to the tunnel "
"bridge ``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:261
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the ``qr`` interface (5) in "
"the router namespace ``qrouter``. The ``qr`` interface contains the project "
"network router interface IP address *TG*."
msgstr ""

#: ../scenario_legacy_lb.rst:267 ../scenario_legacy_lb.rst:365
msgid ""
"The physical VLAN interface forwards the packet to the logical VLAN "
"interface ``device.sid`` where *device* references the underlying physical "
"VLAN interface and *sid* contains the project network segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:271 ../scenario_legacy_lb.rst:369
msgid ""
"The logical VLAN interface ``device.sid`` forwards the packet to the VLAN "
"bridge ``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:273
msgid ""
"The VLAN bridge ``qbr`` forwards the packet to the ``qr`` interface in the "
"router namespace ``qrouter``. The ``qr`` interface contains the project "
"network 1 gateway IP address *TG*."
msgstr ""

#: ../scenario_legacy_lb.rst:277
msgid ""
"The *iptables* service (6) performs SNAT on the packet using the ``qg`` "
"interface (7) as the source IP address. The ``qg`` interface contains the "
"project network router interface IP address *TR*."
msgstr ""

#: ../scenario_legacy_lb.rst:280
msgid ""
"The router namespace ``qrouter`` forwards the packet to the external bridge "
"``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:282
msgid ""
"The external bridge ``qbr`` forwards the packet to the external network via "
"the physical external interface."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:292 ../scenario_legacy_ovs.rst:297
msgid "Case 2: North-south for instances with a floating IP address"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:294 ../scenario_legacy_ovs.rst:299
msgid ""
"For instances with a floating IP address, the network node routes *north-"
"south* network traffic between project and external networks."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:314 ../scenario_legacy_ovs.rst:319
msgid "The instance receives a packet from a host on the external network."
msgstr ""

#: ../scenario_legacy_lb.rst:322
msgid ""
"The physical external interface forwards the packet to the external bridge "
"``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:324
msgid ""
"The external bridge ``qbr`` forwards the packet to the ``qg`` interface (1) "
"in the router namespace ``qrouter``. The ``qg`` interface contains the "
"instance floating IP address *F1*."
msgstr ""

#: ../scenario_legacy_lb.rst:327
msgid ""
"The *iptables* service (2) performs DNAT on the packet using the ``qr`` "
"interface (3) as the source IP address. The ``qr`` interface contains the "
"project network gateway IP address *TR*."
msgstr ""

#: ../scenario_legacy_lb.rst:332
msgid ""
"The router namespace ``qrouter`` forwards the packet to the tunnel bridge "
"``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:334
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the logical tunnel "
"interface ``vxlan-sid`` (4) where *sid* contains the project network "
"segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:337
msgid "The physical tunnel interface forwards the packet to compute node 1."
msgstr ""

#: ../scenario_legacy_lb.rst:341 ../scenario_legacy_lb.rst:439
msgid ""
"The router namespace ``qrouter`` forwards the packet to the VLAN bridge "
"``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:347
msgid "The physical VLAN interface forwards the packet to compute node 1."
msgstr ""

#: ../scenario_legacy_lb.rst:353
msgid ""
"The physical tunnel interface forwards the packet to the logical tunnel "
"interface ``vxlan-sid`` (5) where *sid* contains the project network "
"segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:358
msgid ""
"Security group rules (6) on the tunnel bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:360
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the ``tap`` interface (7) "
"on instance 1."
msgstr ""

#: ../scenario_legacy_lb.rst:371
msgid ""
"Security group rules on the VLAN bridge ``qbr`` handle firewalling and state "
"tracking for the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:373
msgid ""
"The VLAN bridge ``qbr`` forwards the packet to the ``tap`` interface on "
"instance 1."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:383 ../scenario_legacy_ovs.rst:389
msgid "Case 3: East-west for instances on different networks"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:385 ../scenario_legacy_ovs.rst:391
msgid ""
"For instances with a fixed or floating IP address, the network node routes "
"*east-west* network traffic among project networks using the same project "
"router."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:391 ../scenario_legacy_lb.rst:473
#: ../scenario_legacy_ovs.rst:397 ../scenario_legacy_ovs.rst:537
msgid "Network: 192.168.1.0/24"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:392 ../scenario_legacy_ovs.rst:398
msgid "Gateway: 192.168.1.1 with MAC address *TG1*"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:396 ../scenario_legacy_ovs.rst:402
msgid "Network: 192.168.2.0/24"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:397 ../scenario_legacy_ovs.rst:403
msgid "Gateway: 192.168.2.1 with MAC address *TG2*"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:401 ../scenario_legacy_lb.rst:477
#: ../scenario_legacy_ovs.rst:407 ../scenario_legacy_ovs.rst:541
msgid "Instance 1: 192.168.1.11 with MAC address *I1*"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:405 ../scenario_legacy_ovs.rst:411
msgid "Instance 2: 192.168.2.11 with MAC address *I2*"
msgstr ""

#: ../scenario_legacy_lb.rst:407
msgid "Instance 1 resides on compute node 1 and uses VXLAN project network 1."
msgstr ""

#: ../scenario_legacy_lb.rst:408
msgid "Instance 2 resides on compute node 2 and uses VLAN project network 2."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:409 ../scenario_legacy_ovs.rst:415
msgid "Both project networks reside on the same router."
msgstr ""

#: ../scenario_legacy_lb.rst:414 ../scenario_legacy_lb.rst:491
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the tunnel "
"bridge ``qbr``. The packet contains destination MAC address *TG1* because "
"the destination resides on another network."
msgstr ""

#: ../scenario_legacy_lb.rst:432
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the ``qr-1`` interface (5) "
"in the router namespace ``qrouter``. The ``qr-1`` interface contains the "
"project network 1 gateway IP address *TG1*."
msgstr ""

#: ../scenario_legacy_lb.rst:436
msgid ""
"The router namespace ``qrouter`` routes the packet (6) to the ``qr-2`` "
"interface (7). The ``qr-2`` interface contains the project network 2 gateway "
"IP address *TG2*."
msgstr ""

#: ../scenario_legacy_lb.rst:441
msgid ""
"The VLAN bridge ``qbr`` forwards the packet to the logical VLAN interface "
"``vlan.sid`` (8) where *sid* contains the project network segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:444
msgid "The physical VLAN interface forwards the packet to compute node 2."
msgstr ""

#: ../scenario_legacy_lb.rst:448
msgid ""
"The physical VLAN interface forwards the packet to the logical VLAN "
"interface ``vlan.sid`` (9) where *sid* contains the project network "
"segmentation ID."
msgstr ""

#: ../scenario_legacy_lb.rst:451
msgid ""
"The logical VLAN interface ``vlan.sid`` forwards the packet to the VLAN "
"bridge ``qbr``."
msgstr ""

#: ../scenario_legacy_lb.rst:453
msgid ""
"Security group rules (10) on the VLAN bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:455
msgid ""
"The VLAN bridge ``qbr`` forwards the packet to the ``tap`` interface (11) on "
"instance 2."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:465 ../scenario_legacy_ovs.rst:529
msgid "Case 4: East-west for instances on the same network"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:467 ../scenario_legacy_ovs.rst:531
msgid ""
"For instances with a fixed or floating IP address, the project network "
"switches *east-west* network traffic among instances without using a project "
"router on the network node."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:481 ../scenario_legacy_ovs.rst:545
msgid "Instance 2: 192.168.1.12 with MAC address *I2*"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:483 ../scenario_legacy_ovs.rst:547
#: ../scenario_provider_lb.rst:302 ../scenario_provider_ovs.rst:319
msgid "Instance 1 resides on compute node 1."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:484 ../scenario_legacy_ovs.rst:548
#: ../scenario_provider_lb.rst:303 ../scenario_provider_ovs.rst:320
msgid "Instance 2 resides on compute node 2."
msgstr ""

#: ../scenario_legacy_lb.rst:485
msgid "Both instances use the same VXLAN project network."
msgstr ""

#: ../scenario_legacy_lb.rst:487
msgid "The Linux bridge agent handles switching within the project network."
msgstr ""

#: ../scenario_legacy_lb.rst:509
msgid ""
"Security group rules (5) on the tunnel bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_legacy_lb.rst:511
msgid ""
"The tunnel bridge ``qbr`` forwards the packet to the ``tap`` interface (6) "
"on instance 2."
msgstr ""

#: ../scenario_legacy_lb.rst:729
msgid ""
"Replace ``PROJECT_VLAN_INTERFACE`` with the name of the underlying interface "
"that handles VLAN project networks and external networks, respectively. "
"Replace ``TUNNEL_INTERFACE_IP_ADDRESS`` with the IP address of the interface "
"that handles VXLAN project networks."
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:917 ../scenario_legacy_ovs.rst:1020
msgid ""
"On the network node, verify creation of the ``qrouter`` and ``qdhcp`` "
"namespaces:"
msgstr ""

# #-#-#-#-#  scenario_legacy_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_lb.rst:927 ../scenario_legacy_ovs.rst:1030
#: ../scenario_provider_lb.rst:576 ../scenario_provider_ovs.rst:627
msgid "The ``qdhcp`` namespace might not exist until launching an instance."
msgstr ""

#: ../scenario_legacy_ovs.rst:3
msgid "Scenario: Legacy with Open vSwitch"
msgstr ""

#: ../scenario_legacy_ovs.rst:5
msgid ""
"This scenario describes a legacy (basic) implementation of the OpenStack "
"Networking service using the ML2 plug-in with Open vSwitch (OVS)."
msgstr ""

#: ../scenario_legacy_ovs.rst:78
msgid ""
"One network node with four network interfaces: management, project tunnel "
"networks, VLAN project networks, and external (typically the Internet). The "
"Open vSwitch bridge ``br-vlan`` must contain a port on the VLAN interface "
"and Open vSwitch bridge ``br-ex`` must contain a port on the external "
"interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:83
msgid ""
"At least one compute node with three network interfaces: management, project "
"tunnel networks, and VLAN project networks. The Open vSwitch bridge ``br-"
"vlan`` must contain a port on the VLAN interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:87
msgid ""
"To improve understanding of network traffic flow, the network and compute "
"nodes contain a separate network interface for VLAN project networks. In "
"production environments, VLAN project networks can use any Open vSwitch "
"bridge with access to a network interface. For example, the ``br-tun`` "
"bridge."
msgstr ""

#: ../scenario_legacy_ovs.rst:108
msgid ""
"For VLAN external and project networks, the physical network infrastructure "
"must support VLAN tagging. For best performance with VXLAN and GRE project "
"networks, the network infrastructure should support jumbo frames."
msgstr ""

#: ../scenario_legacy_ovs.rst:151
msgid ""
"The legacy architecture provides basic virtual networking components in your "
"environment. Routing among project and external networks resides completely "
"on the network node. Although more simple to deploy than other "
"architectures, performing all functions on the network node creates a single "
"point of failure and potential performance issues. Consider deploying DVR or "
"L3 HA architectures in production environments to provide redundancy and "
"increase performance."
msgstr ""

#: ../scenario_legacy_ovs.rst:186
msgid ""
"Linux bridges handling security groups. Due to limitations with Open vSwitch "
"and *iptables*, the Networking service uses a Linux bridge to manage "
"security groups for instances."
msgstr ""

#: ../scenario_legacy_ovs.rst:237 ../scenario_legacy_ovs.rst:335
msgid ""
"The Open vSwitch integration bridge ``br-int`` adds the internal tag for the "
"project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:241 ../scenario_legacy_ovs.rst:339
#: ../scenario_legacy_ovs.rst:431 ../scenario_legacy_ovs.rst:479
#: ../scenario_legacy_ovs.rst:566
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"Open vSwitch VLAN bridge ``br-vlan``."
msgstr ""

#: ../scenario_legacy_ovs.rst:243 ../scenario_legacy_ovs.rst:341
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` replaces the internal tag with the "
"actual VLAN tag of the project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:245 ../scenario_legacy_ovs.rst:435
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` forwards the packet to the network "
"node via the VLAN interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:248 ../scenario_legacy_ovs.rst:268
#: ../scenario_legacy_ovs.rst:346 ../scenario_legacy_ovs.rst:366
#: ../scenario_legacy_ovs.rst:438 ../scenario_legacy_ovs.rst:458
#: ../scenario_legacy_ovs.rst:486 ../scenario_legacy_ovs.rst:506
#: ../scenario_legacy_ovs.rst:573 ../scenario_legacy_ovs.rst:593
msgid "For VXLAN and GRE project networks:"
msgstr ""

#: ../scenario_legacy_ovs.rst:252 ../scenario_legacy_ovs.rst:350
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` wraps the packet in a VXLAN or GRE "
"tunnel and adds a tag to identify the project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:261 ../scenario_legacy_ovs.rst:359
#: ../scenario_legacy_ovs.rst:451 ../scenario_legacy_ovs.rst:499
#: ../scenario_legacy_ovs.rst:586
msgid ""
"The VLAN interface forwards the packet to the Open vSwitch VLAN bridge ``br-"
"vlan``."
msgstr ""

#: ../scenario_legacy_ovs.rst:263 ../scenario_legacy_ovs.rst:361
#: ../scenario_legacy_ovs.rst:453 ../scenario_legacy_ovs.rst:501
#: ../scenario_legacy_ovs.rst:588
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` forwards the packet to the Open "
"vSwitch integration bridge ``br-int``."
msgstr ""

#: ../scenario_legacy_ovs.rst:265
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"of the project network with the internal tag."
msgstr ""

#: ../scenario_legacy_ovs.rst:272 ../scenario_legacy_ovs.rst:370
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` unwraps the packet and adds the "
"internal tag for the project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:277
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"``qr`` interface (3) in the router namespace ``qrouter``. The ``qr`` "
"interface contains the project network gateway IP address *TG*."
msgstr ""

#: ../scenario_legacy_ovs.rst:280
msgid ""
"The *iptables* service (4) performs SNAT on the packet using the ``qg`` "
"interface (5) as the source IP address. The ``qg`` interface contains the "
"project network router interface IP address *TR*."
msgstr ""

#: ../scenario_legacy_ovs.rst:283
msgid ""
"The router namespace ``qrouter`` forwards the packet to the Open vSwitch "
"integration bridge ``br-int`` via the ``qg`` interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:285
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"Open vSwitch external bridge ``br-ex``."
msgstr ""

#: ../scenario_legacy_ovs.rst:323
msgid ""
"The external interface forwards the packet to the Open vSwitch external "
"bridge ``br-ex``."
msgstr ""

#: ../scenario_legacy_ovs.rst:325
msgid ""
"The Open vSwitch external bridge ``br-ex`` forwards the packet to the Open "
"vSwitch integration bridge ``br-int``."
msgstr ""

#: ../scenario_legacy_ovs.rst:327
msgid ""
"The Open vSwitch integration bridge forwards the packet to the ``qg`` "
"interface (1) in the router namespace ``qrouter``. The ``qg`` interface "
"contains the instance 1 floating IP address *F1*."
msgstr ""

#: ../scenario_legacy_ovs.rst:330
msgid ""
"The *iptables* service (2) performs DNAT on the packet using the ``qr`` "
"interface (3) as the source IP address. The ``qr`` interface contains the "
"project network router interface IP address *TR1*."
msgstr ""

#: ../scenario_legacy_ovs.rst:333 ../scenario_legacy_ovs.rst:473
msgid ""
"The router namespace ``qrouter`` forwards the packet to the Open vSwitch "
"integration bridge ``br-int``."
msgstr ""

#: ../scenario_legacy_ovs.rst:343
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` forwards the packet to the compute "
"node via the VLAN interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:352
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` forwards the packet to the compute "
"node via the tunnel interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:363
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"the project network with the internal tag."
msgstr ""

# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_ovs.rst:377 ../scenario_provider_ovs.rst:356
msgid ""
"Security group rules (4) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_legacy_ovs.rst:379
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the ``tap`` interface (5) on "
"instance 1."
msgstr ""

#: ../scenario_legacy_ovs.rst:427
msgid ""
"The Open vSwitch integration bridge ``br-int`` adds the internal tag for "
"project network 1."
msgstr ""

#: ../scenario_legacy_ovs.rst:433 ../scenario_legacy_ovs.rst:568
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` replaces the internal tag with the "
"actual VLAN tag of project network 1."
msgstr ""

#: ../scenario_legacy_ovs.rst:442 ../scenario_legacy_ovs.rst:577
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` wraps the packet in a VXLAN or GRE "
"tunnel and adds a tag to identify project network 1."
msgstr ""

#: ../scenario_legacy_ovs.rst:455
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"of project network 1 with the internal tag."
msgstr ""

#: ../scenario_legacy_ovs.rst:467
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"``qr-1`` interface (3) in the router namespace ``qrouter``. The ``qr-1`` "
"interface contains the project network 1 gateway IP address *TG1*."
msgstr ""

#: ../scenario_legacy_ovs.rst:470
msgid ""
"The router namespace ``qrouter`` routes the packet to the ``qr-2`` interface "
"(4). The ``qr-2`` interface contains the project network 2 gateway IP "
"address *TG2*."
msgstr ""

#: ../scenario_legacy_ovs.rst:475
msgid ""
"The Open vSwitch integration bridge ``br-int`` adds the internal tag for "
"project network 2."
msgstr ""

#: ../scenario_legacy_ovs.rst:481
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` replaces the internal tag with the "
"actual VLAN tag of project network 2."
msgstr ""

#: ../scenario_legacy_ovs.rst:483
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` forwards the packet to compute node "
"2 via the VLAN interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:490
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` wraps the packet in a VXLAN or GRE "
"tunnel and adds a tag to identify project network 2."
msgstr ""

#: ../scenario_legacy_ovs.rst:503 ../scenario_legacy_ovs.rst:590
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"of project network 2 with the internal tag."
msgstr ""

#: ../scenario_legacy_ovs.rst:510 ../scenario_legacy_ovs.rst:597
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` unwraps the packet and adds the "
"internal tag for project network 2."
msgstr ""

# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_ovs.rst:517 ../scenario_provider_ovs.rst:290
msgid ""
"Security group rules (5) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_ovs.rst:519 ../scenario_provider_ovs.rst:292
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the ``tap`` interface (6) on "
"instance 2."
msgstr ""

#: ../scenario_legacy_ovs.rst:549
msgid "Both instances use the same project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:551
msgid "The Open vSwitch agent handles switching within the project network."
msgstr ""

#: ../scenario_legacy_ovs.rst:555
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the VLAN bridge "
"``qbr``. The packet contains destination MAC address *I2* because the "
"destination resides on the same network."
msgstr ""

#: ../scenario_legacy_ovs.rst:558
msgid ""
"Security group rules (2) on the provider bridge ``qbr`` handle state "
"tracking for the packet."
msgstr ""

# #-#-#-#-#  scenario_legacy_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_legacy_ovs.rst:562 ../scenario_provider_ovs.rst:261
msgid ""
"The Open vSwitch integration bridge ``br-int`` adds the internal tag for "
"provider network 1."
msgstr ""

#: ../scenario_legacy_ovs.rst:570
msgid ""
"The Open vSwitch VLAN bridge ``br-vlan`` forwards the packet to the compute "
"node 2 via the VLAN interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:579
msgid ""
"The Open vSwitch tunnel bridge ``br-tun`` forwards the packet to the compute "
"node 2 via the tunnel interface."
msgstr ""

#: ../scenario_legacy_ovs.rst:604
msgid ""
"Security group rules (3) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_legacy_ovs.rst:606
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the ``tap`` interface (4) on "
"instance 2."
msgstr ""

#: ../scenario_provider_lb.rst:3
msgid "Scenario: Provider networks with Linux bridge"
msgstr ""

#: ../scenario_provider_lb.rst:5
msgid ""
"This scenario describes a provider networks implementation of the OpenStack "
"Networking service using the ML2 plug-in with Linux bridge."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:8 ../scenario_provider_ovs.rst:8
msgid ""
"Provider networks generally offer simplicity, performance, and reliability "
"at the cost of flexibility. Unlike other scenarios, only administrators can "
"manage provider networks because they require configuration of physical "
"network infrastructure. Also, provider networks lack the concept of fixed "
"and floating IP addresses because they only handle layer-2 connectivity for "
"instances."
msgstr ""

#: ../scenario_provider_lb.rst:15
msgid ""
"In many cases, operators who are already familiar with virtual networking "
"architectures that rely on physical network infrastructure for layer-2, "
"layer-3, or other services can seamlessly deploy the OpenStack Networking "
"service. In particular, this scenario appeals to operators looking to "
"migrate from the Compute networking service (nova-net) to the OpenStack "
"Networking service. Over time, operators can build on this minimal "
"deployment to enable more cloud networking features."
msgstr ""

#: ../scenario_provider_lb.rst:23
msgid ""
"Before OpenStack Networking introduced Distributed Virtual Routers (DVR), "
"all network traffic traversed one or more dedicated network nodes which "
"limited performance and reliability. Physical network infrastructures "
"typically offer better performance and reliability than general-purpose "
"hosts that handle various network operations in software."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:29 ../scenario_provider_ovs.rst:26
msgid ""
"In general, the OpenStack Networking software components that handle layer-3 "
"operations impact performance and reliability the most. To improve "
"performance and reliability, provider networks move layer-3 operations to "
"the physical network infrastructure."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:34 ../scenario_provider_ovs.rst:31
msgid ""
"In one particular use case, the OpenStack deployment resides in a mixed "
"environment with conventional virtualization and bare-metal hosts that use a "
"sizable physical network infrastructure. Applications that run inside the "
"OpenStack deployment might require direct layer-2 access, typically using "
"VLANs, to applications outside of the deployment."
msgstr ""

#: ../scenario_provider_lb.rst:40
msgid ""
"In comparison to provider networks with Open vSwitch (OVS), this scenario "
"relies completely on native Linux networking services which makes it the "
"simplest of all scenarios in this guide."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:44 ../scenario_provider_ovs.rst:37
msgid ""
"The example configuration creates a VLAN provider network. However, it also "
"supports flat (untagged or native) provider networks."
msgstr ""

#: ../scenario_provider_lb.rst:50
msgid ""
"These prerequisites define the minimum physical infrastructure and OpenStack "
"service dependencies that you need to deploy this scenario. For example, the "
"Networking service immediately depends on the Identity service, and the "
"Compute service immediately depends on the Networking service. These "
"dependencies lack services such as the Image service because the Networking "
"service does not immediately depend on it. However, the Compute service "
"depends on the Image service to launch an instance. The example "
"configuration in this scenario assumes basic configuration knowledge of "
"Networking service components."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:59 ../scenario_provider_ovs.rst:52
msgid ""
"For illustration purposes, the management network uses 10.0.0.0/24 and "
"provider networks use 192.0.2.0/24, 198.51.100.0/24, and 203.0.113.0/24."
msgstr ""

#: ../scenario_provider_lb.rst:65
msgid ""
"One controller node with two network interfaces: management and provider. "
"The provider interface connects to a generic network that physical network "
"infrastructure switches/routes to external networks (typically the Internet)."
msgstr ""

#: ../scenario_provider_lb.rst:69
msgid ""
"At least two compute nodes with two network interfaces: management and "
"provider. The provider interface connects to a generic network that physical "
"network infrastructure switches/routes to external networks (typically the "
"Internet)."
msgstr ""

#: ../scenario_provider_lb.rst:94
msgid ""
"Neutron server service, ML2 plug-in, Linux bridge agent, DHCP agent, and any "
"dependencies."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:109 ../scenario_provider_ovs.rst:105
msgid ""
"The general provider network architecture uses physical network "
"infrastructure to handle switching and routing of network traffic."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:115 ../scenario_provider_ovs.rst:111
msgid "The controller node contains the following network components:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:120 ../scenario_provider_ovs.rst:116
msgid ""
"DHCP agent managing the ``qdhcp`` namespaces. The ``qdhcp`` namespaces "
"provide DHCP services for instances using provider networks."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:130 ../scenario_provider_lb.rst:146
#: ../scenario_provider_ovs.rst:126 ../scenario_provider_ovs.rst:147
msgid ""
"For illustration purposes, the diagram contains two different provider "
"networks."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:158 ../scenario_provider_ovs.rst:164
msgid "Case 1: North-south"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:160 ../scenario_provider_ovs.rst:166
msgid ""
"The physical network infrastructure handles routing and potentially other "
"services between the provider and external network. In this case, *provider* "
"and *external* simply differentiate between a network available to instances "
"and a network only accessible via router, respectively, to illustrate that "
"the physical network infrastructure handles routing. However, provider "
"networks support direct connection to *external* networks such as the "
"Internet."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:172 ../scenario_provider_ovs.rst:178
msgid "Provider network (VLAN)"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:174 ../scenario_provider_ovs.rst:180
msgid "Network 192.0.2.0/24"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:175 ../scenario_provider_ovs.rst:181
msgid "Gateway 192.0.2.1 with MAC address *TG*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:179 ../scenario_provider_ovs.rst:185
msgid "Instance 1 192.0.2.11 with MAC address *I1*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:181 ../scenario_provider_ovs.rst:187
msgid "Instance 1 resides on compute node 1 and uses a provider network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:184 ../scenario_provider_ovs.rst:190
msgid "The following steps involve compute node 1."
msgstr ""

#: ../scenario_provider_lb.rst:186
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the provider "
"bridge ``qbr``. The packet contains destination MAC address *TG* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_provider_lb.rst:189
msgid ""
"Security group rules (2) on the provider bridge ``qbr`` handle firewalling "
"and tracking for the packet."
msgstr ""

#: ../scenario_provider_lb.rst:191 ../scenario_provider_lb.rst:249
#: ../scenario_provider_lb.rst:314
msgid ""
"The provider bridge ``qbr`` forwards the packet to the logical VLAN "
"interface ``device.sid`` where *device* references the underlying physical "
"provider interface and *sid* contains the provider network segmentation ID."
msgstr ""

#: ../scenario_provider_lb.rst:195
msgid ""
"The logical VLAN interface ``device.sid`` forwards the packet to the "
"physical network via the physical provider interface."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:198 ../scenario_provider_lb.rst:256
#: ../scenario_provider_lb.rst:321 ../scenario_provider_ovs.rst:208
#: ../scenario_provider_ovs.rst:270 ../scenario_provider_ovs.rst:342
msgid "The following steps involve the physical network infrastructure:"
msgstr ""

#: ../scenario_provider_lb.rst:200
msgid ""
"A switch (3) handles any VLAN tag operations between the provider network "
"and the router (4)."
msgstr ""

#: ../scenario_provider_lb.rst:202
msgid ""
"A router (4) routes the packet from the provider network to the external "
"network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:204 ../scenario_provider_ovs.rst:214
msgid ""
"A switch (3) handles any VLAN tag operations between the router (4) and the "
"external network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:206 ../scenario_provider_ovs.rst:216
msgid "A switch (3) forwards the packet to the external network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:215 ../scenario_provider_ovs.rst:225
msgid "Case 2: East-west for instances on different networks"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:217 ../scenario_provider_ovs.rst:227
msgid ""
"The physical network infrastructure handles routing between the provider "
"networks."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:220 ../scenario_provider_ovs.rst:230
msgid "Provider network 1"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:222 ../scenario_provider_lb.rst:292
#: ../scenario_provider_ovs.rst:232 ../scenario_provider_ovs.rst:309
msgid "Network: 192.0.2.0/24"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:223 ../scenario_provider_ovs.rst:233
msgid "Gateway: 192.0.2.1 with MAC address *TG1*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:225 ../scenario_provider_ovs.rst:235
msgid "Provider network 2"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:227 ../scenario_provider_ovs.rst:237
msgid "Network: 198.51.100.0/24"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:228 ../scenario_provider_ovs.rst:238
msgid "Gateway: 198.51.100.1 with MAC address *TG2*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:232 ../scenario_provider_lb.rst:296
#: ../scenario_provider_ovs.rst:242 ../scenario_provider_ovs.rst:313
msgid "Instance 1: 192.0.2.11 with MAC address *I1*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:236 ../scenario_provider_ovs.rst:246
msgid "Instance 2: 198.51.100.11 with MAC address *I2*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:238 ../scenario_provider_ovs.rst:248
msgid "Instance 1 resides on compute node 1 and uses provider network 1."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:239 ../scenario_provider_ovs.rst:249
msgid "Instance 2 resides on compute node 2 and uses provider network 2."
msgstr ""

#: ../scenario_provider_lb.rst:244
msgid ""
"The instance 1 ``tap`` interface forwards the packet to the provider bridge "
"``qbr``. The packet contains destination MAC address *TG1* because the "
"destination resides on another network."
msgstr ""

#: ../scenario_provider_lb.rst:247
msgid ""
"Security group rules on the provider bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_provider_lb.rst:253 ../scenario_provider_lb.rst:318
msgid ""
"The logical VLAN interface ``device.sid`` forwards the packet to the "
"physical network infrastructure via the physical provider interface."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:258 ../scenario_provider_ovs.rst:210
#: ../scenario_provider_ovs.rst:272
msgid ""
"A switch (3) handles any VLAN tag operations between provider network 1 and "
"the router (4)."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:260 ../scenario_provider_ovs.rst:274
msgid ""
"A router (4) routes the packet from provider network 1 to provider network 2."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:262 ../scenario_provider_ovs.rst:276
msgid ""
"A switch (3) handles any VLAN tag operations between the router (4) and "
"provider network 2."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:264 ../scenario_provider_ovs.rst:278
msgid "A switch (3) forwards the packet to compute node 2."
msgstr ""

#: ../scenario_provider_lb.rst:268 ../scenario_provider_lb.rst:327
msgid ""
"The physical provider interface forwards the packet to the logical VLAN "
"interface ``device.sid`` where *device* references the underlying physical "
"provider interface and *sid* contains the provider network segmentation ID."
msgstr ""

#: ../scenario_provider_lb.rst:272 ../scenario_provider_lb.rst:331
msgid ""
"The logical VLAN interface ``device.sid`` forwards the packet to the "
"provider bridge ``qbr``."
msgstr ""

#: ../scenario_provider_lb.rst:274
msgid ""
"Security group rules (5) on the provider bridge ``qbr`` handle firewalling "
"and state tracking for the packet."
msgstr ""

#: ../scenario_provider_lb.rst:276
msgid ""
"The provider bridge ``qbr`` forwards the packet to the ``tap`` interface (6) "
"on instance 2."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:285 ../scenario_provider_ovs.rst:302
msgid "Case 3: East-west for instances on the same network"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:287 ../scenario_provider_ovs.rst:304
msgid ""
"The physical network infrastructure handles switching within the provider "
"network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:290 ../scenario_provider_ovs.rst:307
msgid "Provider network"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:300 ../scenario_provider_ovs.rst:317
msgid "Instance 2: 192.0.2.12 with MAC address *I2*"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:304 ../scenario_provider_ovs.rst:321
msgid "Both instances use the same provider network."
msgstr ""

#: ../scenario_provider_lb.rst:309
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the provider "
"bridge ``qbr``. The packet contains destination MAC address *I2* because the "
"destination resides on the same network."
msgstr ""

#: ../scenario_provider_lb.rst:312
msgid ""
"Security group rules (2) on the provider bridge ``qbr`` handle firewalling "
"and state tracking for the packet."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:323 ../scenario_provider_ovs.rst:344
msgid "A switch (3) forwards the packet from compute node 1 to compute node 2."
msgstr ""

#: ../scenario_provider_lb.rst:333
msgid ""
"Security group rules (4) on the provider bridge ``qbr`` handle firewalling "
"and state tracking for the packet."
msgstr ""

#: ../scenario_provider_lb.rst:335
msgid ""
"The provider bridge ``qbr`` forwards the packet to the instance 2 ``tap`` "
"interface (5)."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:351 ../scenario_provider_ovs.rst:374
msgid ""
"The lack of L3 agents in this scenario prevents operation of the "
"conventional metadata agent. You must use a configuration drive to provide "
"instance metadata."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:358 ../scenario_provider_lb.rst:444
#: ../scenario_provider_ovs.rst:381 ../scenario_provider_ovs.rst:481
msgid ""
"Configure the kernel to disable reverse path filtering. Edit the :file:`/etc/"
"sysctl.conf` file:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:382 ../scenario_provider_ovs.rst:405
msgid ""
"The ``service_plugins`` option contains no value because the Networking "
"service does not provide layer-3 services such as routing."
msgstr ""

#: ../scenario_provider_lb.rst:386
msgid ""
"Configure the ML2 plug-in and Linux bridge agent. Edit the :file:`/etc/"
"neutron/plugins/ml2/ml2_conf.ini` file:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:413 ../scenario_provider_lb.rst:481
#: ../scenario_provider_ovs.rst:469 ../scenario_provider_ovs.rst:532
msgid ""
"Replace ``PROVIDER_INTERFACE`` with the name of the underlying interface "
"that handles provider networks. For example, ``eth1``."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:417 ../scenario_provider_ovs.rst:434
msgid ""
"The ``tenant_network_types`` option contains no value because the "
"architecture does not support project (private) networks."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:421 ../scenario_provider_ovs.rst:438
msgid ""
"The ``provider`` value in the ``network_vlan_ranges`` option lacks VLAN ID "
"ranges to support use of arbitrary VLAN IDs."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:509 ../scenario_provider_ovs.rst:560
msgid ""
"This example creates a VLAN provider network. Change the VLAN ID and IP "
"address range to values suitable for your environment."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:513 ../scenario_provider_ovs.rst:564
msgid "Create a provider network:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:538 ../scenario_provider_ovs.rst:589
msgid "The ``shared`` option allows any project to use this network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:540 ../scenario_provider_ovs.rst:591
msgid "Create a subnet on the provider network:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:568 ../scenario_provider_ovs.rst:619
msgid "On the controller node, verify creation of the ``qdhcp`` namespace:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:599 ../scenario_provider_ovs.rst:650
msgid "Launch an instance with an interface on the provider network."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:602 ../scenario_provider_ovs.rst:653
msgid ""
"This example uses a CirrOS image that was manually uploaded into the Image "
"Service"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:641 ../scenario_provider_ovs.rst:692
msgid ""
"Determine the IP address of the instance. The following step uses "
"203.0.113.3."
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:654 ../scenario_provider_ovs.rst:705
msgid ""
"On the controller node or any host with access to the provider network, ping "
"the IP address of the instance:"
msgstr ""

# #-#-#-#-#  scenario_provider_lb.pot (Networking Guide 0.9)  #-#-#-#-#
# #-#-#-#-#  scenario_provider_ovs.pot (Networking Guide 0.9)  #-#-#-#-#
#: ../scenario_provider_lb.rst:670 ../scenario_provider_ovs.rst:721
msgid "Obtain access to the instance."
msgstr ""

#: ../scenario_provider_ovs.rst:3
msgid "Scenario: Provider networks with Open vSwitch"
msgstr ""

#: ../scenario_provider_ovs.rst:5
msgid ""
"This scenario describes a provider networks implementation of the OpenStack "
"Networking service using the ML2 plug-in with Open vSwitch (OVS)."
msgstr ""

#: ../scenario_provider_ovs.rst:15
msgid ""
"In many cases, operators who are already familiar with network architectures "
"that rely on the physical network infrastructure can easily deploy OpenStack "
"Networking on it. Over time, operators can test and implement cloud "
"networking features in their environment."
msgstr ""

#: ../scenario_provider_ovs.rst:20
msgid ""
"Before OpenStack Networking introduced Distributed Virtual Routers (DVR), "
"all network traffic traversed one or more dedicated network nodes, which "
"limited performance and reliability. Physical network infrastructures "
"typically offer better performance and reliability than general-purpose "
"hosts that handle various network operations in software."
msgstr ""

#: ../scenario_provider_ovs.rst:43
msgid ""
"These prerequisites define the minimum physical infrastructure and OpenStack "
"service dependencies that you need to deploy this scenario. For example, the "
"Networking service immediately depends on the Identity service and the "
"Compute service immediately depends on the Networking service. These "
"dependencies lack services such as the Image service because the Networking "
"service does not immediately depend on it. However, the Compute service "
"depends on the Image service to launch an instance. The example "
"configuration in this scenario assumes basic configuration knowledge of "
"Networking service components."
msgstr ""

#: ../scenario_provider_ovs.rst:58
msgid ""
"One controller node with two network interfaces: management and provider. "
"The provider interface connects to a generic network that physical network "
"infrastructure switches/routes to external networks (typically the "
"Internet). The Open vSwitch bridge ``br-provider`` must contain a port on "
"the provider network interface."
msgstr ""

#: ../scenario_provider_ovs.rst:63
msgid ""
"At least two compute nodes with two network interfaces: management and "
"provider. The provider interface connects to a generic network that the "
"physical network infrastructure switches/routes to external networks "
"(typically the Internet). The Open vSwitch bridge ``br-provider`` must "
"contain a port on the provider network interface."
msgstr ""

#: ../scenario_provider_ovs.rst:89
msgid ""
"Neutron server service, Open vSwitch service, ML2 plug-in, Open vSwitch "
"agent, DHCP agent, and any dependencies."
msgstr ""

#: ../scenario_provider_ovs.rst:113
msgid ""
"Open vSwitch agent managing virtual switches, connectivity among them, and "
"interaction via virtual ports with other network components such as "
"namespaces and underlying interfaces."
msgstr ""

#: ../scenario_provider_ovs.rst:131
msgid ""
"Open vSwitch agent managing virtual switches, connectivity among them, and "
"interaction via virtual ports with other network components such as Linux "
"bridges and underlying interfaces."
msgstr ""

#: ../scenario_provider_ovs.rst:159
msgid ""
"Open vSwitch uses VLANs internally to segregate networks that traverse "
"bridges. The VLAN ID usually differs from the segmentation ID of the virtual "
"network."
msgstr ""

#: ../scenario_provider_ovs.rst:195 ../scenario_provider_ovs.rst:257
#: ../scenario_provider_ovs.rst:329
msgid ""
"Security group rules (2) on the Linux bridge ``qbr`` handle firewalling and "
"state tracking for the packet."
msgstr ""

#: ../scenario_provider_ovs.rst:199 ../scenario_provider_ovs.rst:333
msgid ""
"The Open vSwitch integration bridge ``br-int`` adds the internal tag for the "
"provider network."
msgstr ""

#: ../scenario_provider_ovs.rst:201 ../scenario_provider_ovs.rst:263
#: ../scenario_provider_ovs.rst:335
msgid ""
"The Open vSwitch integration bridge ``br-int`` forwards the packet to the "
"Open vSwitch provider bridge ``br-provider``."
msgstr ""

#: ../scenario_provider_ovs.rst:203 ../scenario_provider_ovs.rst:337
msgid ""
"The Open vSwitch provider bridge ``br-provider`` replaces the internal tag "
"with the actual VLAN tag (segmentation ID) of the provider network."
msgstr ""

#: ../scenario_provider_ovs.rst:205
msgid ""
"The Open vSwitch provider bridge ``br-provider`` forwards the packet to the "
"physical network via the provider network interface."
msgstr ""

#: ../scenario_provider_ovs.rst:212
msgid ""
"A router (4) routes the packet from provider network 1 to the external "
"network."
msgstr ""

#: ../scenario_provider_ovs.rst:265
msgid ""
"The Open vSwitch provider bridge ``br-provider`` replaces the internal tag "
"with the actual VLAN tag (segmentation ID) of provider network 1."
msgstr ""

#: ../scenario_provider_ovs.rst:267 ../scenario_provider_ovs.rst:339
msgid ""
"The Open vSwitch VLAN bridge ``br-provider`` forwards the packet to the "
"physical network infrastructure via the provider network interface."
msgstr ""

#: ../scenario_provider_ovs.rst:282 ../scenario_provider_ovs.rst:348
msgid ""
"The provider network interface forwards the packet to the Open vSwitch "
"provider bridge ``br-provider``."
msgstr ""

#: ../scenario_provider_ovs.rst:284 ../scenario_provider_ovs.rst:350
msgid ""
"The Open vSwitch provider bridge ``br-provider`` forwards the packet to the "
"Open vSwitch integration bridge ``br-int``."
msgstr ""

#: ../scenario_provider_ovs.rst:286
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"(segmentation ID) of provider network 2 with the internal tag."
msgstr ""

#: ../scenario_provider_ovs.rst:326
msgid ""
"The instance 1 ``tap`` interface (1) forwards the packet to the Linux bridge "
"``qbr``. The packet contains destination MAC address *I2* because the "
"destination resides on the same network."
msgstr ""

#: ../scenario_provider_ovs.rst:352
msgid ""
"The Open vSwitch integration bridge ``br-int`` replaces the actual VLAN tag "
"(segmentation ID) of provider network 1 with the internal tag."
msgstr ""

#: ../scenario_provider_ovs.rst:358
msgid ""
"The Linux bridge ``qbr`` forwards the packet to the ``tap`` interface (5) on "
"instance 2."
msgstr ""

#: ../scenario_provider_ovs.rst:409
msgid ""
"Configure the ML2 plug-in and Open vSwitch agent. Edit the :file:`/etc/"
"neutron/plugins/ml2/ml2_conf.ini` file:"
msgstr ""

#: ../scenario_provider_ovs.rst:452 ../scenario_provider_ovs.rst:515
msgid "Start the following service:"
msgstr ""

#: ../scenario_provider_ovs.rst:456 ../scenario_provider_ovs.rst:519
msgid "Create the Open vSwitch provider bridge ``br-provider``:"
msgstr ""

#: ../scenario_provider_ovs.rst:462 ../scenario_provider_ovs.rst:525
msgid ""
"Add the provider network interface as a port on the Open vSwitch provider "
"bridge ``br-provider``:"
msgstr ""
